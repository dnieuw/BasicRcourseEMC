[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Basic R Course",
    "section": "",
    "text": "Welcome\nHi, welcome to the Basic R Course manual.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "Importing_Saving.html",
    "href": "Importing_Saving.html",
    "title": "Importing and Saving Data",
    "section": "",
    "text": "Work on the practical on importing and saving data.",
    "crumbs": [
      "Importing and Saving Data"
    ]
  },
  {
    "objectID": "Importing_Saving_practical.html",
    "href": "Importing_Saving_practical.html",
    "title": "1  Importing and Saving Data - Practical",
    "section": "",
    "text": "1.1 Preface\nOpen Rstudio to do the practicals. Note that tasks with * are optional.",
    "crumbs": [
      "Importing and Saving Data",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Importing and Saving Data - Practical</span>"
    ]
  },
  {
    "objectID": "Importing_Saving_practical.html#preface",
    "href": "Importing_Saving_practical.html#preface",
    "title": "1  Importing and Saving Data - Practical",
    "section": "",
    "text": "R packages\nIn this practical, a number of R packages are used. The packages used (with versions that were used to generate the solutions) are:\n\nsurvival (version: 3.5.7)\n\nR version 4.3.2 (2023-10-31 ucrt)\n\n\nDataset\nFor this practical, we will use the heart and retinopathy data sets from the survival package. More details about the data sets can be found in:\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/heart.html\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/retinopathy.html",
    "crumbs": [
      "Importing and Saving Data",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Importing and Saving Data - Practical</span>"
    ]
  },
  {
    "objectID": "Importing_Saving_practical.html#importing-and-saving-data",
    "href": "Importing_Saving_practical.html#importing-and-saving-data",
    "title": "1  Importing and Saving Data - Practical",
    "section": "1.2 Importing and Saving Data",
    "text": "1.2 Importing and Saving Data\n\nSave your work\nIt is important to save your work.\n\nTask 1Hint 1Solution 1\n\n\nSave the vectors numbers &lt;- c(34, 24, 19, 23, 16), numbers_2 &lt;- c(1:200) and treatment &lt;- c(\"yes\", \"yes\", \"no\", \"no\", \"no\", \"yes\"). Use the name new_vectors.\n\n\nUse the function save(...). Note that you need to set the working directory.\n\n\n\nnumbers &lt;- c(34, 24, 19, 23, 16)\nnumbers_2 &lt;- c(1:200)\ntreatment &lt;- c(\"yes\", \"yes\", \"no\", \"no\", \"no\", \"yes\")\nsave(numbers, numbers_2, treatment, file = \"new_vectors.RData\")\n\n\n\n\n\nTask 2 *Hint 2 *Solution 2 *\n\n\nSave the vectors events &lt;- heart$event and eyes &lt;- retinopathy$eye. Use the name vectors_survival.\n\n\nUse the function save(...). Note that you need to set the working directory.\n\n\n\nevents &lt;- heart$event\neyes &lt;- retinopathy$eye\nsave(events, eyes, file = \"vectors_survival.RData\")\n\n\n\n\n\n\nLoad your work\nLet’s continue working on the data sets by loading our results.\n\nTaskHintSolution\n\n\nLoad the file new_vectors.\n\n\nUse the function load(...).\n\n\n\nload(\"new_vectors.RData\")\n\n\n\n\n\n\nRemove your work\nRemove unnecessary objects.\n\nTask 1Hint 1Solution 1\n\n\nRemove the vectors numbers, numbers_2 and treatment.\n\n\nUse the function rm(...).\n\n\n\nrm(numbers, numbers_2, treatment)\n\n\n\n\n\nTask 2 *Hint 2 *Solution 2 *\n\n\nRemove the vectors events and eyes.\n\n\nUse the function rm(...).\n\n\n\nrm(events, eyes)",
    "crumbs": [
      "Importing and Saving Data",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Importing and Saving Data - Practical</span>"
    ]
  },
  {
    "objectID": "Common_Objects.html",
    "href": "Common_Objects.html",
    "title": "Common Objects",
    "section": "",
    "text": "Work on the practical on common objects.",
    "crumbs": [
      "Common Objects"
    ]
  },
  {
    "objectID": "Common_Objects_practical.html",
    "href": "Common_Objects_practical.html",
    "title": "2  Common Objects - Practical",
    "section": "",
    "text": "2.1 Preface\nOpen Rstudio to do the practicals. Note that tasks with * are optional.",
    "crumbs": [
      "Common Objects",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Common Objects - Practical</span>"
    ]
  },
  {
    "objectID": "Common_Objects_practical.html#preface",
    "href": "Common_Objects_practical.html#preface",
    "title": "2  Common Objects - Practical",
    "section": "",
    "text": "R packages\nIn this practical, a number of R packages are used. The packages used (with versions that were used to generate the solutions) are:\n\nsurvival (version: 3.5.7)\n\nR version 4.3.2 (2023-10-31 ucrt)\n\n\nDataset\nFor this practical, we will use the heart and retinopathy data sets from the survival package. More details about the data sets can be found in:\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/heart.html\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/retinopathy.html\nAlways check your data.\n\nTask 1Hint 1Solution 1\n\n\nExplore the heart and retinopathy data sets - print the first six and last six rows.\n\n\nUse the functions head(…) and tail(…) to investigate the data set. Replace the dots with the name of the data set.\n\n\n\nlibrary(survival)\nhead(heart)\n\n  start stop event        age      year surgery transplant id\n1     0   50     1 -17.155373 0.1232033       0          0  1\n2     0    6     1   3.835729 0.2546201       0          0  2\n3     0    1     0   6.297057 0.2655715       0          0  3\n4     1   16     1   6.297057 0.2655715       0          1  3\n5     0   36     0  -7.737166 0.4900753       0          0  4\n6    36   39     1  -7.737166 0.4900753       0          1  4\n\ntail(heart)\n\n    start stop event        age        year surgery transplant  id\n167     0   21     1   1.834360  6.23408624       0          0  99\n168     0   38     0 -12.939083  6.39561944       1          0 100\n169    38   39     0 -12.939083  6.39561944       1          1 100\n170     0   31     0   1.516769  6.41752225       0          0 101\n171     0   11     0  -7.608487  6.47227926       0          0 102\n172     0    6     1  -8.684463 -0.04928131       0          0 103\n\nhead(retinopathy)\n\n  id laser   eye age     type trt futime status risk\n1  5 argon  left  28    adult   1  46.23      0    9\n2  5 argon  left  28    adult   0  46.23      0    9\n3 14 argon right  12 juvenile   1  42.50      0    8\n4 14 argon right  12 juvenile   0  31.30      1    6\n5 16 xenon right   9 juvenile   1  42.27      0   11\n6 16 xenon right   9 juvenile   0  42.27      0   11\n\ntail(retinopathy)\n\n      id laser   eye age     type trt futime status risk\n389 1727 argon right  33    adult   1  49.97      0    9\n390 1727 argon right  33    adult   0   2.90      1   10\n391 1746 argon right   3 juvenile   1  45.90      0   10\n392 1746 argon right   3 juvenile   0   1.43      1   10\n393 1749 argon right  32    adult   1  41.93      0    9\n394 1749 argon right  32    adult   0  41.93      0    9",
    "crumbs": [
      "Common Objects",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Common Objects - Practical</span>"
    ]
  },
  {
    "objectID": "Common_Objects_practical.html#common-r-objects",
    "href": "Common_Objects_practical.html#common-r-objects",
    "title": "2  Common Objects - Practical",
    "section": "2.2 Common R Objects",
    "text": "2.2 Common R Objects\nIt is important to distinguish the different object in R.\n\nVectors\nLet’s investigate some vectors.\n\nTask 1Hint 1Solution 1\n\n\nView the vectors event and age from the heart data set.\n\n\nUse the dollar sign to select the variables.\n\n\n\nheart$event\n\n  [1] 1 1 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1\n [48] 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 1 0 0 1 0 1\n [95] 0 0 0 1 1 1 0 0 0 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1\n[142] 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1\n\nheart$age\n\n  [1] -17.15537303   3.83572895   6.29705681   6.29705681  -7.73716632  -7.73716632 -27.21423682\n  [8]   6.59548255   2.86926762   2.86926762  -2.65023956  -0.83778234  -5.49760438  -5.49760438\n [15]  -0.01916496  -0.01916496   5.19370294   6.57357974   6.57357974   6.01232033   6.01232033\n [22]   5.81519507   1.44832307   1.44832307 -27.66872005   8.84873374   8.84873374  11.12388775\n [29]   7.27994524   7.27994524  -4.65708419  -4.65708419  -5.21560575  -5.21560575  10.35728953\n [36]  10.35728953   3.80013689   3.80013689 -14.77618070 -14.77618070 -17.46475017 -39.21423682\n [43]   6.02327173   6.02327173   2.43394935  -3.08829569  -3.08829569   6.88569473  16.40793977\n [50]  16.40793977   0.90349076   0.90349076  -7.44695414  -7.44695414  -4.53388090   0.92539357\n [57]   0.92539357  13.50034223  13.50034223  -6.52977413  -6.52977413   2.51882272   2.51882272\n [64]   0.48186174   0.48186174  -2.69678303  -2.69678303 -11.55920602  -4.60780287  -5.42094456\n [71] -11.81656400 -11.81656400   0.61054073   0.61054073  -0.90075291  -0.90075291   8.03559206\n [78] -11.34565366 -11.34565366  -2.11362081  -2.11362081   0.73374401   0.73374401  -6.75154004\n [85]  -0.65708419  -0.65708419  -0.20807666   4.45448323   4.45448323  -9.25667351  -9.25667351\n [92]  -6.73511294   0.01642710   0.01642710  -6.61738535  -6.61738535   1.05407255   1.05407255\n [99]   4.56399726  -8.64613279 -15.34017796 -15.34017796   0.81587953   0.81587953   3.29363450\n[106]   3.29363450   5.21286790 -28.44900753 -28.44900753  -2.75975359  -2.75975359  -0.01095140\n[113]  -0.01095140   5.00205339   5.00205339  -0.59137577  -0.59137577 -21.27310062 -21.27310062\n[120]   8.33127995   8.33127995 -18.83367556 -18.83367556   4.18069815   4.08487337   4.08487337\n[127]  -6.88843258   0.70362765   0.70362765   5.78234086   5.78234086  -1.55509925  -1.55509925\n[134]   4.89253936   4.89253936 -18.79808350   5.30869268   5.30869268  -5.28131417  -5.28131417\n[141]  -0.01916496   0.91991786   0.91991786  -1.74674880  -1.74674880   6.36276523   6.36276523\n[148]   3.04722793   3.04722793   4.03285421   4.03285421  -0.40520192  -3.01711157  -3.01711157\n[155]  -0.24914442  -0.24914442  -4.15879535  -4.15879535  -7.71800137  -7.71800137 -21.34976044\n[162] -21.34976044 -24.38329911 -24.38329911 -19.37029432 -19.37029432   1.83436003 -12.93908282\n[169] -12.93908282   1.51676934  -7.60848734  -8.68446270\n\n\n\n\n\n\nTask 2Hint 2Solution 2\n\n\nView the vectors eye and risk from the retinopathy data set.\n\n\nUse the dollar sign to select the variables.\n\n\n\nretinopathy$eye\n\n  [1] left  left  right right right right left  left  left  left  right right right right right\n [16] right right right right right left  left  right right left  left  right right right right\n [31] left  left  left  left  right right right right right right left  left  right right right\n [46] right left  left  left  left  right right right right left  left  left  left  left  left \n [61] left  left  left  left  left  left  left  left  left  left  left  left  right right left \n [76] left  left  left  right right left  left  right right left  left  right right right right\n [91] left  left  left  left  right right right right right right right right left  left  left \n[106] left  right right left  left  left  left  right right left  left  right right right right\n[121] right right left  left  left  left  left  left  left  left  right right left  left  left \n[136] left  right right right right left  left  left  left  right right left  left  left  left \n[151] left  left  left  left  left  left  left  left  right right right right right right left \n[166] left  left  left  left  left  left  left  left  left  right right left  left  left  left \n[181] left  left  right right left  left  right right right right left  left  left  left  right\n[196] right left  left  left  left  left  left  left  left  right right right right left  left \n[211] left  left  right right left  left  left  left  left  left  right right left  left  left \n[226] left  left  left  right right left  left  right right left  left  left  left  left  left \n[241] right right left  left  right right left  left  left  left  left  left  left  left  right\n[256] right left  left  right right right right right right left  left  left  left  left  left \n[271] left  left  left  left  left  left  right right right right left  left  right right right\n[286] right right right right right left  left  right right left  left  right right left  left \n[301] right right right right right right right right left  left  right right left  left  right\n[316] right left  left  right right left  left  left  left  right right right right left  left \n[331] right right left  left  right right left  left  left  left  left  left  left  left  right\n[346] right right right left  left  right right right right right right right right right right\n[361] right right left  left  left  left  left  left  right right left  left  right right right\n[376] right left  left  left  left  right right left  left  left  left  left  left  right right\n[391] right right right right\nLevels: right left\n\nretinopathy$risk\n\n  [1]  9  9  8  6 11 11 11 11  9 10  9  9  8  6  8  9  9 10  9  9  9  9 11 12 11  6  6 10 10  9  9\n [32] 10 12  9  9  9  6  8 11 12  9  9  9 12 10 10 12 11 12  9  9 11  9 11 10 12 11 11 10  9  9  9\n [63] 10  8  9  8  9  9  9 11 11 12 11  8  9  9  9  9 10 12 10  9  8 12 10 12 10 10 11 10 10 10 11\n [94]  9  9  8 10  6  9 12  8  8  9  9  9 10  8  9  9  8 10  9 11 10 10 11  8  9 10  8 10  9  9 10\n[125]  9  9  9 10 12 11  9 12  9  8 12 10 10  9  6  9 12 10 11 11  9  6  9 12 12 12  9 12  8  6 11\n[156] 12 10  9  8 10 11 11  9 12 12 10  8  8  9 11  9 12 11 11 12  9  9  9 12  9  8  8  9 11 11 11\n[187]  9  9 10 12 10 12 10 12 12 12  9 12  9  9  8  6 11 10 10 10  6  8  6 10  6  8 10 10 12 11 10\n[218] 12 12 12  9 10 12  9  9  9  9  9  9 10 12 10 11 11 10  9  9 11  8  9 12 12 11  9  9  9  9  9\n[249] 11 11 10 11 10 11 10  9  9 10 11 11 12 10  9  9 10  9  9 12 10  9 12 11  9  9 11 12  6 10  8\n[280]  8  9  9  9  9  9  9 12 11  9 10 10  9  9  9 10 10 11  8 10  9  9  6 11  9  9 11 10 10 10  9\n[311]  6  6 11 11 11 11 10  9  8 12 11 11 11 11  9 10  8 12  9  9  9  8 11  9 11  9  9  9 12 11 10\n[342]  9  9  9 12 10 12 11 10  9  9  9  9  9  9 10  8 12  9 10 10 10  9  9  9 12 10 12  6  6 11  9\n[373]  9  9 10 12  6  8  9  9 10  8 11 10  8  8 12 11  9 10 10 10  9  9\n\n\n\n\n\n\nTask 3Hint 3Solution 3\n\n\nCreate a numerical vector that consists of the values: 34, 24, 19, 23, 16. Give the name numbers to this new vector.\n\n\nUse the c(…) function. Replace the dots with the numbers.\n\n\n\nnumbers &lt;- c(34, 24, 19, 23, 16)\n\n\n\n\n\nTask 4Hint 4Solution 4\n\n\nCreate a numerical vector that takes the integer values from 1 until 200. Give the name numbers_2 to this new vector.\n\n\nUse the c(…) function. Replace the dots with the numbers.\n\n\n\nnumbers_2 &lt;- c(1:200)\n\n\n\n\n\nTask 5 *Hint 5 *Solution 5 *\n\n\nCreate a categorical vector that consists of the values: yes, yes, no, no, no, yes. Give the name treatment to this new vector.\n\n\nUse the c(…) function. Replace the dots with the categories.\n\n\n\ntreatment &lt;- c(\"yes\", \"yes\", \"no\", \"no\", \"no\", \"yes\")\n\n\n\n\n\n\nMatrices and Data Frames\nLet’s investigate some matrices and data frames.\n\nTask 1Hint 1Solution 1\n\n\nCreate a matrix using the vectors id and age from the heart data set. This matrix should have 2 columns where each column represents each variable.\n\n\nUse the function matrix(…).\n\n\n\nmatrix(c(heart$id, heart$age), , 2) \n\n       [,1]         [,2]\n  [1,]    1 -17.15537303\n  [2,]    2   3.83572895\n  [3,]    3   6.29705681\n  [4,]    3   6.29705681\n  [5,]    4  -7.73716632\n  [6,]    4  -7.73716632\n  [7,]    5 -27.21423682\n  [8,]    6   6.59548255\n  [9,]    7   2.86926762\n [10,]    7   2.86926762\n [11,]    8  -2.65023956\n [12,]    9  -0.83778234\n [13,]   10  -5.49760438\n [14,]   10  -5.49760438\n [15,]   11  -0.01916496\n [16,]   11  -0.01916496\n [17,]   12   5.19370294\n [18,]   13   6.57357974\n [19,]   13   6.57357974\n [20,]   14   6.01232033\n [21,]   14   6.01232033\n [22,]   15   5.81519507\n [23,]   16   1.44832307\n [24,]   16   1.44832307\n [25,]   17 -27.66872005\n [26,]   18   8.84873374\n [27,]   18   8.84873374\n [28,]   19  11.12388775\n [29,]   20   7.27994524\n [30,]   20   7.27994524\n [31,]   21  -4.65708419\n [32,]   21  -4.65708419\n [33,]   22  -5.21560575\n [34,]   22  -5.21560575\n [35,]   23  10.35728953\n [36,]   23  10.35728953\n [37,]   24   3.80013689\n [38,]   24   3.80013689\n [39,]   25 -14.77618070\n [40,]   25 -14.77618070\n [41,]   26 -17.46475017\n [42,]   27 -39.21423682\n [43,]   28   6.02327173\n [44,]   28   6.02327173\n [45,]   29   2.43394935\n [46,]   30  -3.08829569\n [47,]   30  -3.08829569\n [48,]   31   6.88569473\n [49,]   32  16.40793977\n [50,]   32  16.40793977\n [51,]   33   0.90349076\n [52,]   33   0.90349076\n [53,]   34  -7.44695414\n [54,]   34  -7.44695414\n [55,]   35  -4.53388090\n [56,]   36   0.92539357\n [57,]   36   0.92539357\n [58,]   37  13.50034223\n [59,]   37  13.50034223\n [60,]   38  -6.52977413\n [61,]   38  -6.52977413\n [62,]   39   2.51882272\n [63,]   39   2.51882272\n [64,]   40   0.48186174\n [65,]   40   0.48186174\n [66,]   41  -2.69678303\n [67,]   41  -2.69678303\n [68,]   42 -11.55920602\n [69,]   43  -4.60780287\n [70,]   44  -5.42094456\n [71,]   45 -11.81656400\n [72,]   45 -11.81656400\n [73,]   46   0.61054073\n [74,]   46   0.61054073\n [75,]   47  -0.90075291\n [76,]   47  -0.90075291\n [77,]   48   8.03559206\n [78,]   49 -11.34565366\n [79,]   49 -11.34565366\n [80,]   50  -2.11362081\n [81,]   50  -2.11362081\n [82,]   51   0.73374401\n [83,]   51   0.73374401\n [84,]   52  -6.75154004\n [85,]   53  -0.65708419\n [86,]   53  -0.65708419\n [87,]   54  -0.20807666\n [88,]   55   4.45448323\n [89,]   55   4.45448323\n [90,]   56  -9.25667351\n [91,]   56  -9.25667351\n [92,]   57  -6.73511294\n [93,]   58   0.01642710\n [94,]   58   0.01642710\n [95,]   59  -6.61738535\n [96,]   59  -6.61738535\n [97,]   60   1.05407255\n [98,]   60   1.05407255\n [99,]   61   4.56399726\n[100,]   62  -8.64613279\n[101,]   63 -15.34017796\n[102,]   63 -15.34017796\n[103,]   64   0.81587953\n[104,]   64   0.81587953\n[105,]   65   3.29363450\n[106,]   65   3.29363450\n[107,]   66   5.21286790\n[108,]   67 -28.44900753\n[109,]   67 -28.44900753\n[110,]   68  -2.75975359\n[111,]   68  -2.75975359\n[112,]   69  -0.01095140\n[113,]   69  -0.01095140\n[114,]   70   5.00205339\n[115,]   70   5.00205339\n[116,]   71  -0.59137577\n[117,]   71  -0.59137577\n[118,]   72 -21.27310062\n[119,]   72 -21.27310062\n[120,]   73   8.33127995\n[121,]   73   8.33127995\n[122,]   74 -18.83367556\n[123,]   74 -18.83367556\n[124,]   75   4.18069815\n[125,]   76   4.08487337\n[126,]   76   4.08487337\n[127,]   77  -6.88843258\n[128,]   78   0.70362765\n[129,]   78   0.70362765\n[130,]   79   5.78234086\n[131,]   79   5.78234086\n[132,]   80  -1.55509925\n[133,]   80  -1.55509925\n[134,]   81   4.89253936\n[135,]   81   4.89253936\n[136,]   82 -18.79808350\n[137,]   83   5.30869268\n[138,]   83   5.30869268\n[139,]   84  -5.28131417\n[140,]   84  -5.28131417\n[141,]   85  -0.01916496\n[142,]   86   0.91991786\n[143,]   86   0.91991786\n[144,]   87  -1.74674880\n[145,]   87  -1.74674880\n[146,]   88   6.36276523\n[147,]   88   6.36276523\n[148,]   89   3.04722793\n[149,]   89   3.04722793\n[150,]   90   4.03285421\n[151,]   90   4.03285421\n[152,]   91  -0.40520192\n[153,]   92  -3.01711157\n[154,]   92  -3.01711157\n[155,]   93  -0.24914442\n[156,]   93  -0.24914442\n[157,]   94  -4.15879535\n[158,]   94  -4.15879535\n[159,]   95  -7.71800137\n[160,]   95  -7.71800137\n[161,]   96 -21.34976044\n[162,]   96 -21.34976044\n[163,]   97 -24.38329911\n[164,]   97 -24.38329911\n[165,]   98 -19.37029432\n[166,]   98 -19.37029432\n[167,]   99   1.83436003\n[168,]  100 -12.93908282\n[169,]  100 -12.93908282\n[170,]  101   1.51676934\n[171,]  102  -7.60848734\n[172,]  103  -8.68446270\n\n\n\n\n\n\nTask 2Hint 2Solution 2\n\n\nCreate a data frame using the vectors id, type and trt from the retinopathy data set. This data frame should have 3 columns, where each column represents each variable.\n\n\nUse the function data.frame(…).\n\n\n\ndata.frame(id = retinopathy$id, type = retinopathy$type, trt = retinopathy$trt) \n\n      id     type trt\n1      5    adult   1\n2      5    adult   0\n3     14 juvenile   1\n4     14 juvenile   0\n5     16 juvenile   1\n6     16 juvenile   0\n7     25 juvenile   1\n8     25 juvenile   0\n9     29 juvenile   1\n10    29 juvenile   0\n11    46 juvenile   1\n12    46 juvenile   0\n13    49 juvenile   1\n14    49 juvenile   0\n15    56 juvenile   1\n16    56 juvenile   0\n17    61 juvenile   1\n18    61 juvenile   0\n19    71    adult   1\n20    71    adult   0\n21   100    adult   1\n22   100    adult   0\n23   112    adult   1\n24   112    adult   0\n25   120    adult   1\n26   120    adult   0\n27   127    adult   1\n28   127    adult   0\n29   133    adult   1\n30   133    adult   0\n31   150 juvenile   1\n32   150 juvenile   0\n33   167    adult   1\n34   167    adult   0\n35   176 juvenile   1\n36   176 juvenile   0\n37   185    adult   1\n38   185    adult   0\n39   190 juvenile   1\n40   190 juvenile   0\n41   202 juvenile   1\n42   202 juvenile   0\n43   214    adult   1\n44   214    adult   0\n45   220 juvenile   1\n46   220 juvenile   0\n47   243 juvenile   1\n48   243 juvenile   0\n49   255 juvenile   1\n50   255 juvenile   0\n51   264 juvenile   1\n52   264 juvenile   0\n53   266    adult   1\n54   266    adult   0\n55   284    adult   1\n56   284    adult   0\n57   295 juvenile   1\n58   295 juvenile   0\n59   300    adult   1\n60   300    adult   0\n61   302 juvenile   1\n62   302 juvenile   0\n63   315 juvenile   1\n64   315 juvenile   0\n65   324    adult   1\n66   324    adult   0\n67   328 juvenile   1\n68   328 juvenile   0\n69   335 juvenile   1\n70   335 juvenile   0\n71   342 juvenile   1\n72   342 juvenile   0\n73   349    adult   1\n74   349    adult   0\n75   357    adult   1\n76   357    adult   0\n77   368 juvenile   1\n78   368 juvenile   0\n79   385 juvenile   1\n80   385 juvenile   0\n81   396    adult   1\n82   396    adult   0\n83   405 juvenile   1\n84   405 juvenile   0\n85   409    adult   1\n86   409    adult   0\n87   419    adult   1\n88   419    adult   0\n89   429    adult   1\n90   429    adult   0\n91   433    adult   1\n92   433    adult   0\n93   445 juvenile   1\n94   445 juvenile   0\n95   454 juvenile   1\n96   454 juvenile   0\n97   468 juvenile   1\n98   468 juvenile   0\n99   480 juvenile   1\n100  480 juvenile   0\n101  485 juvenile   1\n102  485 juvenile   0\n103  491    adult   1\n104  491    adult   0\n105  503    adult   1\n106  503    adult   0\n107  515    adult   1\n108  515    adult   0\n109  522 juvenile   1\n110  522 juvenile   0\n111  538    adult   1\n112  538    adult   0\n113  547    adult   1\n114  547    adult   0\n115  550 juvenile   1\n116  550 juvenile   0\n117  554 juvenile   1\n118  554 juvenile   0\n119  557 juvenile   1\n120  557 juvenile   0\n121  561 juvenile   1\n122  561 juvenile   0\n123  568 juvenile   1\n124  568 juvenile   0\n125  572 juvenile   1\n126  572 juvenile   0\n127  576 juvenile   1\n128  576 juvenile   0\n129  581    adult   1\n130  581    adult   0\n131  606 juvenile   1\n132  606 juvenile   0\n133  610 juvenile   1\n134  610 juvenile   0\n135  615 juvenile   1\n136  615 juvenile   0\n137  618 juvenile   1\n138  618 juvenile   0\n139  624 juvenile   1\n140  624 juvenile   0\n141  631 juvenile   1\n142  631 juvenile   0\n143  636 juvenile   1\n144  636 juvenile   0\n145  645 juvenile   1\n146  645 juvenile   0\n147  653 juvenile   1\n148  653 juvenile   0\n149  662 juvenile   1\n150  662 juvenile   0\n151  664 juvenile   1\n152  664 juvenile   0\n153  683    adult   1\n154  683    adult   0\n155  687 juvenile   1\n156  687 juvenile   0\n157  701 juvenile   1\n158  701 juvenile   0\n159  706    adult   1\n160  706    adult   0\n161  717    adult   1\n162  717    adult   0\n163  722 juvenile   1\n164  722 juvenile   0\n165  731 juvenile   1\n166  731 juvenile   0\n167  740 juvenile   1\n168  740 juvenile   0\n169  749    adult   1\n170  749    adult   0\n171  757 juvenile   1\n172  757 juvenile   0\n173  760 juvenile   1\n174  760 juvenile   0\n175  766    adult   1\n176  766    adult   0\n177  769 juvenile   1\n178  769 juvenile   0\n179  772 juvenile   1\n180  772 juvenile   0\n181  778    adult   1\n182  778    adult   0\n183  780 juvenile   1\n184  780 juvenile   0\n185  793    adult   1\n186  793    adult   0\n187  800    adult   1\n188  800    adult   0\n189  804    adult   1\n190  804    adult   0\n191  810 juvenile   1\n192  810 juvenile   0\n193  815    adult   1\n194  815    adult   0\n195  832 juvenile   1\n196  832 juvenile   0\n197  834 juvenile   1\n198  834 juvenile   0\n199  838    adult   1\n200  838    adult   0\n201  857 juvenile   1\n202  857 juvenile   0\n203  866    adult   1\n204  866    adult   0\n205  887    adult   1\n206  887    adult   0\n207  903    adult   1\n208  903    adult   0\n209  910    adult   1\n210  910    adult   0\n211  920 juvenile   1\n212  920 juvenile   0\n213  925    adult   1\n214  925    adult   0\n215  931 juvenile   1\n216  931 juvenile   0\n217  936 juvenile   1\n218  936 juvenile   0\n219  945 juvenile   1\n220  945 juvenile   0\n221  949 juvenile   1\n222  949 juvenile   0\n223  952 juvenile   1\n224  952 juvenile   0\n225  962 juvenile   1\n226  962 juvenile   0\n227  964 juvenile   1\n228  964 juvenile   0\n229  971    adult   1\n230  971    adult   0\n231  978 juvenile   1\n232  978 juvenile   0\n233  983 juvenile   1\n234  983 juvenile   0\n235  987 juvenile   1\n236  987 juvenile   0\n237 1002 juvenile   1\n238 1002 juvenile   0\n239 1017    adult   1\n240 1017    adult   0\n241 1029    adult   1\n242 1029    adult   0\n243 1034 juvenile   1\n244 1034 juvenile   0\n245 1037    adult   1\n246 1037    adult   0\n247 1042    adult   1\n248 1042    adult   0\n249 1069    adult   1\n250 1069    adult   0\n251 1074 juvenile   1\n252 1074 juvenile   0\n253 1098 juvenile   1\n254 1098 juvenile   0\n255 1102 juvenile   1\n256 1102 juvenile   0\n257 1112 juvenile   1\n258 1112 juvenile   0\n259 1117 juvenile   1\n260 1117 juvenile   0\n261 1126    adult   1\n262 1126    adult   0\n263 1135 juvenile   1\n264 1135 juvenile   0\n265 1145    adult   1\n266 1145    adult   0\n267 1148    adult   1\n268 1148    adult   0\n269 1167 juvenile   1\n270 1167 juvenile   0\n271 1184    adult   1\n272 1184    adult   0\n273 1191    adult   1\n274 1191    adult   0\n275 1205 juvenile   1\n276 1205 juvenile   0\n277 1213 juvenile   1\n278 1213 juvenile   0\n279 1228    adult   1\n280 1228    adult   0\n281 1247 juvenile   1\n282 1247 juvenile   0\n283 1250    adult   1\n284 1250    adult   0\n285 1253 juvenile   1\n286 1253 juvenile   0\n287 1267    adult   1\n288 1267    adult   0\n289 1281    adult   1\n290 1281    adult   0\n291 1287 juvenile   1\n292 1287 juvenile   0\n293 1293 juvenile   1\n294 1293 juvenile   0\n295 1296 juvenile   1\n296 1296 juvenile   0\n297 1309    adult   1\n298 1309    adult   0\n299 1312 juvenile   1\n300 1312 juvenile   0\n301 1317 juvenile   1\n302 1317 juvenile   0\n303 1321 juvenile   1\n304 1321 juvenile   0\n305 1333 juvenile   1\n306 1333 juvenile   0\n307 1347 juvenile   1\n308 1347 juvenile   0\n309 1361 juvenile   1\n310 1361 juvenile   0\n311 1366    adult   1\n312 1366    adult   0\n313 1373 juvenile   1\n314 1373 juvenile   0\n315 1397    adult   1\n316 1397    adult   0\n317 1410    adult   1\n318 1410    adult   0\n319 1413 juvenile   1\n320 1413 juvenile   0\n321 1425    adult   1\n322 1425    adult   0\n323 1447 juvenile   1\n324 1447 juvenile   0\n325 1461    adult   1\n326 1461    adult   0\n327 1469    adult   1\n328 1469    adult   0\n329 1480    adult   1\n330 1480    adult   0\n331 1487    adult   1\n332 1487    adult   0\n333 1491    adult   1\n334 1491    adult   0\n335 1499    adult   1\n336 1499    adult   0\n337 1503    adult   1\n338 1503    adult   0\n339 1513    adult   1\n340 1513    adult   0\n341 1524    adult   1\n342 1524    adult   0\n343 1533    adult   1\n344 1533    adult   0\n345 1537 juvenile   1\n346 1537 juvenile   0\n347 1552 juvenile   1\n348 1552 juvenile   0\n349 1554    adult   1\n350 1554    adult   0\n351 1562    adult   1\n352 1562    adult   0\n353 1572    adult   1\n354 1572    adult   0\n355 1581    adult   1\n356 1581    adult   0\n357 1585    adult   1\n358 1585    adult   0\n359 1596 juvenile   1\n360 1596 juvenile   0\n361 1600 juvenile   1\n362 1600 juvenile   0\n363 1603 juvenile   1\n364 1603 juvenile   0\n365 1619    adult   1\n366 1619    adult   0\n367 1627 juvenile   1\n368 1627 juvenile   0\n369 1636 juvenile   1\n370 1636 juvenile   0\n371 1640 juvenile   1\n372 1640 juvenile   0\n373 1643 juvenile   1\n374 1643 juvenile   0\n375 1649 juvenile   1\n376 1649 juvenile   0\n377 1666 juvenile   1\n378 1666 juvenile   0\n379 1672 juvenile   1\n380 1672 juvenile   0\n381 1683    adult   1\n382 1683    adult   0\n383 1688 juvenile   1\n384 1688 juvenile   0\n385 1705 juvenile   1\n386 1705 juvenile   0\n387 1717    adult   1\n388 1717    adult   0\n389 1727    adult   1\n390 1727    adult   0\n391 1746 juvenile   1\n392 1746 juvenile   0\n393 1749    adult   1\n394 1749    adult   0\n\n\n\n\n\n\n\nArrays\nLet’s investigate some arrays.\n\nTask 1Hint 1Solution 1\n\n\nCreate an array that consists of 2 matrices. Matrix 1 will consist of the values 1:4 and matrix 2 will consist of the values 5:8. Both matrices will have 2 columns and 2 rows.\n\n\nUse the function array(…).\n\n\n\narray(data = 1:8, dim = c(2, 2, 2))\n\n, , 1\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n, , 2\n\n     [,1] [,2]\n[1,]    5    7\n[2,]    6    8\n\n\n\n\n\n\nTask 2 *Hint 2 *Solution 2 *\n\n\nGive the name ar1 to the previous array. Furthermore, investigate the argument dimnames and change the names of the rows, columns and matrices.\n\n\nUse the function array(…). Check the help page for the dimnames argument. Note that this must be in a list format.\n\n\n\nar1 &lt;- array(data = 1:8, dim = c(2, 2, 2), \n             dimnames = list(c(\"Row1\", \"Row2\"), c(\"Col1\", \"Col2\"), c(\"Mat1\", \"Mat2\")))\n\n\n\n\n\n\nLists\nLet’s investigate some lists.\n\nTask 1Hint 1Solution 1\n\n\nCreate a list using the vectors stop from the heart data set and id, risk from the retinopathy data set. Give the names stop_heart, id_reti and risk_reti.\n\n\nUse the function list(…).\n\n\n\nlist(stop_heart = heart$stop, id_reti = retinopathy$id, risk_reti = retinopathy$risk)\n\n$stop_heart\n  [1]   50.0    6.0    1.0   16.0   36.0   39.0   18.0    3.0   51.0  675.0   40.0   85.0   12.0\n [14]   58.0   26.0  153.0    8.0   17.0   81.0   37.0 1387.0    1.0   28.0  308.0   36.0   20.0\n [27]   43.0   37.0   18.0   28.0    8.0 1032.0   12.0   51.0    3.0  733.0   83.0  219.0   25.0\n [40] 1800.0 1401.0  263.0   71.0   72.0   35.0   16.0  852.0   16.0   17.0   77.0   51.0 1587.0\n [53]   23.0 1572.0   12.0   46.0  100.0   19.0   66.0    4.5    5.0    2.0   53.0   41.0 1408.0\n [66]   58.0 1322.0    3.0    2.0   40.0    1.0   45.0    2.0  996.0   21.0   72.0    9.0   36.0\n [79] 1142.0   83.0  980.0   32.0  285.0  102.0   41.0  188.0    3.0   10.0   61.0   67.0  942.0\n [92]  149.0   21.0  343.0   78.0  916.0    3.0   68.0    2.0   69.0   27.0  842.0   33.0  584.0\n[105]   12.0   78.0   32.0   57.0  285.0    3.0   68.0   10.0  670.0    5.0   30.0   31.0  620.0\n[118]    4.0  596.0   27.0   90.0    5.0   17.0    2.0   46.0  545.0   21.0  210.0  515.0   67.0\n[131]   96.0   26.0  482.0    6.0  445.0  428.0   32.0   80.0   37.0  334.0    5.0    8.0  397.0\n[144]   60.0  110.0   31.0  370.0  139.0  207.0  160.0  186.0  340.0  310.0  340.0   28.0  265.0\n[157]    4.0  165.0    2.0   16.0   13.0  180.0   21.0  131.0   96.0  109.0   21.0   38.0   39.0\n[170]   31.0   11.0    6.0\n\n$id_reti\n  [1]    5    5   14   14   16   16   25   25   29   29   46   46   49   49   56   56   61   61   71\n [20]   71  100  100  112  112  120  120  127  127  133  133  150  150  167  167  176  176  185  185\n [39]  190  190  202  202  214  214  220  220  243  243  255  255  264  264  266  266  284  284  295\n [58]  295  300  300  302  302  315  315  324  324  328  328  335  335  342  342  349  349  357  357\n [77]  368  368  385  385  396  396  405  405  409  409  419  419  429  429  433  433  445  445  454\n [96]  454  468  468  480  480  485  485  491  491  503  503  515  515  522  522  538  538  547  547\n[115]  550  550  554  554  557  557  561  561  568  568  572  572  576  576  581  581  606  606  610\n[134]  610  615  615  618  618  624  624  631  631  636  636  645  645  653  653  662  662  664  664\n[153]  683  683  687  687  701  701  706  706  717  717  722  722  731  731  740  740  749  749  757\n[172]  757  760  760  766  766  769  769  772  772  778  778  780  780  793  793  800  800  804  804\n[191]  810  810  815  815  832  832  834  834  838  838  857  857  866  866  887  887  903  903  910\n[210]  910  920  920  925  925  931  931  936  936  945  945  949  949  952  952  962  962  964  964\n[229]  971  971  978  978  983  983  987  987 1002 1002 1017 1017 1029 1029 1034 1034 1037 1037 1042\n[248] 1042 1069 1069 1074 1074 1098 1098 1102 1102 1112 1112 1117 1117 1126 1126 1135 1135 1145 1145\n[267] 1148 1148 1167 1167 1184 1184 1191 1191 1205 1205 1213 1213 1228 1228 1247 1247 1250 1250 1253\n[286] 1253 1267 1267 1281 1281 1287 1287 1293 1293 1296 1296 1309 1309 1312 1312 1317 1317 1321 1321\n[305] 1333 1333 1347 1347 1361 1361 1366 1366 1373 1373 1397 1397 1410 1410 1413 1413 1425 1425 1447\n[324] 1447 1461 1461 1469 1469 1480 1480 1487 1487 1491 1491 1499 1499 1503 1503 1513 1513 1524 1524\n[343] 1533 1533 1537 1537 1552 1552 1554 1554 1562 1562 1572 1572 1581 1581 1585 1585 1596 1596 1600\n[362] 1600 1603 1603 1619 1619 1627 1627 1636 1636 1640 1640 1643 1643 1649 1649 1666 1666 1672 1672\n[381] 1683 1683 1688 1688 1705 1705 1717 1717 1727 1727 1746 1746 1749 1749\n\n$risk_reti\n  [1]  9  9  8  6 11 11 11 11  9 10  9  9  8  6  8  9  9 10  9  9  9  9 11 12 11  6  6 10 10  9  9\n [32] 10 12  9  9  9  6  8 11 12  9  9  9 12 10 10 12 11 12  9  9 11  9 11 10 12 11 11 10  9  9  9\n [63] 10  8  9  8  9  9  9 11 11 12 11  8  9  9  9  9 10 12 10  9  8 12 10 12 10 10 11 10 10 10 11\n [94]  9  9  8 10  6  9 12  8  8  9  9  9 10  8  9  9  8 10  9 11 10 10 11  8  9 10  8 10  9  9 10\n[125]  9  9  9 10 12 11  9 12  9  8 12 10 10  9  6  9 12 10 11 11  9  6  9 12 12 12  9 12  8  6 11\n[156] 12 10  9  8 10 11 11  9 12 12 10  8  8  9 11  9 12 11 11 12  9  9  9 12  9  8  8  9 11 11 11\n[187]  9  9 10 12 10 12 10 12 12 12  9 12  9  9  8  6 11 10 10 10  6  8  6 10  6  8 10 10 12 11 10\n[218] 12 12 12  9 10 12  9  9  9  9  9  9 10 12 10 11 11 10  9  9 11  8  9 12 12 11  9  9  9  9  9\n[249] 11 11 10 11 10 11 10  9  9 10 11 11 12 10  9  9 10  9  9 12 10  9 12 11  9  9 11 12  6 10  8\n[280]  8  9  9  9  9  9  9 12 11  9 10 10  9  9  9 10 10 11  8 10  9  9  6 11  9  9 11 10 10 10  9\n[311]  6  6 11 11 11 11 10  9  8 12 11 11 11 11  9 10  8 12  9  9  9  8 11  9 11  9  9  9 12 11 10\n[342]  9  9  9 12 10 12 11 10  9  9  9  9  9  9 10  8 12  9 10 10 10  9  9  9 12 10 12  6  6 11  9\n[373]  9  9 10 12  6  8  9  9 10  8 11 10  8  8 12 11  9 10 10 10  9  9\n\n\n\n\n\n\nTask 2 *Hint 2 *Solution 2 *\n\n\nCreate a list using the vectors numbers, numbers_2 and treatment. These variables can be taken from the exercise called Vectors. Give the names: numbers, many_numbers and treatment.\n\n\nUse the function list(…).\n\n\n\nlist(numbers = numbers, many_numbers = numbers_2, treatment = treatment)\n\n$numbers\n[1] 34 24 19 23 16\n\n$many_numbers\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23\n [24]  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46\n [47]  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69\n [70]  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92\n [93]  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115\n[116] 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138\n[139] 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161\n[162] 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184\n[185] 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200\n\n$treatment\n[1] \"yes\" \"yes\" \"no\"  \"no\"  \"no\"  \"yes\"",
    "crumbs": [
      "Common Objects",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Common Objects - Practical</span>"
    ]
  },
  {
    "objectID": "Indexing_Subsetting.html",
    "href": "Indexing_Subsetting.html",
    "title": "Indexing and Subsetting",
    "section": "",
    "text": "Work on the practical on indexing and subsetting",
    "crumbs": [
      "Indexing and Subsetting"
    ]
  },
  {
    "objectID": "Indexing_Subsetting_practical.html",
    "href": "Indexing_Subsetting_practical.html",
    "title": "3  Indexing and Subsetting - Practical",
    "section": "",
    "text": "3.1 Preface\nOpen Rstudio to do the practicals. Note that tasks with * are optional.",
    "crumbs": [
      "Indexing and Subsetting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Indexing and Subsetting - Practical</span>"
    ]
  },
  {
    "objectID": "Indexing_Subsetting_practical.html#preface",
    "href": "Indexing_Subsetting_practical.html#preface",
    "title": "3  Indexing and Subsetting - Practical",
    "section": "",
    "text": "R packages\nIn this practical, a number of R packages are used. The packages used (with versions that were used to generate the solutions) are:\n\nsurvival (version: 3.5.7)\n\nR version 4.3.2 (2023-10-31 ucrt)\n\n\nDataset\nFor this practical, we will use the heart and retinopathy data sets from the survival package. More details about the data sets can be found in:\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/heart.html\nhttps://stat.ethz.ch/R-manual/R-devel/library/survival/html/retinopathy.html",
    "crumbs": [
      "Indexing and Subsetting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Indexing and Subsetting - Practical</span>"
    ]
  },
  {
    "objectID": "Indexing_Subsetting_practical.html#indexing-and-subsetting",
    "href": "Indexing_Subsetting_practical.html#indexing-and-subsetting",
    "title": "3  Indexing and Subsetting - Practical",
    "section": "3.2 Indexing and Subsetting",
    "text": "3.2 Indexing and Subsetting\nSometimes we want to obtain a subset of the data sets before investigating the descriptive statistics and performing the statistical analysis.\n\nIndexing\n\nTask 1Solution 1\n\n\nUsing the heart data set:\n\n\nSelect the first row.\n\nSelect the first column.\n\nSelect the column surgery.\n\n\n\n\nheart[1, ]\n\n  start stop event       age      year surgery transplant id\n1     0   50     1 -17.15537 0.1232033       0          0  1\n\nheart[, 1]\n\n  [1]   0.0   0.0   0.0   1.0   0.0  36.0   0.0   0.0   0.0  51.0   0.0   0.0   0.0  12.0   0.0\n [16]  26.0   0.0   0.0  17.0   0.0  37.0   0.0   0.0  28.0   0.0   0.0  20.0   0.0   0.0  18.0\n [31]   0.0   8.0   0.0  12.0   0.0   3.0   0.0  83.0   0.0  25.0   0.0   0.0   0.0  71.0   0.0\n [46]   0.0  16.0   0.0   0.0  17.0   0.0  51.0   0.0  23.0   0.0   0.0  46.0   0.0  19.0   0.0\n [61]   4.5   0.0   2.0   0.0  41.0   0.0  58.0   0.0   0.0   0.0   0.0   1.0   0.0   2.0   0.0\n [76]  21.0   0.0   0.0  36.0   0.0  83.0   0.0  32.0   0.0   0.0  41.0   0.0   0.0  10.0   0.0\n [91]  67.0   0.0   0.0  21.0   0.0  78.0   0.0   3.0   0.0   0.0   0.0  27.0   0.0  33.0   0.0\n[106]  12.0   0.0   0.0  57.0   0.0   3.0   0.0  10.0   0.0   5.0   0.0  31.0   0.0   4.0   0.0\n[121]  27.0   0.0   5.0   0.0   0.0  46.0   0.0   0.0 210.0   0.0  67.0   0.0  26.0   0.0   6.0\n[136]   0.0   0.0  32.0   0.0  37.0   0.0   0.0   8.0   0.0  60.0   0.0  31.0   0.0 139.0   0.0\n[151] 160.0   0.0   0.0 310.0   0.0  28.0   0.0   4.0   0.0   2.0   0.0  13.0   0.0  21.0   0.0\n[166]  96.0   0.0   0.0  38.0   0.0   0.0   0.0\n\nheart[\"surgery\"]\n\n    surgery\n1         0\n2         0\n3         0\n4         0\n5         0\n6         0\n7         0\n8         0\n9         0\n10        0\n11        0\n12        0\n13        0\n14        0\n15        0\n16        0\n17        0\n18        0\n19        0\n20        0\n21        0\n22        1\n23        0\n24        0\n25        0\n26        0\n27        0\n28        0\n29        0\n30        0\n31        0\n32        0\n33        0\n34        0\n35        0\n36        0\n37        0\n38        0\n39        0\n40        0\n41        0\n42        0\n43        0\n44        0\n45        0\n46        0\n47        0\n48        0\n49        0\n50        0\n51        0\n52        0\n53        0\n54        0\n55        0\n56        0\n57        0\n58        0\n59        0\n60        0\n61        0\n62        0\n63        0\n64        1\n65        1\n66        1\n67        1\n68        0\n69        1\n70        1\n71        0\n72        0\n73        1\n74        1\n75        0\n76        0\n77        0\n78        1\n79        1\n80        1\n81        1\n82        0\n83        0\n84        0\n85        0\n86        0\n87        0\n88        0\n89        0\n90        0\n91        0\n92        0\n93        1\n94        1\n95        1\n96        1\n97        0\n98        0\n99        0\n100       0\n101       0\n102       0\n103       1\n104       1\n105       0\n106       0\n107       0\n108       0\n109       0\n110       0\n111       0\n112       0\n113       0\n114       0\n115       0\n116       0\n117       0\n118       0\n119       0\n120       0\n121       0\n122       0\n123       0\n124       0\n125       1\n126       1\n127       0\n128       0\n129       0\n130       0\n131       0\n132       1\n133       1\n134       0\n135       0\n136       0\n137       0\n138       0\n139       0\n140       0\n141       0\n142       0\n143       0\n144       0\n145       0\n146       0\n147       0\n148       0\n149       0\n150       1\n151       1\n152       0\n153       0\n154       0\n155       0\n156       0\n157       1\n158       1\n159       0\n160       0\n161       0\n162       0\n163       0\n164       0\n165       0\n166       0\n167       0\n168       1\n169       1\n170       0\n171       0\n172       0\n\nheart[[\"surgery\"]]\n\n  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [48] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1\n [95] 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0\n[142] 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0\n\nheart[, \"surgery\"]\n\n  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [48] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1\n [95] 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0\n[142] 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0\n\n\n\n\n\n\nTask 2Solution 2\n\n\nCreate a matrix that takes the values 1:4 and has 2 rows and 2 columns. You can name this object mat. Select the second row of all columns.\n\n\n\nmat &lt;- matrix(1:4, 2, 2)\nmat[2, ]\n\n[1] 2 4\n\n\n\n\n\n\nTask 3Solution 3\n\n\nCreate an array that consists of 2 matrices. Matrix 1 will consist of the values 1:4 and matrix 2 will consist of the values 5:8. Both matrices will have 2 columns and 2 rows. Give the name ar1 to the this array. Select the 2nd row of all columns from each matrix.\n\n\n\nar1 &lt;- array(data = 1:8, dim = c(2, 2, 2))\nar1[2, , ]\n\n     [,1] [,2]\n[1,]    2    6\n[2,]    4    8\n\n\n\n\n\n\n\nSubsetting\n\nTask 1Solution 1\n\n\nUsing the retinopathy data set:\n\n\nSelect the futime for all adult patients.\n\nSelect all the variables for patients that received treatment.\n\n\n\n\n\nretinopathy$futime[retinopathy$type == \"adult\"]\n\n  [1] 46.23 46.23 58.07 13.83 46.43 48.53 44.40  7.90 39.57 39.57 30.83 38.57 66.27 14.10 58.43\n [16] 41.40 57.43 57.43 61.40  0.60 60.27 26.37  5.77  1.33 25.63 21.90 46.90 22.00 25.80 13.87\n [31]  5.73 48.30  9.90  9.90 46.73  2.67 18.73 13.83 32.03  4.27 69.87 13.90 56.57 56.57  8.30\n [46]  8.30 21.57 18.43 31.63 31.63 39.77 39.77 52.33  5.83  4.10 12.20 38.07 12.73 54.10 54.10\n [61] 50.47 50.47 38.83 38.83 26.23 40.03 38.07 38.07 65.23 65.23  7.07 66.77  9.63  9.63 33.63\n [76] 33.63 63.33 27.60 38.47  1.63 55.23 55.23 52.77 25.30  9.87  1.70 38.77 19.40 13.83  1.57\n [91] 46.50 13.37 42.47 22.20 38.73 38.73 51.13 51.13 55.33 55.33 12.93  4.97 54.20 26.47 24.43\n[106]  9.87 50.23 50.23 42.23 42.23 66.93 66.93 67.47 38.57  3.67  3.67 20.07  8.83 55.13 55.13\n[121] 42.20 42.20 38.27 38.27 63.63 26.17 54.37 54.37 54.60 10.97 63.87 21.10 62.37 43.70 62.80\n[136] 62.80 63.33 14.37 58.53 58.53 58.07 58.07 58.50 58.50  1.50 14.37 51.10 51.10 49.93  6.57\n[151] 46.27 46.27 10.60 10.60 42.77 42.77 74.97 61.83 62.00 62.00 51.60 42.33 49.97  2.90 41.93\n[166] 41.93\n\nretinopathy[retinopathy$trt == 1, ]\n\n      id laser   eye age     type trt futime status risk\n1      5 argon  left  28    adult   1  46.23      0    9\n3     14 argon right  12 juvenile   1  42.50      0    8\n5     16 xenon right   9 juvenile   1  42.27      0   11\n7     25 argon  left   9 juvenile   1  20.60      0   11\n9     29 xenon  left  13 juvenile   1  38.77      0    9\n11    46 xenon right  12 juvenile   1  65.23      0    9\n13    49 argon right   8 juvenile   1  63.50      0    8\n15    56 xenon right  12 juvenile   1  23.17      0    8\n17    61 argon right  16 juvenile   1   1.47      0    9\n19    71 argon right  21    adult   1  58.07      0    9\n21   100 argon  left  23    adult   1  46.43      1    9\n23   112 argon right  44    adult   1  44.40      0   11\n25   120 xenon  left  47    adult   1  39.57      0   11\n27   127 xenon right  48    adult   1  30.83      1    6\n29   133 argon right  26    adult   1  66.27      0   10\n31   150 argon  left  10 juvenile   1  20.17      1    9\n33   167 argon  left  23    adult   1  58.43      0   12\n35   176 argon right   5 juvenile   1  58.20      0    9\n37   185 argon right  46    adult   1  57.43      0    6\n39   190 argon right   5 juvenile   1  56.03      0   11\n41   202 argon  left  13 juvenile   1  67.53      0    9\n43   214 xenon right  45    adult   1  61.40      0    9\n45   220 argon right  11 juvenile   1  10.27      1   10\n47   243 xenon  left   1 juvenile   1  66.20      0   12\n49   255 xenon  left  10 juvenile   1   5.67      1   12\n51   264 argon right  12 juvenile   1  58.83      0    9\n53   266 argon right  36    adult   1  60.27      0    9\n55   284 argon  left  53    adult   1   5.77      1   10\n57   295 xenon  left  10 juvenile   1   5.90      1   11\n59   300 xenon  left  25    adult   1  25.63      1   10\n61   302 argon  left  14 juvenile   1  33.90      1    9\n63   315 argon  left  16 juvenile   1   1.73      1   10\n65   324 xenon  left  38    adult   1  46.90      0    9\n67   328 argon  left  14 juvenile   1  31.13      0    9\n69   335 argon  left  10 juvenile   1  30.20      1    9\n71   342 argon  left  17 juvenile   1  70.90      0   11\n73   349 xenon right  44    adult   1  25.80      1   11\n75   357 argon  left  21    adult   1   5.73      1    9\n77   368 xenon  left  19 juvenile   1  53.43      0    9\n79   385 argon right  13 juvenile   1   1.90      1   10\n81   396 argon  left  40    adult   1   9.90      1   10\n83   405 argon right   9 juvenile   1  34.20      0    8\n85   409 argon  left  48    adult   1  46.73      0   10\n87   419 xenon right  42    adult   1  18.73      0   10\n89   429 xenon right  24    adult   1  32.03      0   11\n91   433 argon  left  55    adult   1  69.87      0   10\n93   445 argon  left  17 juvenile   1  66.80      0   11\n95   454 argon right   5 juvenile   1  64.73      0    9\n97   468 argon right   6 juvenile   1   1.70      1   10\n99   480 xenon right  19 juvenile   1   1.77      1    9\n101  485 xenon right  12 juvenile   1  29.03      0    8\n103  491 xenon  left  45    adult   1  56.57      0    9\n105  503 xenon  left  27    adult   1   8.30      1    9\n107  515 argon right  43    adult   1  21.57      0    8\n109  522 xenon  left   4 juvenile   1  31.57      0    9\n111  538 argon  left  45    adult   1  31.63      0   10\n113  547 xenon right  32    adult   1  39.77      0   11\n115  550 xenon  left   3 juvenile   1  18.70      1   10\n117  554 argon right  14 juvenile   1  18.90      0    8\n119  557 argon right  13 juvenile   1  56.80      0   10\n121  561 xenon right  15 juvenile   1  55.60      0   10\n123  568 argon  left  10 juvenile   1  42.17      1    9\n125  572 xenon  left   6 juvenile   1  10.70      0    9\n127  576 xenon  left  17 juvenile   1  66.33      0    9\n129  581 argon  left  37    adult   1  52.33      0   12\n131  606 xenon right  18 juvenile   1  58.17      0    9\n133  610 xenon  left  13 juvenile   1  14.30      1    9\n135  615 xenon  left  14 juvenile   1  25.83      0   12\n137  618 xenon right  12 juvenile   1  45.40      0   10\n139  624 argon right   9 juvenile   1  47.60      0    6\n141  631 argon  left  11 juvenile   1  13.33      1   12\n143  636 argon  left  10 juvenile   1  42.10      0   11\n145  645 xenon right   5 juvenile   1  39.93      0    9\n147  653 xenon  left  15 juvenile   1  14.27      1    9\n149  662 argon  left   7 juvenile   1  34.57      1   12\n151  664 argon  left   2 juvenile   1  65.80      0    9\n153  683 xenon  left  22    adult   1   4.10      1    8\n155  687 argon  left   5 juvenile   1  60.93      0   11\n157  701 xenon  left   4 juvenile   1  57.20      0   10\n159  706 xenon right  27    adult   1  38.07      0    8\n161  717 xenon right  53    adult   1  54.10      0   11\n163  722 xenon right  10 juvenile   1  59.27      0    9\n165  731 xenon  left  13 juvenile   1  21.57      1   12\n167  740 argon  left  12 juvenile   1  54.10      0    8\n169  749 xenon  left  24    adult   1  50.47      0    9\n171  757 argon  left  17 juvenile   1  46.17      0    9\n173  760 xenon  left   8 juvenile   1  46.30      0   11\n175  766 xenon right  58    adult   1  38.83      0   12\n177  769 xenon  left  17 juvenile   1  44.60      0    9\n179  772 argon  left  12 juvenile   1  43.07      0   12\n181  778 xenon  left  25    adult   1  26.23      1    8\n183  780 argon right  15 juvenile   1  41.60      0    9\n185  793 xenon  left  21    adult   1  38.07      0   11\n187  800 xenon right  20    adult   1  65.23      0    9\n189  804 xenon right  23    adult   1   7.07      1   10\n191  810 xenon  left  13 juvenile   1  13.77      1   10\n193  815 xenon  left  45    adult   1   9.63      0   10\n195  832 argon right   5 juvenile   1  46.23      0   12\n197  834 argon  left   8 juvenile   1  45.73      0    9\n199  838 xenon  left  30    adult   1  33.63      1    9\n201  857 argon  left   7 juvenile   1  40.17      0    8\n203  866 argon  left  39    adult   1  63.33      1   11\n205  887 argon right  26    adult   1  38.47      1   10\n207  903 xenon right  50    adult   1  55.23      0    6\n209  910 xenon  left  34    adult   1  52.77      0    6\n211  920 xenon  left  10 juvenile   1  57.17      0    6\n213  925 argon right  40    adult   1   9.87      0   10\n215  931 xenon  left  13 juvenile   1  57.90      0   12\n217  936 argon  left   7 juvenile   1   5.90      0   10\n219  945 xenon  left  11 juvenile   1  32.20      0   12\n221  949 xenon right  13 juvenile   1  10.33      1    9\n223  952 argon  left   9 juvenile   1   6.13      1   12\n225  962 argon  left   5 juvenile   1  43.67      0    9\n227  964 argon  left  10 juvenile   1  38.30      0    9\n229  971 argon right  23    adult   1  38.77      0    9\n231  978 argon  left   2 juvenile   1  38.07      0   12\n233  983 xenon right  12 juvenile   1  38.30      0   11\n235  987 xenon  left   7 juvenile   1  26.20      1   10\n237 1002 argon  left  13 juvenile   1  62.57      0    9\n239 1017 xenon  left  50    adult   1  13.83      1    8\n241 1029 xenon right  20    adult   1  46.50      0   12\n243 1034 argon  left  15 juvenile   1  11.07      1   11\n245 1037 xenon right  30    adult   1  42.47      0    9\n247 1042 xenon  left  32    adult   1  38.73      0    9\n249 1069 argon  left  39    adult   1  51.13      0   11\n251 1074 xenon  left   4 juvenile   1   6.10      1   10\n253 1098 argon  left   3 juvenile   1   2.10      1   10\n255 1102 argon right  10 juvenile   1  17.73      1   10\n257 1112 argon  left   6 juvenile   1  26.47      0    9\n259 1117 argon right  15 juvenile   1  10.77      0   11\n261 1126 argon right  33    adult   1  55.33      0   12\n263 1135 xenon right  15 juvenile   1  58.67      0    9\n265 1145 argon  left  44    adult   1  12.93      1   10\n267 1148 argon  left  48    adult   1  54.20      0    9\n269 1167 argon  left   4 juvenile   1  49.57      0   10\n271 1184 argon  left  46    adult   1  24.43      1   12\n273 1191 xenon  left  25    adult   1  50.23      0    9\n275 1205 xenon  left  12 juvenile   1  13.97      1   11\n277 1213 xenon right  12 juvenile   1  43.33      0    6\n279 1228 argon right  26    adult   1  42.23      0    8\n281 1247 xenon  left  11 juvenile   1  74.93      0    9\n283 1250 argon right  36    adult   1  66.93      0    9\n285 1253 xenon right  12 juvenile   1  73.43      0    9\n287 1267 xenon right  50    adult   1  67.47      0   12\n289 1281 xenon right  44    adult   1   3.67      0    9\n291 1287 argon  left   8 juvenile   1  48.87      1   10\n293 1293 xenon right  14 juvenile   1  65.60      0    9\n295 1296 xenon  left  18 juvenile   1  15.83      0   10\n297 1309 xenon right  56    adult   1  20.07      0   11\n299 1312 xenon  left   9 juvenile   1  67.43      0   10\n301 1317 argon right  15 juvenile   1   1.47      0    9\n303 1321 xenon right   5 juvenile   1  62.93      0   11\n305 1333 argon right   1 juvenile   1   6.30      1    9\n307 1347 xenon right   1 juvenile   1  59.70      0   10\n309 1361 xenon  left  14 juvenile   1  13.80      1   10\n311 1366 xenon right  57    adult   1  55.13      0    6\n313 1373 argon  left   8 juvenile   1  13.57      1   11\n315 1397 xenon right  33    adult   1  42.20      0   11\n317 1410 xenon  left  46    adult   1  38.27      0   10\n319 1413 argon right   3 juvenile   1   7.10      0    8\n321 1425 argon  left  35    adult   1  63.63      0   11\n323 1447 argon  left   8 juvenile   1  59.00      0   11\n325 1461 xenon right  30    adult   1  54.37      0    9\n327 1469 xenon right  51    adult   1  54.60      0    8\n329 1480 argon  left  42    adult   1  63.87      0    9\n331 1487 argon right  20    adult   1  62.37      0    9\n333 1491 xenon  left  23    adult   1  62.80      0   11\n335 1499 xenon right  22    adult   1  63.33      0   11\n337 1503 xenon  left  25    adult   1  58.53      0    9\n339 1513 argon  left  45    adult   1  58.07      0   12\n341 1524 argon  left  20    adult   1  58.50      0   10\n343 1533 argon  left  41    adult   1   1.50      1    9\n345 1537 xenon right  19 juvenile   1  54.73      0   12\n347 1552 xenon right   4 juvenile   1  50.63      0   12\n349 1554 xenon  left  36    adult   1  51.10      0   10\n351 1562 xenon right  20    adult   1  49.93      0    9\n353 1572 xenon right  24    adult   1  46.27      0    9\n355 1581 argon right  28    adult   1  10.60      0    9\n357 1585 xenon right  51    adult   1  42.77      0    8\n359 1596 argon right  16 juvenile   1  34.37      1    9\n361 1600 xenon right  16 juvenile   1  42.07      0   10\n363 1603 xenon  left  10 juvenile   1  38.77      0    9\n365 1619 xenon  left  20    adult   1  74.97      0    9\n367 1627 xenon  left  10 juvenile   1   6.57      1   10\n369 1636 argon right  16 juvenile   1  38.87      1    6\n371 1640 xenon  left  10 juvenile   1  42.43      1   11\n373 1643 xenon right  11 juvenile   1  67.07      0    9\n375 1649 argon right   1 juvenile   1   2.70      1   10\n377 1666 argon  left  17 juvenile   1  63.80      0    6\n379 1672 argon  left   7 juvenile   1  32.63      0    9\n381 1683 xenon right  29    adult   1  62.00      0   10\n383 1688 xenon  left   5 juvenile   1  13.10      1   11\n385 1705 xenon  left   1 juvenile   1   8.00      0    8\n387 1717 argon  left  22    adult   1  51.60      0   12\n389 1727 argon right  33    adult   1  49.97      0    9\n391 1746 argon right   3 juvenile   1  45.90      0   10\n393 1749 argon right  32    adult   1  41.93      0    9\n\n\n\n\n\n\nTask 2Solution 2\n\n\nUsing the retinopathy data set:\n\n\nSelect the age for patients that have futime more than 20.\n\nSelect the age for patients that have futime more than 20 and are adults.\n\nSelect patients that have no missing values in age.\n\n\n\n\nretinopathy$age[retinopathy$futime &gt; 20]\n\n  [1] 28 28 12 12  9  9  9  9 13 12 12  8 12 12 21 23 23 44 47 47 48 48 26 10 23 23  5  5 46 46  5\n [32]  5 13 13 45  1  1 12 12 36 36 10 25 25 14 38 38 14 14 10 10 17 17 44 21 19 19 13  9  9 48 24\n [63] 55 17 17  5  5 19 12 12 45 45 43  4  4 45 45 32 32 13 13 15 10 10 17 17 37 18 13 14 14 12 12\n [94]  9  9 10 10  5  5  7  2  5  5  4  4 27 53 53 10 13 12 12 24 24 17 17  8  8 58 58 17 17 12 12\n[125] 25 25 15 21 21 20 20 23  5  5  8 30 30  7  7 39 39 26 50 50 34 34 10 10 13 13 11 11  9  5  5\n[156] 10 10 23  2  2 12 12  7  7 13 20 30 30 32 32 39 39  4 10  6  6 33 33 15 15 48 48  4  4 46 25\n[187] 25 12 12 12 26 26 11 11 36 36 12 12 50 50  8  8 14 14 56  9  9  5  5  1  1 57 57 33 33 46 46\n[218] 35 35  8  8 30 30 51 42 42 20 20 23 23 22 25 25 45 45 20 20 19 19  4 36 36 20 24 24 51 51 16\n[249] 16 16 16 10 10 20 20 10 16 16 10 10 11 11 17 17  7  7 29 29  5 22 22 33  3 32 32\n\nretinopathy$age[retinopathy$futime &gt; 20 & retinopathy$type == \"adult\"]\n\n  [1] 28 28 21 23 23 44 47 47 48 48 26 23 23 46 46 45 36 36 25 25 38 38 44 21 48 24 55 45 45 43 45\n [32] 45 32 32 37 27 53 53 24 24 58 58 25 25 21 21 20 20 23 30 30 39 39 26 50 50 34 34 23 20 30 30\n [63] 32 32 39 39 33 33 48 48 46 25 25 26 26 36 36 50 50 56 57 57 33 33 46 46 35 35 30 30 51 42 42\n [94] 20 20 23 23 22 25 25 45 45 20 20 36 36 20 24 24 51 51 20 20 29 29 22 22 33 32 32\n\nretinopathy[!is.na(retinopathy$age), ]\n\n      id laser   eye age     type trt futime status risk\n1      5 argon  left  28    adult   1  46.23      0    9\n2      5 argon  left  28    adult   0  46.23      0    9\n3     14 argon right  12 juvenile   1  42.50      0    8\n4     14 argon right  12 juvenile   0  31.30      1    6\n5     16 xenon right   9 juvenile   1  42.27      0   11\n6     16 xenon right   9 juvenile   0  42.27      0   11\n7     25 argon  left   9 juvenile   1  20.60      0   11\n8     25 argon  left   9 juvenile   0  20.60      0   11\n9     29 xenon  left  13 juvenile   1  38.77      0    9\n10    29 xenon  left  13 juvenile   0   0.30      1   10\n11    46 xenon right  12 juvenile   1  65.23      0    9\n12    46 xenon right  12 juvenile   0  54.27      1    9\n13    49 argon right   8 juvenile   1  63.50      0    8\n14    49 argon right   8 juvenile   0  10.80      1    6\n15    56 xenon right  12 juvenile   1  23.17      0    8\n16    56 xenon right  12 juvenile   0  23.17      0    9\n17    61 argon right  16 juvenile   1   1.47      0    9\n18    61 argon right  16 juvenile   0   1.47      0   10\n19    71 argon right  21    adult   1  58.07      0    9\n20    71 argon right  21    adult   0  13.83      1    9\n21   100 argon  left  23    adult   1  46.43      1    9\n22   100 argon  left  23    adult   0  48.53      0    9\n23   112 argon right  44    adult   1  44.40      0   11\n24   112 argon right  44    adult   0   7.90      1   12\n25   120 xenon  left  47    adult   1  39.57      0   11\n26   120 xenon  left  47    adult   0  39.57      0    6\n27   127 xenon right  48    adult   1  30.83      1    6\n28   127 xenon right  48    adult   0  38.57      1   10\n29   133 argon right  26    adult   1  66.27      0   10\n30   133 argon right  26    adult   0  14.10      1    9\n31   150 argon  left  10 juvenile   1  20.17      1    9\n32   150 argon  left  10 juvenile   0   6.90      1   10\n33   167 argon  left  23    adult   1  58.43      0   12\n34   167 argon  left  23    adult   0  41.40      1    9\n35   176 argon right   5 juvenile   1  58.20      0    9\n36   176 argon right   5 juvenile   0  58.20      0    9\n37   185 argon right  46    adult   1  57.43      0    6\n38   185 argon right  46    adult   0  57.43      0    8\n39   190 argon right   5 juvenile   1  56.03      0   11\n40   190 argon right   5 juvenile   0  56.03      0   12\n41   202 argon  left  13 juvenile   1  67.53      0    9\n42   202 argon  left  13 juvenile   0  67.53      0    9\n43   214 xenon right  45    adult   1  61.40      0    9\n44   214 xenon right  45    adult   0   0.60      1   12\n45   220 argon right  11 juvenile   1  10.27      1   10\n46   220 argon right  11 juvenile   0   1.63      1   10\n47   243 xenon  left   1 juvenile   1  66.20      0   12\n48   243 xenon  left   1 juvenile   0  66.20      0   11\n49   255 xenon  left  10 juvenile   1   5.67      1   12\n50   255 xenon  left  10 juvenile   0  13.83      1    9\n51   264 argon right  12 juvenile   1  58.83      0    9\n52   264 argon right  12 juvenile   0  29.97      1   11\n53   266 argon right  36    adult   1  60.27      0    9\n54   266 argon right  36    adult   0  26.37      1   11\n55   284 argon  left  53    adult   1   5.77      1   10\n56   284 argon  left  53    adult   0   1.33      1   12\n57   295 xenon  left  10 juvenile   1   5.90      1   11\n58   295 xenon  left  10 juvenile   0  35.53      1   11\n59   300 xenon  left  25    adult   1  25.63      1   10\n60   300 xenon  left  25    adult   0  21.90      1    9\n61   302 argon  left  14 juvenile   1  33.90      1    9\n62   302 argon  left  14 juvenile   0  14.80      1    9\n63   315 argon  left  16 juvenile   1   1.73      1   10\n64   315 argon  left  16 juvenile   0   6.20      1    8\n65   324 xenon  left  38    adult   1  46.90      0    9\n66   324 xenon  left  38    adult   0  22.00      1    8\n67   328 argon  left  14 juvenile   1  31.13      0    9\n68   328 argon  left  14 juvenile   0  31.13      0    9\n69   335 argon  left  10 juvenile   1  30.20      1    9\n70   335 argon  left  10 juvenile   0  22.00      1   11\n71   342 argon  left  17 juvenile   1  70.90      0   11\n72   342 argon  left  17 juvenile   0  70.90      0   12\n73   349 xenon right  44    adult   1  25.80      1   11\n74   349 xenon right  44    adult   0  13.87      1    8\n75   357 argon  left  21    adult   1   5.73      1    9\n76   357 argon  left  21    adult   0  48.30      1    9\n77   368 xenon  left  19 juvenile   1  53.43      0    9\n78   368 xenon  left  19 juvenile   0  53.43      0    9\n79   385 argon right  13 juvenile   1   1.90      1   10\n80   385 argon right  13 juvenile   0  51.10      0   12\n81   396 argon  left  40    adult   1   9.90      1   10\n82   396 argon  left  40    adult   0   9.90      1    9\n83   405 argon right   9 juvenile   1  34.20      0    8\n84   405 argon right   9 juvenile   0  34.20      0   12\n85   409 argon  left  48    adult   1  46.73      0   10\n86   409 argon  left  48    adult   0   2.67      1   12\n87   419 xenon right  42    adult   1  18.73      0   10\n88   419 xenon right  42    adult   0  13.83      1   10\n89   429 xenon right  24    adult   1  32.03      0   11\n90   429 xenon right  24    adult   0   4.27      1   10\n91   433 argon  left  55    adult   1  69.87      0   10\n92   433 argon  left  55    adult   0  13.90      1   10\n93   445 argon  left  17 juvenile   1  66.80      0   11\n94   445 argon  left  17 juvenile   0  66.80      0    9\n95   454 argon right   5 juvenile   1  64.73      0    9\n96   454 argon right   5 juvenile   0  64.73      0    8\n97   468 argon right   6 juvenile   1   1.70      1   10\n98   468 argon right   6 juvenile   0   1.70      1    6\n99   480 xenon right  19 juvenile   1   1.77      1    9\n100  480 xenon right  19 juvenile   0  43.03      1   12\n101  485 xenon right  12 juvenile   1  29.03      0    8\n102  485 xenon right  12 juvenile   0  29.03      0    8\n103  491 xenon  left  45    adult   1  56.57      0    9\n104  491 xenon  left  45    adult   0  56.57      0    9\n105  503 xenon  left  27    adult   1   8.30      1    9\n106  503 xenon  left  27    adult   0   8.30      1   10\n107  515 argon right  43    adult   1  21.57      0    8\n108  515 argon right  43    adult   0  18.43      1    9\n109  522 xenon  left   4 juvenile   1  31.57      0    9\n110  522 xenon  left   4 juvenile   0  31.57      0    8\n111  538 argon  left  45    adult   1  31.63      0   10\n112  538 argon  left  45    adult   0  31.63      1    9\n113  547 xenon right  32    adult   1  39.77      0   11\n114  547 xenon right  32    adult   0  39.77      0   10\n115  550 xenon  left   3 juvenile   1  18.70      1   10\n116  550 xenon  left   3 juvenile   0   6.53      1   11\n117  554 argon right  14 juvenile   1  18.90      0    8\n118  554 argon right  14 juvenile   0  18.90      0    9\n119  557 argon right  13 juvenile   1  56.80      0   10\n120  557 argon right  13 juvenile   0  22.23      1    8\n121  561 xenon right  15 juvenile   1  55.60      0   10\n122  561 xenon right  15 juvenile   0  14.00      1    9\n123  568 argon  left  10 juvenile   1  42.17      1    9\n124  568 argon  left  10 juvenile   0  42.17      1   10\n125  572 xenon  left   6 juvenile   1  10.70      0    9\n126  572 xenon  left   6 juvenile   0   5.33      1    9\n127  576 xenon  left  17 juvenile   1  66.33      0    9\n128  576 xenon  left  17 juvenile   0  59.80      1   10\n129  581 argon  left  37    adult   1  52.33      0   12\n130  581 argon  left  37    adult   0   5.83      1   11\n131  606 xenon right  18 juvenile   1  58.17      0    9\n132  606 xenon right  18 juvenile   0   2.17      1   12\n133  610 xenon  left  13 juvenile   1  14.30      1    9\n134  610 xenon  left  13 juvenile   0  48.43      1    8\n135  615 xenon  left  14 juvenile   1  25.83      0   12\n136  615 xenon  left  14 juvenile   0  25.83      0   10\n137  618 xenon right  12 juvenile   1  45.40      0   10\n138  618 xenon right  12 juvenile   0  45.40      0    9\n139  624 argon right   9 juvenile   1  47.60      0    6\n140  624 argon right   9 juvenile   0  47.60      0    9\n141  631 argon  left  11 juvenile   1  13.33      1   12\n142  631 argon  left  11 juvenile   0   9.60      1   10\n143  636 argon  left  10 juvenile   1  42.10      0   11\n144  636 argon  left  10 juvenile   0  42.10      0   11\n145  645 xenon right   5 juvenile   1  39.93      0    9\n146  645 xenon right   5 juvenile   0  39.93      0    6\n147  653 xenon  left  15 juvenile   1  14.27      1    9\n148  653 xenon  left  15 juvenile   0   7.60      1   12\n149  662 argon  left   7 juvenile   1  34.57      1   12\n150  662 argon  left   7 juvenile   0   1.80      1   12\n151  664 argon  left   2 juvenile   1  65.80      0    9\n152  664 argon  left   2 juvenile   0   4.30      1   12\n153  683 xenon  left  22    adult   1   4.10      1    8\n154  683 xenon  left  22    adult   0  12.20      1    6\n155  687 argon  left   5 juvenile   1  60.93      0   11\n156  687 argon  left   5 juvenile   0  60.93      0   12\n157  701 xenon  left   4 juvenile   1  57.20      0   10\n158  701 xenon  left   4 juvenile   0  57.20      0    9\n159  706 xenon right  27    adult   1  38.07      0    8\n160  706 xenon right  27    adult   0  12.73      1   10\n161  717 xenon right  53    adult   1  54.10      0   11\n162  717 xenon right  53    adult   0  54.10      1   11\n163  722 xenon right  10 juvenile   1  59.27      0    9\n164  722 xenon right  10 juvenile   0   9.40      1   12\n165  731 xenon  left  13 juvenile   1  21.57      1   12\n166  731 xenon  left  13 juvenile   0   9.90      1   10\n167  740 argon  left  12 juvenile   1  54.10      0    8\n168  740 argon  left  12 juvenile   0  54.10      0    8\n169  749 xenon  left  24    adult   1  50.47      0    9\n170  749 xenon  left  24    adult   0  50.47      0   11\n171  757 argon  left  17 juvenile   1  46.17      0    9\n172  757 argon  left  17 juvenile   0  46.17      0   12\n173  760 xenon  left   8 juvenile   1  46.30      0   11\n174  760 xenon  left   8 juvenile   0  46.30      0   11\n175  766 xenon right  58    adult   1  38.83      0   12\n176  766 xenon right  58    adult   0  38.83      0    9\n177  769 xenon  left  17 juvenile   1  44.60      0    9\n178  769 xenon  left  17 juvenile   0  44.60      0    9\n179  772 argon  left  12 juvenile   1  43.07      0   12\n180  772 argon  left  12 juvenile   0  43.07      0    9\n181  778 xenon  left  25    adult   1  26.23      1    8\n182  778 xenon  left  25    adult   0  40.03      0    8\n183  780 argon right  15 juvenile   1  41.60      0    9\n184  780 argon right  15 juvenile   0  18.03      1   11\n185  793 xenon  left  21    adult   1  38.07      0   11\n186  793 xenon  left  21    adult   0  38.07      0   11\n187  800 xenon right  20    adult   1  65.23      0    9\n188  800 xenon right  20    adult   0  65.23      0    9\n189  804 xenon right  23    adult   1   7.07      1   10\n190  804 xenon right  23    adult   0  66.77      0   12\n191  810 xenon  left  13 juvenile   1  13.77      1   10\n192  810 xenon  left  13 juvenile   0  13.77      1   12\n193  815 xenon  left  45    adult   1   9.63      0   10\n194  815 xenon  left  45    adult   0   9.63      1   12\n195  832 argon right   5 juvenile   1  46.23      0   12\n196  832 argon right   5 juvenile   0  46.23      0   12\n197  834 argon  left   8 juvenile   1  45.73      0    9\n198  834 argon  left   8 juvenile   0   1.50      1   12\n199  838 xenon  left  30    adult   1  33.63      1    9\n200  838 xenon  left  30    adult   0  33.63      1    9\n201  857 argon  left   7 juvenile   1  40.17      0    8\n202  857 argon  left   7 juvenile   0  40.17      0    6\n203  866 argon  left  39    adult   1  63.33      1   11\n204  866 argon  left  39    adult   0  27.60      1   10\n205  887 argon right  26    adult   1  38.47      1   10\n206  887 argon right  26    adult   0   1.63      1   10\n207  903 xenon right  50    adult   1  55.23      0    6\n208  903 xenon right  50    adult   0  55.23      0    8\n209  910 xenon  left  34    adult   1  52.77      0    6\n210  910 xenon  left  34    adult   0  25.30      1   10\n211  920 xenon  left  10 juvenile   1  57.17      0    6\n212  920 xenon  left  10 juvenile   0  46.20      1    8\n213  925 argon right  40    adult   1   9.87      0   10\n214  925 argon right  40    adult   0   1.70      1   10\n215  931 xenon  left  13 juvenile   1  57.90      0   12\n216  931 xenon  left  13 juvenile   0  57.90      0   11\n217  936 argon  left   7 juvenile   1   5.90      0   10\n218  936 argon  left   7 juvenile   0   5.90      0   12\n219  945 xenon  left  11 juvenile   1  32.20      0   12\n220  945 xenon  left  11 juvenile   0  32.20      0   12\n221  949 xenon right  13 juvenile   1  10.33      1    9\n222  949 xenon right  13 juvenile   0   0.83      1   10\n223  952 argon  left   9 juvenile   1   6.13      1   12\n224  952 argon  left   9 juvenile   0  50.90      0    9\n225  962 argon  left   5 juvenile   1  43.67      0    9\n226  962 argon  left   5 juvenile   0  25.93      1    9\n227  964 argon  left  10 juvenile   1  38.30      0    9\n228  964 argon  left  10 juvenile   0  38.30      0    9\n229  971 argon right  23    adult   1  38.77      0    9\n230  971 argon right  23    adult   0  19.40      1   10\n231  978 argon  left   2 juvenile   1  38.07      0   12\n232  978 argon  left   2 juvenile   0  21.97      1   10\n233  983 xenon right  12 juvenile   1  38.30      0   11\n234  983 xenon right  12 juvenile   0  38.30      0   11\n235  987 xenon  left   7 juvenile   1  26.20      1   10\n236  987 xenon  left   7 juvenile   0  70.03      0    9\n237 1002 argon  left  13 juvenile   1  62.57      0    9\n238 1002 argon  left  13 juvenile   0  18.03      1   11\n239 1017 xenon  left  50    adult   1  13.83      1    8\n240 1017 xenon  left  50    adult   0   1.57      1    9\n241 1029 xenon right  20    adult   1  46.50      0   12\n242 1029 xenon right  20    adult   0  13.37      1   12\n243 1034 argon  left  15 juvenile   1  11.07      1   11\n244 1034 argon  left  15 juvenile   0   1.97      1    9\n245 1037 xenon right  30    adult   1  42.47      0    9\n246 1037 xenon right  30    adult   0  22.20      1    9\n247 1042 xenon  left  32    adult   1  38.73      0    9\n248 1042 xenon  left  32    adult   0  38.73      0    9\n249 1069 argon  left  39    adult   1  51.13      0   11\n250 1069 argon  left  39    adult   0  51.13      0   11\n251 1074 xenon  left   4 juvenile   1   6.10      1   10\n252 1074 xenon  left   4 juvenile   0  46.50      0   11\n253 1098 argon  left   3 juvenile   1   2.10      1   10\n254 1098 argon  left   3 juvenile   0  11.30      1   11\n255 1102 argon right  10 juvenile   1  17.73      1   10\n256 1102 argon right  10 juvenile   0  42.30      0    9\n257 1112 argon  left   6 juvenile   1  26.47      0    9\n258 1112 argon  left   6 juvenile   0  26.47      0   10\n259 1117 argon right  15 juvenile   1  10.77      0   11\n260 1117 argon right  15 juvenile   0  10.77      0   11\n261 1126 argon right  33    adult   1  55.33      0   12\n262 1126 argon right  33    adult   0  55.33      0   10\n263 1135 xenon right  15 juvenile   1  58.67      0    9\n264 1135 xenon right  15 juvenile   0  58.67      0    9\n265 1145 argon  left  44    adult   1  12.93      1   10\n266 1145 argon  left  44    adult   0   4.97      1    9\n267 1148 argon  left  48    adult   1  54.20      0    9\n268 1148 argon  left  48    adult   0  26.47      1   12\n269 1167 argon  left   4 juvenile   1  49.57      0   10\n270 1167 argon  left   4 juvenile   0  49.57      0    9\n271 1184 argon  left  46    adult   1  24.43      1   12\n272 1184 argon  left  46    adult   0   9.87      1   11\n273 1191 xenon  left  25    adult   1  50.23      0    9\n274 1191 xenon  left  25    adult   0  50.23      0    9\n275 1205 xenon  left  12 juvenile   1  13.97      1   11\n276 1205 xenon  left  12 juvenile   0  30.40      1   12\n277 1213 xenon right  12 juvenile   1  43.33      0    6\n278 1213 xenon right  12 juvenile   0  43.33      1   10\n279 1228 argon right  26    adult   1  42.23      0    8\n280 1228 argon right  26    adult   0  42.23      0    8\n281 1247 xenon  left  11 juvenile   1  74.93      0    9\n282 1247 xenon  left  11 juvenile   0  74.93      0    9\n283 1250 argon right  36    adult   1  66.93      0    9\n284 1250 argon right  36    adult   0  66.93      0    9\n285 1253 xenon right  12 juvenile   1  73.43      0    9\n286 1253 xenon right  12 juvenile   0  73.43      0    9\n287 1267 xenon right  50    adult   1  67.47      0   12\n288 1267 xenon right  50    adult   0  38.57      1   11\n289 1281 xenon right  44    adult   1   3.67      0    9\n290 1281 xenon right  44    adult   0   3.67      1   10\n291 1287 argon  left   8 juvenile   1  48.87      1   10\n292 1287 argon  left   8 juvenile   0  67.03      0    9\n293 1293 xenon right  14 juvenile   1  65.60      0    9\n294 1293 xenon right  14 juvenile   0  65.60      0    9\n295 1296 xenon  left  18 juvenile   1  15.83      0   10\n296 1296 xenon  left  18 juvenile   0  15.83      1   10\n297 1309 xenon right  56    adult   1  20.07      0   11\n298 1309 xenon right  56    adult   0   8.83      1    8\n299 1312 xenon  left   9 juvenile   1  67.43      0   10\n300 1312 xenon  left   9 juvenile   0  67.43      0    9\n301 1317 argon right  15 juvenile   1   1.47      0    9\n302 1317 argon right  15 juvenile   0   1.47      0    6\n303 1321 xenon right   5 juvenile   1  62.93      0   11\n304 1321 xenon right   5 juvenile   0  22.13      1    9\n305 1333 argon right   1 juvenile   1   6.30      1    9\n306 1333 argon right   1 juvenile   0  56.97      0   11\n307 1347 xenon right   1 juvenile   1  59.70      0   10\n308 1347 xenon right   1 juvenile   0  18.93      1   10\n309 1361 xenon  left  14 juvenile   1  13.80      1   10\n310 1361 xenon  left  14 juvenile   0  19.00      1    9\n311 1366 xenon right  57    adult   1  55.13      0    6\n312 1366 xenon right  57    adult   0  55.13      0    6\n313 1373 argon  left   8 juvenile   1  13.57      1   11\n314 1373 argon  left   8 juvenile   0   5.43      1   11\n315 1397 xenon right  33    adult   1  42.20      0   11\n316 1397 xenon right  33    adult   0  42.20      0   11\n317 1410 xenon  left  46    adult   1  38.27      0   10\n318 1410 xenon  left  46    adult   0  38.27      0    9\n319 1413 argon right   3 juvenile   1   7.10      0    8\n320 1413 argon right   3 juvenile   0   7.10      1   12\n321 1425 argon  left  35    adult   1  63.63      0   11\n322 1425 argon  left  35    adult   0  26.17      1   11\n323 1447 argon  left   8 juvenile   1  59.00      0   11\n324 1447 argon  left   8 juvenile   0  24.73      1   11\n325 1461 xenon right  30    adult   1  54.37      0    9\n326 1461 xenon right  30    adult   0  54.37      0   10\n327 1469 xenon right  51    adult   1  54.60      0    8\n328 1469 xenon right  51    adult   0  10.97      1   12\n329 1480 argon  left  42    adult   1  63.87      0    9\n330 1480 argon  left  42    adult   0  21.10      1    9\n331 1487 argon right  20    adult   1  62.37      0    9\n332 1487 argon right  20    adult   0  43.70      1    8\n333 1491 xenon  left  23    adult   1  62.80      0   11\n334 1491 xenon  left  23    adult   0  62.80      0    9\n335 1499 xenon right  22    adult   1  63.33      0   11\n336 1499 xenon right  22    adult   0  14.37      1    9\n337 1503 xenon  left  25    adult   1  58.53      0    9\n338 1503 xenon  left  25    adult   0  58.53      0    9\n339 1513 argon  left  45    adult   1  58.07      0   12\n340 1513 argon  left  45    adult   0  58.07      0   11\n341 1524 argon  left  20    adult   1  58.50      0   10\n342 1524 argon  left  20    adult   0  58.50      0    9\n343 1533 argon  left  41    adult   1   1.50      1    9\n344 1533 argon  left  41    adult   0  14.37      0    9\n345 1537 xenon right  19 juvenile   1  54.73      0   12\n346 1537 xenon right  19 juvenile   0  38.40      1   10\n347 1552 xenon right   4 juvenile   1  50.63      0   12\n348 1552 xenon right   4 juvenile   0   2.83      1   11\n349 1554 xenon  left  36    adult   1  51.10      0   10\n350 1554 xenon  left  36    adult   0  51.10      0    9\n351 1562 xenon right  20    adult   1  49.93      0    9\n352 1562 xenon right  20    adult   0   6.57      1    9\n353 1572 xenon right  24    adult   1  46.27      0    9\n354 1572 xenon right  24    adult   0  46.27      1    9\n355 1581 argon right  28    adult   1  10.60      0    9\n356 1581 argon right  28    adult   0  10.60      0   10\n357 1585 xenon right  51    adult   1  42.77      0    8\n358 1585 xenon right  51    adult   0  42.77      0   12\n359 1596 argon right  16 juvenile   1  34.37      1    9\n360 1596 argon right  16 juvenile   0  42.27      0   10\n361 1600 xenon right  16 juvenile   1  42.07      0   10\n362 1600 xenon right  16 juvenile   0  42.07      0   10\n363 1603 xenon  left  10 juvenile   1  38.77      0    9\n364 1603 xenon  left  10 juvenile   0  38.77      0    9\n365 1619 xenon  left  20    adult   1  74.97      0    9\n366 1619 xenon  left  20    adult   0  61.83      1   12\n367 1627 xenon  left  10 juvenile   1   6.57      1   10\n368 1627 xenon  left  10 juvenile   0  66.97      0   12\n369 1636 argon right  16 juvenile   1  38.87      1    6\n370 1636 argon right  16 juvenile   0  68.30      0    6\n371 1640 xenon  left  10 juvenile   1  42.43      1   11\n372 1640 xenon  left  10 juvenile   0  46.63      1    9\n373 1643 xenon right  11 juvenile   1  67.07      0    9\n374 1643 xenon right  11 juvenile   0  67.07      0    9\n375 1649 argon right   1 juvenile   1   2.70      1   10\n376 1649 argon right   1 juvenile   0   2.70      0   12\n377 1666 argon  left  17 juvenile   1  63.80      0    6\n378 1666 argon  left  17 juvenile   0  63.80      0    8\n379 1672 argon  left   7 juvenile   1  32.63      0    9\n380 1672 argon  left   7 juvenile   0  32.63      0    9\n381 1683 xenon right  29    adult   1  62.00      0   10\n382 1683 xenon right  29    adult   0  62.00      0    8\n383 1688 xenon  left   5 juvenile   1  13.10      1   11\n384 1688 xenon  left   5 juvenile   0  54.80      0   10\n385 1705 xenon  left   1 juvenile   1   8.00      0    8\n386 1705 xenon  left   1 juvenile   0   8.00      0    8\n387 1717 argon  left  22    adult   1  51.60      0   12\n388 1717 argon  left  22    adult   0  42.33      1   11\n389 1727 argon right  33    adult   1  49.97      0    9\n390 1727 argon right  33    adult   0   2.90      1   10\n391 1746 argon right   3 juvenile   1  45.90      0   10\n392 1746 argon right   3 juvenile   0   1.43      1   10\n393 1749 argon right  32    adult   1  41.93      0    9\n394 1749 argon right  32    adult   0  41.93      0    9\n\n\n\n\n\n\nTask 3Solution 3\n\n\nUsing the retinopathy data set:\n\n\nSelect only the rows of the left eye.\nSelect only the rows of adult patients.\n\n\n\n\nretinopathy[retinopathy$eye == \"left\", ]\n\n      id laser  eye age     type trt futime status risk\n1      5 argon left  28    adult   1  46.23      0    9\n2      5 argon left  28    adult   0  46.23      0    9\n7     25 argon left   9 juvenile   1  20.60      0   11\n8     25 argon left   9 juvenile   0  20.60      0   11\n9     29 xenon left  13 juvenile   1  38.77      0    9\n10    29 xenon left  13 juvenile   0   0.30      1   10\n21   100 argon left  23    adult   1  46.43      1    9\n22   100 argon left  23    adult   0  48.53      0    9\n25   120 xenon left  47    adult   1  39.57      0   11\n26   120 xenon left  47    adult   0  39.57      0    6\n31   150 argon left  10 juvenile   1  20.17      1    9\n32   150 argon left  10 juvenile   0   6.90      1   10\n33   167 argon left  23    adult   1  58.43      0   12\n34   167 argon left  23    adult   0  41.40      1    9\n41   202 argon left  13 juvenile   1  67.53      0    9\n42   202 argon left  13 juvenile   0  67.53      0    9\n47   243 xenon left   1 juvenile   1  66.20      0   12\n48   243 xenon left   1 juvenile   0  66.20      0   11\n49   255 xenon left  10 juvenile   1   5.67      1   12\n50   255 xenon left  10 juvenile   0  13.83      1    9\n55   284 argon left  53    adult   1   5.77      1   10\n56   284 argon left  53    adult   0   1.33      1   12\n57   295 xenon left  10 juvenile   1   5.90      1   11\n58   295 xenon left  10 juvenile   0  35.53      1   11\n59   300 xenon left  25    adult   1  25.63      1   10\n60   300 xenon left  25    adult   0  21.90      1    9\n61   302 argon left  14 juvenile   1  33.90      1    9\n62   302 argon left  14 juvenile   0  14.80      1    9\n63   315 argon left  16 juvenile   1   1.73      1   10\n64   315 argon left  16 juvenile   0   6.20      1    8\n65   324 xenon left  38    adult   1  46.90      0    9\n66   324 xenon left  38    adult   0  22.00      1    8\n67   328 argon left  14 juvenile   1  31.13      0    9\n68   328 argon left  14 juvenile   0  31.13      0    9\n69   335 argon left  10 juvenile   1  30.20      1    9\n70   335 argon left  10 juvenile   0  22.00      1   11\n71   342 argon left  17 juvenile   1  70.90      0   11\n72   342 argon left  17 juvenile   0  70.90      0   12\n75   357 argon left  21    adult   1   5.73      1    9\n76   357 argon left  21    adult   0  48.30      1    9\n77   368 xenon left  19 juvenile   1  53.43      0    9\n78   368 xenon left  19 juvenile   0  53.43      0    9\n81   396 argon left  40    adult   1   9.90      1   10\n82   396 argon left  40    adult   0   9.90      1    9\n85   409 argon left  48    adult   1  46.73      0   10\n86   409 argon left  48    adult   0   2.67      1   12\n91   433 argon left  55    adult   1  69.87      0   10\n92   433 argon left  55    adult   0  13.90      1   10\n93   445 argon left  17 juvenile   1  66.80      0   11\n94   445 argon left  17 juvenile   0  66.80      0    9\n103  491 xenon left  45    adult   1  56.57      0    9\n104  491 xenon left  45    adult   0  56.57      0    9\n105  503 xenon left  27    adult   1   8.30      1    9\n106  503 xenon left  27    adult   0   8.30      1   10\n109  522 xenon left   4 juvenile   1  31.57      0    9\n110  522 xenon left   4 juvenile   0  31.57      0    8\n111  538 argon left  45    adult   1  31.63      0   10\n112  538 argon left  45    adult   0  31.63      1    9\n115  550 xenon left   3 juvenile   1  18.70      1   10\n116  550 xenon left   3 juvenile   0   6.53      1   11\n123  568 argon left  10 juvenile   1  42.17      1    9\n124  568 argon left  10 juvenile   0  42.17      1   10\n125  572 xenon left   6 juvenile   1  10.70      0    9\n126  572 xenon left   6 juvenile   0   5.33      1    9\n127  576 xenon left  17 juvenile   1  66.33      0    9\n128  576 xenon left  17 juvenile   0  59.80      1   10\n129  581 argon left  37    adult   1  52.33      0   12\n130  581 argon left  37    adult   0   5.83      1   11\n133  610 xenon left  13 juvenile   1  14.30      1    9\n134  610 xenon left  13 juvenile   0  48.43      1    8\n135  615 xenon left  14 juvenile   1  25.83      0   12\n136  615 xenon left  14 juvenile   0  25.83      0   10\n141  631 argon left  11 juvenile   1  13.33      1   12\n142  631 argon left  11 juvenile   0   9.60      1   10\n143  636 argon left  10 juvenile   1  42.10      0   11\n144  636 argon left  10 juvenile   0  42.10      0   11\n147  653 xenon left  15 juvenile   1  14.27      1    9\n148  653 xenon left  15 juvenile   0   7.60      1   12\n149  662 argon left   7 juvenile   1  34.57      1   12\n150  662 argon left   7 juvenile   0   1.80      1   12\n151  664 argon left   2 juvenile   1  65.80      0    9\n152  664 argon left   2 juvenile   0   4.30      1   12\n153  683 xenon left  22    adult   1   4.10      1    8\n154  683 xenon left  22    adult   0  12.20      1    6\n155  687 argon left   5 juvenile   1  60.93      0   11\n156  687 argon left   5 juvenile   0  60.93      0   12\n157  701 xenon left   4 juvenile   1  57.20      0   10\n158  701 xenon left   4 juvenile   0  57.20      0    9\n165  731 xenon left  13 juvenile   1  21.57      1   12\n166  731 xenon left  13 juvenile   0   9.90      1   10\n167  740 argon left  12 juvenile   1  54.10      0    8\n168  740 argon left  12 juvenile   0  54.10      0    8\n169  749 xenon left  24    adult   1  50.47      0    9\n170  749 xenon left  24    adult   0  50.47      0   11\n171  757 argon left  17 juvenile   1  46.17      0    9\n172  757 argon left  17 juvenile   0  46.17      0   12\n173  760 xenon left   8 juvenile   1  46.30      0   11\n174  760 xenon left   8 juvenile   0  46.30      0   11\n177  769 xenon left  17 juvenile   1  44.60      0    9\n178  769 xenon left  17 juvenile   0  44.60      0    9\n179  772 argon left  12 juvenile   1  43.07      0   12\n180  772 argon left  12 juvenile   0  43.07      0    9\n181  778 xenon left  25    adult   1  26.23      1    8\n182  778 xenon left  25    adult   0  40.03      0    8\n185  793 xenon left  21    adult   1  38.07      0   11\n186  793 xenon left  21    adult   0  38.07      0   11\n191  810 xenon left  13 juvenile   1  13.77      1   10\n192  810 xenon left  13 juvenile   0  13.77      1   12\n193  815 xenon left  45    adult   1   9.63      0   10\n194  815 xenon left  45    adult   0   9.63      1   12\n197  834 argon left   8 juvenile   1  45.73      0    9\n198  834 argon left   8 juvenile   0   1.50      1   12\n199  838 xenon left  30    adult   1  33.63      1    9\n200  838 xenon left  30    adult   0  33.63      1    9\n201  857 argon left   7 juvenile   1  40.17      0    8\n202  857 argon left   7 juvenile   0  40.17      0    6\n203  866 argon left  39    adult   1  63.33      1   11\n204  866 argon left  39    adult   0  27.60      1   10\n209  910 xenon left  34    adult   1  52.77      0    6\n210  910 xenon left  34    adult   0  25.30      1   10\n211  920 xenon left  10 juvenile   1  57.17      0    6\n212  920 xenon left  10 juvenile   0  46.20      1    8\n215  931 xenon left  13 juvenile   1  57.90      0   12\n216  931 xenon left  13 juvenile   0  57.90      0   11\n217  936 argon left   7 juvenile   1   5.90      0   10\n218  936 argon left   7 juvenile   0   5.90      0   12\n219  945 xenon left  11 juvenile   1  32.20      0   12\n220  945 xenon left  11 juvenile   0  32.20      0   12\n223  952 argon left   9 juvenile   1   6.13      1   12\n224  952 argon left   9 juvenile   0  50.90      0    9\n225  962 argon left   5 juvenile   1  43.67      0    9\n226  962 argon left   5 juvenile   0  25.93      1    9\n227  964 argon left  10 juvenile   1  38.30      0    9\n228  964 argon left  10 juvenile   0  38.30      0    9\n231  978 argon left   2 juvenile   1  38.07      0   12\n232  978 argon left   2 juvenile   0  21.97      1   10\n235  987 xenon left   7 juvenile   1  26.20      1   10\n236  987 xenon left   7 juvenile   0  70.03      0    9\n237 1002 argon left  13 juvenile   1  62.57      0    9\n238 1002 argon left  13 juvenile   0  18.03      1   11\n239 1017 xenon left  50    adult   1  13.83      1    8\n240 1017 xenon left  50    adult   0   1.57      1    9\n243 1034 argon left  15 juvenile   1  11.07      1   11\n244 1034 argon left  15 juvenile   0   1.97      1    9\n247 1042 xenon left  32    adult   1  38.73      0    9\n248 1042 xenon left  32    adult   0  38.73      0    9\n249 1069 argon left  39    adult   1  51.13      0   11\n250 1069 argon left  39    adult   0  51.13      0   11\n251 1074 xenon left   4 juvenile   1   6.10      1   10\n252 1074 xenon left   4 juvenile   0  46.50      0   11\n253 1098 argon left   3 juvenile   1   2.10      1   10\n254 1098 argon left   3 juvenile   0  11.30      1   11\n257 1112 argon left   6 juvenile   1  26.47      0    9\n258 1112 argon left   6 juvenile   0  26.47      0   10\n265 1145 argon left  44    adult   1  12.93      1   10\n266 1145 argon left  44    adult   0   4.97      1    9\n267 1148 argon left  48    adult   1  54.20      0    9\n268 1148 argon left  48    adult   0  26.47      1   12\n269 1167 argon left   4 juvenile   1  49.57      0   10\n270 1167 argon left   4 juvenile   0  49.57      0    9\n271 1184 argon left  46    adult   1  24.43      1   12\n272 1184 argon left  46    adult   0   9.87      1   11\n273 1191 xenon left  25    adult   1  50.23      0    9\n274 1191 xenon left  25    adult   0  50.23      0    9\n275 1205 xenon left  12 juvenile   1  13.97      1   11\n276 1205 xenon left  12 juvenile   0  30.40      1   12\n281 1247 xenon left  11 juvenile   1  74.93      0    9\n282 1247 xenon left  11 juvenile   0  74.93      0    9\n291 1287 argon left   8 juvenile   1  48.87      1   10\n292 1287 argon left   8 juvenile   0  67.03      0    9\n295 1296 xenon left  18 juvenile   1  15.83      0   10\n296 1296 xenon left  18 juvenile   0  15.83      1   10\n299 1312 xenon left   9 juvenile   1  67.43      0   10\n300 1312 xenon left   9 juvenile   0  67.43      0    9\n309 1361 xenon left  14 juvenile   1  13.80      1   10\n310 1361 xenon left  14 juvenile   0  19.00      1    9\n313 1373 argon left   8 juvenile   1  13.57      1   11\n314 1373 argon left   8 juvenile   0   5.43      1   11\n317 1410 xenon left  46    adult   1  38.27      0   10\n318 1410 xenon left  46    adult   0  38.27      0    9\n321 1425 argon left  35    adult   1  63.63      0   11\n322 1425 argon left  35    adult   0  26.17      1   11\n323 1447 argon left   8 juvenile   1  59.00      0   11\n324 1447 argon left   8 juvenile   0  24.73      1   11\n329 1480 argon left  42    adult   1  63.87      0    9\n330 1480 argon left  42    adult   0  21.10      1    9\n333 1491 xenon left  23    adult   1  62.80      0   11\n334 1491 xenon left  23    adult   0  62.80      0    9\n337 1503 xenon left  25    adult   1  58.53      0    9\n338 1503 xenon left  25    adult   0  58.53      0    9\n339 1513 argon left  45    adult   1  58.07      0   12\n340 1513 argon left  45    adult   0  58.07      0   11\n341 1524 argon left  20    adult   1  58.50      0   10\n342 1524 argon left  20    adult   0  58.50      0    9\n343 1533 argon left  41    adult   1   1.50      1    9\n344 1533 argon left  41    adult   0  14.37      0    9\n349 1554 xenon left  36    adult   1  51.10      0   10\n350 1554 xenon left  36    adult   0  51.10      0    9\n363 1603 xenon left  10 juvenile   1  38.77      0    9\n364 1603 xenon left  10 juvenile   0  38.77      0    9\n365 1619 xenon left  20    adult   1  74.97      0    9\n366 1619 xenon left  20    adult   0  61.83      1   12\n367 1627 xenon left  10 juvenile   1   6.57      1   10\n368 1627 xenon left  10 juvenile   0  66.97      0   12\n371 1640 xenon left  10 juvenile   1  42.43      1   11\n372 1640 xenon left  10 juvenile   0  46.63      1    9\n377 1666 argon left  17 juvenile   1  63.80      0    6\n378 1666 argon left  17 juvenile   0  63.80      0    8\n379 1672 argon left   7 juvenile   1  32.63      0    9\n380 1672 argon left   7 juvenile   0  32.63      0    9\n383 1688 xenon left   5 juvenile   1  13.10      1   11\n384 1688 xenon left   5 juvenile   0  54.80      0   10\n385 1705 xenon left   1 juvenile   1   8.00      0    8\n386 1705 xenon left   1 juvenile   0   8.00      0    8\n387 1717 argon left  22    adult   1  51.60      0   12\n388 1717 argon left  22    adult   0  42.33      1   11\n\nretinopathy[retinopathy$type == \"adult\", ]\n\n      id laser   eye age  type trt futime status risk\n1      5 argon  left  28 adult   1  46.23      0    9\n2      5 argon  left  28 adult   0  46.23      0    9\n19    71 argon right  21 adult   1  58.07      0    9\n20    71 argon right  21 adult   0  13.83      1    9\n21   100 argon  left  23 adult   1  46.43      1    9\n22   100 argon  left  23 adult   0  48.53      0    9\n23   112 argon right  44 adult   1  44.40      0   11\n24   112 argon right  44 adult   0   7.90      1   12\n25   120 xenon  left  47 adult   1  39.57      0   11\n26   120 xenon  left  47 adult   0  39.57      0    6\n27   127 xenon right  48 adult   1  30.83      1    6\n28   127 xenon right  48 adult   0  38.57      1   10\n29   133 argon right  26 adult   1  66.27      0   10\n30   133 argon right  26 adult   0  14.10      1    9\n33   167 argon  left  23 adult   1  58.43      0   12\n34   167 argon  left  23 adult   0  41.40      1    9\n37   185 argon right  46 adult   1  57.43      0    6\n38   185 argon right  46 adult   0  57.43      0    8\n43   214 xenon right  45 adult   1  61.40      0    9\n44   214 xenon right  45 adult   0   0.60      1   12\n53   266 argon right  36 adult   1  60.27      0    9\n54   266 argon right  36 adult   0  26.37      1   11\n55   284 argon  left  53 adult   1   5.77      1   10\n56   284 argon  left  53 adult   0   1.33      1   12\n59   300 xenon  left  25 adult   1  25.63      1   10\n60   300 xenon  left  25 adult   0  21.90      1    9\n65   324 xenon  left  38 adult   1  46.90      0    9\n66   324 xenon  left  38 adult   0  22.00      1    8\n73   349 xenon right  44 adult   1  25.80      1   11\n74   349 xenon right  44 adult   0  13.87      1    8\n75   357 argon  left  21 adult   1   5.73      1    9\n76   357 argon  left  21 adult   0  48.30      1    9\n81   396 argon  left  40 adult   1   9.90      1   10\n82   396 argon  left  40 adult   0   9.90      1    9\n85   409 argon  left  48 adult   1  46.73      0   10\n86   409 argon  left  48 adult   0   2.67      1   12\n87   419 xenon right  42 adult   1  18.73      0   10\n88   419 xenon right  42 adult   0  13.83      1   10\n89   429 xenon right  24 adult   1  32.03      0   11\n90   429 xenon right  24 adult   0   4.27      1   10\n91   433 argon  left  55 adult   1  69.87      0   10\n92   433 argon  left  55 adult   0  13.90      1   10\n103  491 xenon  left  45 adult   1  56.57      0    9\n104  491 xenon  left  45 adult   0  56.57      0    9\n105  503 xenon  left  27 adult   1   8.30      1    9\n106  503 xenon  left  27 adult   0   8.30      1   10\n107  515 argon right  43 adult   1  21.57      0    8\n108  515 argon right  43 adult   0  18.43      1    9\n111  538 argon  left  45 adult   1  31.63      0   10\n112  538 argon  left  45 adult   0  31.63      1    9\n113  547 xenon right  32 adult   1  39.77      0   11\n114  547 xenon right  32 adult   0  39.77      0   10\n129  581 argon  left  37 adult   1  52.33      0   12\n130  581 argon  left  37 adult   0   5.83      1   11\n153  683 xenon  left  22 adult   1   4.10      1    8\n154  683 xenon  left  22 adult   0  12.20      1    6\n159  706 xenon right  27 adult   1  38.07      0    8\n160  706 xenon right  27 adult   0  12.73      1   10\n161  717 xenon right  53 adult   1  54.10      0   11\n162  717 xenon right  53 adult   0  54.10      1   11\n169  749 xenon  left  24 adult   1  50.47      0    9\n170  749 xenon  left  24 adult   0  50.47      0   11\n175  766 xenon right  58 adult   1  38.83      0   12\n176  766 xenon right  58 adult   0  38.83      0    9\n181  778 xenon  left  25 adult   1  26.23      1    8\n182  778 xenon  left  25 adult   0  40.03      0    8\n185  793 xenon  left  21 adult   1  38.07      0   11\n186  793 xenon  left  21 adult   0  38.07      0   11\n187  800 xenon right  20 adult   1  65.23      0    9\n188  800 xenon right  20 adult   0  65.23      0    9\n189  804 xenon right  23 adult   1   7.07      1   10\n190  804 xenon right  23 adult   0  66.77      0   12\n193  815 xenon  left  45 adult   1   9.63      0   10\n194  815 xenon  left  45 adult   0   9.63      1   12\n199  838 xenon  left  30 adult   1  33.63      1    9\n200  838 xenon  left  30 adult   0  33.63      1    9\n203  866 argon  left  39 adult   1  63.33      1   11\n204  866 argon  left  39 adult   0  27.60      1   10\n205  887 argon right  26 adult   1  38.47      1   10\n206  887 argon right  26 adult   0   1.63      1   10\n207  903 xenon right  50 adult   1  55.23      0    6\n208  903 xenon right  50 adult   0  55.23      0    8\n209  910 xenon  left  34 adult   1  52.77      0    6\n210  910 xenon  left  34 adult   0  25.30      1   10\n213  925 argon right  40 adult   1   9.87      0   10\n214  925 argon right  40 adult   0   1.70      1   10\n229  971 argon right  23 adult   1  38.77      0    9\n230  971 argon right  23 adult   0  19.40      1   10\n239 1017 xenon  left  50 adult   1  13.83      1    8\n240 1017 xenon  left  50 adult   0   1.57      1    9\n241 1029 xenon right  20 adult   1  46.50      0   12\n242 1029 xenon right  20 adult   0  13.37      1   12\n245 1037 xenon right  30 adult   1  42.47      0    9\n246 1037 xenon right  30 adult   0  22.20      1    9\n247 1042 xenon  left  32 adult   1  38.73      0    9\n248 1042 xenon  left  32 adult   0  38.73      0    9\n249 1069 argon  left  39 adult   1  51.13      0   11\n250 1069 argon  left  39 adult   0  51.13      0   11\n261 1126 argon right  33 adult   1  55.33      0   12\n262 1126 argon right  33 adult   0  55.33      0   10\n265 1145 argon  left  44 adult   1  12.93      1   10\n266 1145 argon  left  44 adult   0   4.97      1    9\n267 1148 argon  left  48 adult   1  54.20      0    9\n268 1148 argon  left  48 adult   0  26.47      1   12\n271 1184 argon  left  46 adult   1  24.43      1   12\n272 1184 argon  left  46 adult   0   9.87      1   11\n273 1191 xenon  left  25 adult   1  50.23      0    9\n274 1191 xenon  left  25 adult   0  50.23      0    9\n279 1228 argon right  26 adult   1  42.23      0    8\n280 1228 argon right  26 adult   0  42.23      0    8\n283 1250 argon right  36 adult   1  66.93      0    9\n284 1250 argon right  36 adult   0  66.93      0    9\n287 1267 xenon right  50 adult   1  67.47      0   12\n288 1267 xenon right  50 adult   0  38.57      1   11\n289 1281 xenon right  44 adult   1   3.67      0    9\n290 1281 xenon right  44 adult   0   3.67      1   10\n297 1309 xenon right  56 adult   1  20.07      0   11\n298 1309 xenon right  56 adult   0   8.83      1    8\n311 1366 xenon right  57 adult   1  55.13      0    6\n312 1366 xenon right  57 adult   0  55.13      0    6\n315 1397 xenon right  33 adult   1  42.20      0   11\n316 1397 xenon right  33 adult   0  42.20      0   11\n317 1410 xenon  left  46 adult   1  38.27      0   10\n318 1410 xenon  left  46 adult   0  38.27      0    9\n321 1425 argon  left  35 adult   1  63.63      0   11\n322 1425 argon  left  35 adult   0  26.17      1   11\n325 1461 xenon right  30 adult   1  54.37      0    9\n326 1461 xenon right  30 adult   0  54.37      0   10\n327 1469 xenon right  51 adult   1  54.60      0    8\n328 1469 xenon right  51 adult   0  10.97      1   12\n329 1480 argon  left  42 adult   1  63.87      0    9\n330 1480 argon  left  42 adult   0  21.10      1    9\n331 1487 argon right  20 adult   1  62.37      0    9\n332 1487 argon right  20 adult   0  43.70      1    8\n333 1491 xenon  left  23 adult   1  62.80      0   11\n334 1491 xenon  left  23 adult   0  62.80      0    9\n335 1499 xenon right  22 adult   1  63.33      0   11\n336 1499 xenon right  22 adult   0  14.37      1    9\n337 1503 xenon  left  25 adult   1  58.53      0    9\n338 1503 xenon  left  25 adult   0  58.53      0    9\n339 1513 argon  left  45 adult   1  58.07      0   12\n340 1513 argon  left  45 adult   0  58.07      0   11\n341 1524 argon  left  20 adult   1  58.50      0   10\n342 1524 argon  left  20 adult   0  58.50      0    9\n343 1533 argon  left  41 adult   1   1.50      1    9\n344 1533 argon  left  41 adult   0  14.37      0    9\n349 1554 xenon  left  36 adult   1  51.10      0   10\n350 1554 xenon  left  36 adult   0  51.10      0    9\n351 1562 xenon right  20 adult   1  49.93      0    9\n352 1562 xenon right  20 adult   0   6.57      1    9\n353 1572 xenon right  24 adult   1  46.27      0    9\n354 1572 xenon right  24 adult   0  46.27      1    9\n355 1581 argon right  28 adult   1  10.60      0    9\n356 1581 argon right  28 adult   0  10.60      0   10\n357 1585 xenon right  51 adult   1  42.77      0    8\n358 1585 xenon right  51 adult   0  42.77      0   12\n365 1619 xenon  left  20 adult   1  74.97      0    9\n366 1619 xenon  left  20 adult   0  61.83      1   12\n381 1683 xenon right  29 adult   1  62.00      0   10\n382 1683 xenon right  29 adult   0  62.00      0    8\n387 1717 argon  left  22 adult   1  51.60      0   12\n388 1717 argon  left  22 adult   0  42.33      1   11\n389 1727 argon right  33 adult   1  49.97      0    9\n390 1727 argon right  33 adult   0   2.90      1   10\n393 1749 argon right  32 adult   1  41.93      0    9\n394 1749 argon right  32 adult   0  41.93      0    9",
    "crumbs": [
      "Indexing and Subsetting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Indexing and Subsetting - Practical</span>"
    ]
  },
  {
    "objectID": "Datacleaning.html",
    "href": "Datacleaning.html",
    "title": "Data Cleaning",
    "section": "",
    "text": "Messy data vs tidy data\nThe data set that you have, is often not ready to perform analyses on. You will need to perform some steps to clean up your data.\nBe aware that this can be a time consuming task! The amount of time and code you will spend on data cleaning, can be a lot larger than the actual analysis.\nRemember that R solely works with syntax. This means that you cannot adjust data manually and you will always have code to reproduce your results.\nSo, if the source data file gets adjusted slightly - say new patients are added, or some measurements are corrected - you just run your code and all your data preparation steps are performed automatically!\nFirst of all we need to make sure data is in a tidy format. Tidy format:\nMake sure that your data is structured so that:",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "Datacleaning.html#messy-data-vs-tidy-data",
    "href": "Datacleaning.html#messy-data-vs-tidy-data",
    "title": "Data Cleaning",
    "section": "",
    "text": "Each variable forms a column\nEach observation forms a row\nEach cell is a single measurement\n\n\n\n\n\n\n\nTip\n\n\n\nIf possible; make sure you already think about your analysis when collecting the data. A protocol and statistical analysis plan are good ways to pre-specify your outcomes and variables. This way, you will need less data cleaning steps and save a lot of time.",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "Datacleaning.html#prepare-data-set-for-analysis",
    "href": "Datacleaning.html#prepare-data-set-for-analysis",
    "title": "Data Cleaning",
    "section": "Prepare data set for analysis",
    "text": "Prepare data set for analysis\n\nFirst look of your data\nLet’s explore a data set.\nWe will use a standard data set available in R (mtcars). Name this data set “data”.\n\ndata(mtcars)\ndata &lt;- mtcars\n\nWith the function head, the first 6 rows are printed. Here we can check the names of the variables and the first entries.\n\nhead(data)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\nThe number of rows can be adjusted.\n\nhead(data, 3)\n\n               mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4     21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710    22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n\n\ntail reports the last 6 rows of the data set\n\ntail(data)\n\n                mpg cyl  disp  hp drat    wt qsec vs am gear carb\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.7  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.9  1  1    5    2\nFord Pantera L 15.8   8 351.0 264 4.22 3.170 14.5  0  1    5    4\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.5  0  1    5    6\nMaserati Bora  15.0   8 301.0 335 3.54 3.570 14.6  0  1    5    8\nVolvo 142E     21.4   4 121.0 109 4.11 2.780 18.6  1  1    4    2\n\n\nOther useful functions for the first glimpse of your data set:\n\nView(data)\n\nView opens the data set\n\ndim(data)\n\n[1] 32 11\n\nstr(data)\n\n'data.frame':   32 obs. of  11 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n $ disp: num  160 160 108 258 360 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ qsec: num  16.5 17 18.6 19.4 17 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n\n\nObtain the variable names\n\nnames(data)\n\n [1] \"mpg\"  \"cyl\"  \"disp\" \"hp\"   \"drat\" \"wt\"   \"qsec\" \"vs\"   \"am\"   \"gear\"\n[11] \"carb\"\n\n\n\n\nRename variables\nIn case there are inconvenient names in your variables, change them:\n\nnames(data)[names(data) == \"carb\"] &lt;- \"CARB\"\n\nWith this, we rename carb to CARB.\n\n\n\n\n\n\nImportant\n\n\n\nRemember: never use spaces or special characters in variable names!\n\n\n\n\n\n\n\n\nTip\n\n\n\nUse unique but short names for your variables (and data sets)\n\n\nThis variable in a test data set is named very inconvenient, because there are spaces in the name:\n\nnames(test)\n\n [1] \"miles per gallon\" \"cyl\"              \"disp\"             \"hp\"              \n [5] \"drat\"             \"wt\"               \"qsec\"             \"vs\"              \n [9] \"am\"               \"gear\"             \"CARB\"            \n\ntest$`miles per gallon`\n\n [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4\n[16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7\n[31] 15.0 21.4\n\n\nBetter rename it:\n\nnames(test)[names(test) == \"miles per gallon\"] &lt;- \"mpg\"\n\n\n\nChange type of variable\nThe type of your variable can be changed.\n\nFrom numeric to factor\n\nUse variable vs, which is a numeric dummy variable (0/1).\n\nstr(data$vs)\n\n num [1:32] 0 0 1 1 0 1 0 1 1 1 ...\n\n\nChange it to a factor with as.factor(). (factor() is also possible)\n\ndata$vs_factor &lt;- as.factor(data$vs)\n\ndata$vs_factor\n\n [1] 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1\nLevels: 0 1\n\nstr(data$vs_factor)\n\n Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 1 2 1 2 2 2 ...\n\n\n\nFrom factor to numeric\n\nChange it back to numeric, with as.numeric().\n\ndata$vs_numeric &lt;- as.numeric(data$vs_factor)\n\ndata$vs_numeric\n\n [1] 1 1 2 2 1 2 1 2 2 2 2 1 1 1 1 1 1 2 2 2 2 1 1 1 1 2 1 2 1 1 1 2\n\nstr(data$vs_numeric)\n\n num [1:32] 1 1 2 2 1 2 1 2 2 2 ...\n\n\nNotice how the values are now 1 and 2 instead of 0 and 1. This is because in vs_factor the labels are 0 and 1, but the underlying values were changed to 1 and 2. To solve this we use the function paste0. Now as.numeric() takes the labels as values for the new numeric variable.\n\ndata$vs_numeric &lt;- as.numeric(paste0(data$vs_factor))\n\ndata$vs_numeric\n\n [1] 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1\n\nstr(data$vs_numeric)\n\n num [1:32] 0 0 1 1 0 1 0 1 1 1 ...\n\n\n\n\nRound variables\nThe function round() rounds variables to the specified number of digits. The default is 0\n\nround(data$wt)\n\n [1] 3 3 2 3 3 3 4 3 3 3 3 4 4 4 5 5 5 2 2 2 2 4 3 4 4 2 2 2 3 3 4 3\n\nround(data$wt, digits = 1)\n\n [1] 2.6 2.9 2.3 3.2 3.4 3.5 3.6 3.2 3.1 3.4 3.4 4.1 3.7 3.8 5.2 5.4 5.3 2.2 1.6\n[20] 1.8 2.5 3.5 3.4 3.8 3.8 1.9 2.1 1.5 3.2 2.8 3.6 2.8\n\n\nSimilar functions are ceiling() and floor(). Can you guess what they do?\n\nceiling(data$wt)\n\n [1] 3 3 3 4 4 4 4 4 4 4 4 5 4 4 6 6 6 3 2 2 3 4 4 4 4 2 3 2 4 3 4 3\n\nfloor(data$wt)\n\n [1] 2 2 2 3 3 3 3 3 3 3 3 4 3 3 5 5 5 2 1 1 2 3 3 3 3 1 2 1 3 2 3 2\n\n\n\n\nTransform variables\nA new variable can be added to the data set, based on the values of an existing variable. For this we use the $ symbol.\nSome examples:\n\ndata$cyl2 &lt;- data$cyl+2\n\ndata$hp10 &lt;- data$hp/10\n\ndata$cyl2_hp10 &lt;- data$cyl2 * data$hp10\n\n\nhead(data[, c(\"cyl\", \"hp\",\"cyl2\", \"hp10\", \"cyl2_hp10\")])\n\n                  cyl  hp cyl2 hp10 cyl2_hp10\nMazda RX4           6 110    8 11.0      88.0\nMazda RX4 Wag       6 110    8 11.0      88.0\nDatsun 710          4  93    6  9.3      55.8\nHornet 4 Drive      6 110    8 11.0      88.0\nHornet Sportabout   8 175   10 17.5     175.0\nValiant             6 105    8 10.5      84.0\n\n\n\n\nMake a subset of your data\nRemove observations with missings (NA) in “mpg” and “cyl”\n\ndata2 &lt;- subset(data, !is.na(data$mpg) & !is.na(data$cyl))\n\n\n\n\n\n\n\nTip\n\n\n\nCreate a new data set with a new name. Otherwise you might lose important information in your data.\n\n\n�\nMake a new data set, including only mpg values &gt; 20. (Don’t forget the comma in the code!)\n\ndata2 &lt;- data[data$mpg &gt; 20, ]\n\n�\n\nRemove duplicates\nThis can be used if there are multiple measurement per patient, but you want to keep only the first.\n\ndata_short &lt;- data[!duplicated(data$gear),]\n\n�\n\n\nMake a subset: Remove variables\n\ndata2 &lt;- data[, -c(1, 2)]\n\nOr\n\ndata2 &lt;- subset(data, select = -c(mpg, cyl))\n\n\n\nMake a subset: Keep variables\n\ndata2 &lt;- data[, c(\"mpg\", \"cyl\")]\n\nOr:\n\ndata2 &lt;- subset(data, select = c(mpg, cyl))\n\n�\n\n\nSort data\n\ndata2 &lt;- data[order(data$mpg),]\nhead(data2)\n\n                     mpg cyl disp  hp drat    wt  qsec vs am gear CARB\nCadillac Fleetwood  10.4   8  472 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8  460 215 3.00 5.424 17.82  0  0    3    4\nCamaro Z28          13.3   8  350 245 3.73 3.840 15.41  0  0    3    4\nDuster 360          14.3   8  360 245 3.21 3.570 15.84  0  0    3    4\nChrysler Imperial   14.7   8  440 230 3.23 5.345 17.42  0  0    3    4\nMaserati Bora       15.0   8  301 335 3.54 3.570 14.60  0  1    5    8\n                    vs_factor vs_numeric cyl2 hp10 cyl2_hp10\nCadillac Fleetwood          0          0   10 20.5       205\nLincoln Continental         0          0   10 21.5       215\nCamaro Z28                  0          0   10 24.5       245\nDuster 360                  0          0   10 24.5       245\nChrysler Imperial           0          0   10 23.0       230\nMaserati Bora               0          0   10 33.5       335\n\n\n�\n\n\n\nLongitudinal data\nWith repeated measures, data can be in long format or wide format.\nWide format:\n\n\n\n\n\n\n\n\n\n\nLong format:\n\n\n\n\n\n\n\n\n\nIn wide format, the repeatedly measured variable has a new column for each measurement. In the long format, these measurements are placed in new rows. In the long format, each patient/observation will have multiple rows.\nHere is an example of a dataset in long format:\n\nhead(Orthodont, 10)\n\nGrouped Data: distance ~ age | Subject\n   distance age Subject  Sex\n1      26.0   8     M01 Male\n2      25.0  10     M01 Male\n3      29.0  12     M01 Male\n4      31.0  14     M01 Male\n5      21.5   8     M02 Male\n6      22.5  10     M02 Male\n7      23.0  12     M02 Male\n8      26.5  14     M02 Male\n9      23.0   8     M03 Male\n10     22.5  10     M03 Male\n\n\nEach subject (M01, M02, etc.) has 4 rows.\nIt depends on the analysis, which format is preferred and we might want to use this data in wide format. Use the function dcast() from the data.table package.\n\nlibrary(data.table)\n\nOrthodont_w &lt;- dcast(setDT(Orthodont), Subject + Sex ~ age, value.var = \"distance\")\n\n\nSubject and Sex are measured only at baseline\nage indicates when the repeated measure is measured\ndistance is the value of this measurement\n\nsetDT() is needed to make a data.table out of your data. This can be seen as an improved version of a data.frame object.\n\nhead(Orthodont_w)\n\nKey: &lt;Subject, Sex&gt;\n   Subject    Sex     8    10    12    14\n     &lt;ord&gt; &lt;fctr&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:     M16   Male  22.0  21.5  23.5  25.0\n2:     M05   Male  20.0  23.5  22.5  26.0\n3:     M02   Male  21.5  22.5  23.0  26.5\n4:     M11   Male  23.0  23.0  23.5  25.0\n5:     M07   Male  22.0  22.0  24.5  26.5\n6:     M08   Male  24.0  21.5  24.5  25.5\n\n\nNotice how the variables age and distance have been replaced with their values.\nIf I start with a data set in wide format, but need to transform it to long format, I use the function melt() (also from data.table).\n\nOrthodont_L &lt;- melt(setDT(Orthodont_w), id = c(\"Subject\", \"Sex\"),\n                     measure =c(\"8\", \"10\", \"12\", \"14\"), \n                     value.name = \"distance\",\n                     variable.name = \"age\")\n\n\nid denotes the variables that are only measured once (at baseline)\nmeasure are the variables that you want to stack\nvalue.name will be the variable name for the repeatedly measured variable\nvariable.name will denote which measurement it is (age of patient)\n\n\n\nhead(Orthodont_L)\n\n   Subject    Sex    age distance\n     &lt;ord&gt; &lt;fctr&gt; &lt;fctr&gt;    &lt;num&gt;\n1:     M16   Male      8     22.0\n2:     M05   Male      8     20.0\n3:     M02   Male      8     21.5\n4:     M11   Male      8     23.0\n5:     M07   Male      8     22.0\n6:     M08   Male      8     24.0\n\n\nIt is possible to reshape with multiple repeated measurements. Here is an example of data where ferritin (FER) and creatinin (CREA) are measured twice.\n\n\n  ID FER1 CREA1 FER2 CREA2\n1  A   44  0.92  133  1.17\n2  B  293  1.02  258  1.45\n3  C  164  1.22   38  0.96\n4  D   90  0.85  149  1.04\n\n\nThe code below reshapes the data to long format\n\ndw.long &lt;- melt(setDT(dw), id = \"ID\",\n        measure=list(c(\"FER1\", \"FER2\"), c(\"CREA1\", \"CREA2\")), \n        value.name=c('FER', 'CREA'),\n        variable.name = \"Time\")\n\ndw.long\n\n       ID   Time   FER  CREA\n   &lt;char&gt; &lt;fctr&gt; &lt;int&gt; &lt;num&gt;\n1:      A      1    44  0.92\n2:      B      1   293  1.02\n3:      C      1   164  1.22\n4:      D      1    90  0.85\n5:      A      2   133  1.17\n6:      B      2   258  1.45\n7:      C      2    38  0.96\n8:      D      2   149  1.04\n\n\nThe function patterns can be used if my repeatedly measured variables are measured with high frequency. By using patterns(\"age\"), all variables with age are stacked.\n\n\nKey: &lt;Subject, Sex&gt;\n   Subject    Sex age_8 age_10 age_12 age_14\n     &lt;ord&gt; &lt;fctr&gt; &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;\n1:     M16   Male  22.0   21.5   23.5   25.0\n2:     M05   Male  20.0   23.5   22.5   26.0\n3:     M02   Male  21.5   22.5   23.0   26.5\n4:     M11   Male  23.0   23.0   23.5   25.0\n5:     M07   Male  22.0   22.0   24.5   26.5\n6:     M08   Male  24.0   21.5   24.5   25.5\n\n\n\ndw.long &lt;- melt(setDT(Orthodont_w), id = c(\"Subject\", \"Sex\"),\n        measure = patterns(\"age\"), \n        value.name = \"distance\",\n        variable.name = \"age\")\n\n\nhead(dw.long, 10)\n\n    Subject    Sex    age distance\n      &lt;ord&gt; &lt;fctr&gt; &lt;fctr&gt;    &lt;num&gt;\n 1:     M16   Male  age_8     22.0\n 2:     M05   Male  age_8     20.0\n 3:     M02   Male  age_8     21.5\n 4:     M11   Male  age_8     23.0\n 5:     M07   Male  age_8     22.0\n 6:     M08   Male  age_8     24.0\n 7:     M03   Male  age_8     23.0\n 8:     M12   Male  age_8     21.5\n 9:     M13   Male  age_8     17.0\n10:     M14   Male  age_8     22.5\n\n\n\n\nMerge data sets\nData sets can be combined in different ways.\n\nAdd new observations (same variables)\nAdd new variables (same observations)\nComplex combining\n\nLet us simulate a few separate data sets. With this code you can replicate the analyses.\n\nset.seed(61) # To obtain the exact same numbers each time.\n\nID &lt;- 1:20\nCenter &lt;- c(rep(\"Center 1\",10), rep(\"Center 2\", 10))\nBMI &lt;- round(rnorm(20, mean = 25, sd = 3))\nCRP &lt;- round(rnorm(20, mean = 80, sd = 30))\nStatus &lt;- sample(c(\"ICU\", \"Hospital\", \"Deceased\"), 20, replace = T)\n\n\ndf_1 &lt;- data.frame(ID = ID[1:10], Center = Center[1:10], BMI = BMI[1:10],\n                   CRP = CRP[1:10])\n\ndf_2 &lt;- data.frame(ID = ID[11:20], Center = Center[11:20], BMI = BMI[11:20],\n                   CRP = CRP[11:20])\n\ndf_3 &lt;- data.frame(ID = ID,  Status = Status)\ndf_4 &lt;- data.frame(ID = c(ID[-c(5, 10, 15)],21:25), Status = c(Status[-c(5, 10, 15)],\n                   sample(c(\"ICU\", \"Hospital\", \"Deceased\"), 5, replace = T)))\n\n\nAdd new observations\nData df_1 and df_2 represent data from two centers (Center 1 and Center 2). Both data sets have 10 observations and 2 baseline variables (BMI and CRP).\n\ndf_1\n\n   ID   Center BMI CRP\n1   1 Center 1  24  84\n2   2 Center 1  24  71\n3   3 Center 1  20  63\n4   4 Center 1  26 109\n5   5 Center 1  21  86\n6   6 Center 1  24 105\n7   7 Center 1  27  96\n8   8 Center 1  27  64\n9   9 Center 1  29  67\n10 10 Center 1  24 105\n\ndf_2\n\n   ID   Center BMI CRP\n1  11 Center 2  21 117\n2  12 Center 2  21  40\n3  13 Center 2  26  88\n4  14 Center 2  31  40\n5  15 Center 2  21 128\n6  16 Center 2  20  57\n7  17 Center 2  26 135\n8  18 Center 2  27  85\n9  19 Center 2  27 108\n10 20 Center 2  22  48\n\n\nWe can paste them together with the function merge(). Create a new data set called data_baseline.\n\ndata_baseline &lt;- merge(df_1, df_2, all = TRUE)\nstr(data_baseline)\n\n'data.frame':   20 obs. of  4 variables:\n $ ID    : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Center: chr  \"Center 1\" \"Center 1\" \"Center 1\" \"Center 1\" ...\n $ BMI   : num  24 24 20 26 21 24 27 27 29 24 ...\n $ CRP   : num  84 71 63 109 86 105 96 64 67 105 ...\n\ndata_baseline\n\n   ID   Center BMI CRP\n1   1 Center 1  24  84\n2   2 Center 1  24  71\n3   3 Center 1  20  63\n4   4 Center 1  26 109\n5   5 Center 1  21  86\n6   6 Center 1  24 105\n7   7 Center 1  27  96\n8   8 Center 1  27  64\n9   9 Center 1  29  67\n10 10 Center 1  24 105\n11 11 Center 2  21 117\n12 12 Center 2  21  40\n13 13 Center 2  26  88\n14 14 Center 2  31  40\n15 15 Center 2  21 128\n16 16 Center 2  20  57\n17 17 Center 2  26 135\n18 18 Center 2  27  85\n19 19 Center 2  27 108\n20 20 Center 2  22  48\n\n\ndata_baseline now has all 20 observations.\n\n\n\n\n\n\nImportant\n\n\n\nThe function rbind() can also be used, because this combines by pasting rows. You have to be careful to have the exact same variable names.\n\n\n\n\nAdd variables\nFor all 20 cases, a specific outcome (Status) is collected in a different data set (df_3)\n\nhead(df_3)\n\n  ID   Status\n1  1      ICU\n2  2 Deceased\n3  3      ICU\n4  4      ICU\n5  5 Deceased\n6  6 Deceased\n\n\nWe want to add the status to data_baseline. For this, we use the function merge() again.\n\ndata_complete &lt;- merge(data_baseline, df_3, all = TRUE)\nstr(data_complete)\n\n'data.frame':   20 obs. of  5 variables:\n $ ID    : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Center: chr  \"Center 1\" \"Center 1\" \"Center 1\" \"Center 1\" ...\n $ BMI   : num  24 24 20 26 21 24 27 27 29 24 ...\n $ CRP   : num  84 71 63 109 86 105 96 64 67 105 ...\n $ Status: chr  \"ICU\" \"Deceased\" \"ICU\" \"ICU\" ...\n\ndata_complete\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   5 Center 1  21  86 Deceased\n6   6 Center 1  24 105 Deceased\n7   7 Center 1  27  96      ICU\n8   8 Center 1  27  64 Hospital\n9   9 Center 1  29  67 Deceased\n10 10 Center 1  24 105 Hospital\n11 11 Center 2  21 117      ICU\n12 12 Center 2  21  40 Hospital\n13 13 Center 2  26  88      ICU\n14 14 Center 2  31  40 Deceased\n15 15 Center 2  21 128 Deceased\n16 16 Center 2  20  57      ICU\n17 17 Center 2  26 135 Hospital\n18 18 Center 2  27  85 Hospital\n19 19 Center 2  27 108 Hospital\n20 20 Center 2  22  48      ICU\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWe can also use cbind() to add variables. Be very careful that your observations are in the exact same order. The function cbind does not match, but simply pastes variables to your data set.\n\n\n\n\nComplex merging\nSometimes combining data sets is more complicated. In data1 and data2 examples below, there are differences in variables, but also cases. They can be merged in four different ways. Think beforehand which way is desirable for your analyses.\n\n\n\n\n\n\n\n\n\nThe corresponding code to the four ways is:\n\ndata_inner &lt;- merge(data1, data2, by = \"ID\")                 # Inner join\ndata_left  &lt;- merge(data1, data2, by = \"ID\", all.x = TRUE)   # Left join\ndata_right &lt;- merge(data1, data2, by = \"ID\", all.y = TRUE)   # Right join\ndata_full  &lt;- merge(data1, data2, by = \"ID\", all = TRUE)     # Full join\n\nSay, we have to repeat the previous merging: we have the data data_baseline with our 20 observations and baseline covariates. The end point is in a separate data set (df_4), but now it does not include the same set of observations (some IDs are missing and others are extra).\n\ndata_baseline\n\n   ID   Center BMI CRP\n1   1 Center 1  24  84\n2   2 Center 1  24  71\n3   3 Center 1  20  63\n4   4 Center 1  26 109\n5   5 Center 1  21  86\n6   6 Center 1  24 105\n7   7 Center 1  27  96\n8   8 Center 1  27  64\n9   9 Center 1  29  67\n10 10 Center 1  24 105\n11 11 Center 2  21 117\n12 12 Center 2  21  40\n13 13 Center 2  26  88\n14 14 Center 2  31  40\n15 15 Center 2  21 128\n16 16 Center 2  20  57\n17 17 Center 2  26 135\n18 18 Center 2  27  85\n19 19 Center 2  27 108\n20 20 Center 2  22  48\n\ndf_4\n\n   ID   Status\n1   1      ICU\n2   2 Deceased\n3   3      ICU\n4   4      ICU\n5   6 Deceased\n6   7      ICU\n7   8 Hospital\n8   9 Deceased\n9  11      ICU\n10 12 Hospital\n11 13      ICU\n12 14 Deceased\n13 16      ICU\n14 17 Hospital\n15 18 Hospital\n16 19 Hospital\n17 20      ICU\n18 21 Deceased\n19 22 Deceased\n20 23      ICU\n21 24 Hospital\n22 25 Hospital\n\n\nCompare what the four different ways of merging do to the data:\n\ndata_inner &lt;- merge(data_baseline, df_4, by = \"ID\")  \ndata_left &lt;- merge(data_baseline, df_4, by = \"ID\", all.x = TRUE)  \ndata_right &lt;- merge(data_baseline, df_4, by = \"ID\", all.y = TRUE)  \ndata_full &lt;- merge(data_baseline, df_4, by = \"ID\", all = TRUE)  \n\ndata_inner\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   6 Center 1  24 105 Deceased\n6   7 Center 1  27  96      ICU\n7   8 Center 1  27  64 Hospital\n8   9 Center 1  29  67 Deceased\n9  11 Center 2  21 117      ICU\n10 12 Center 2  21  40 Hospital\n11 13 Center 2  26  88      ICU\n12 14 Center 2  31  40 Deceased\n13 16 Center 2  20  57      ICU\n14 17 Center 2  26 135 Hospital\n15 18 Center 2  27  85 Hospital\n16 19 Center 2  27 108 Hospital\n17 20 Center 2  22  48      ICU\n\ndata_left\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   5 Center 1  21  86     &lt;NA&gt;\n6   6 Center 1  24 105 Deceased\n7   7 Center 1  27  96      ICU\n8   8 Center 1  27  64 Hospital\n9   9 Center 1  29  67 Deceased\n10 10 Center 1  24 105     &lt;NA&gt;\n11 11 Center 2  21 117      ICU\n12 12 Center 2  21  40 Hospital\n13 13 Center 2  26  88      ICU\n14 14 Center 2  31  40 Deceased\n15 15 Center 2  21 128     &lt;NA&gt;\n16 16 Center 2  20  57      ICU\n17 17 Center 2  26 135 Hospital\n18 18 Center 2  27  85 Hospital\n19 19 Center 2  27 108 Hospital\n20 20 Center 2  22  48      ICU\n\ndata_right\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   6 Center 1  24 105 Deceased\n6   7 Center 1  27  96      ICU\n7   8 Center 1  27  64 Hospital\n8   9 Center 1  29  67 Deceased\n9  11 Center 2  21 117      ICU\n10 12 Center 2  21  40 Hospital\n11 13 Center 2  26  88      ICU\n12 14 Center 2  31  40 Deceased\n13 16 Center 2  20  57      ICU\n14 17 Center 2  26 135 Hospital\n15 18 Center 2  27  85 Hospital\n16 19 Center 2  27 108 Hospital\n17 20 Center 2  22  48      ICU\n18 21     &lt;NA&gt;  NA  NA Deceased\n19 22     &lt;NA&gt;  NA  NA Deceased\n20 23     &lt;NA&gt;  NA  NA      ICU\n21 24     &lt;NA&gt;  NA  NA Hospital\n22 25     &lt;NA&gt;  NA  NA Hospital\n\ndata_full\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   5 Center 1  21  86     &lt;NA&gt;\n6   6 Center 1  24 105 Deceased\n7   7 Center 1  27  96      ICU\n8   8 Center 1  27  64 Hospital\n9   9 Center 1  29  67 Deceased\n10 10 Center 1  24 105     &lt;NA&gt;\n11 11 Center 2  21 117      ICU\n12 12 Center 2  21  40 Hospital\n13 13 Center 2  26  88      ICU\n14 14 Center 2  31  40 Deceased\n15 15 Center 2  21 128     &lt;NA&gt;\n16 16 Center 2  20  57      ICU\n17 17 Center 2  26 135 Hospital\n18 18 Center 2  27  85 Hospital\n19 19 Center 2  27 108 Hospital\n20 20 Center 2  22  48      ICU\n21 21     &lt;NA&gt;  NA  NA Deceased\n22 22     &lt;NA&gt;  NA  NA Deceased\n23 23     &lt;NA&gt;  NA  NA      ICU\n24 24     &lt;NA&gt;  NA  NA Hospital\n25 25     &lt;NA&gt;  NA  NA Hospital\n\n\n\n\nMerge multiple data sets\nIt is possible to merge multiple data sets by creating a list of data set and using the function Reduce(). We can merge df_1, df_2 and df_3 in one go:\n\ndf_list &lt;- list(df_1, df_2, df_3)\n\ndf_complete &lt;- Reduce(function(x,y) merge(x,y, all = TRUE), df_list)\n\ndf_complete\n\n   ID   Center BMI CRP   Status\n1   1 Center 1  24  84      ICU\n2   2 Center 1  24  71 Deceased\n3   3 Center 1  20  63      ICU\n4   4 Center 1  26 109      ICU\n5   5 Center 1  21  86 Deceased\n6   6 Center 1  24 105 Deceased\n7   7 Center 1  27  96      ICU\n8   8 Center 1  27  64 Hospital\n9   9 Center 1  29  67 Deceased\n10 10 Center 1  24 105 Hospital\n11 11 Center 2  21 117      ICU\n12 12 Center 2  21  40 Hospital\n13 13 Center 2  26  88      ICU\n14 14 Center 2  31  40 Deceased\n15 15 Center 2  21 128 Deceased\n16 16 Center 2  20  57      ICU\n17 17 Center 2  26 135 Hospital\n18 18 Center 2  27  85 Hospital\n19 19 Center 2  27 108 Hospital\n20 20 Center 2  22  48      ICU\n\n\n\n\n\n\n\n\nNote\n\n\n\nAfter the lectures on functions, the function will make more sense!",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "Datacleaning.html#explore-data-set",
    "href": "Datacleaning.html#explore-data-set",
    "title": "Data Cleaning",
    "section": "Explore data set",
    "text": "Explore data set\n\nObtain the summaries of each variable\n\nsummary(data)\n\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            CARB       vs_factor   vs_numeric    \n Min.   :0.0000   Min.   :3.000   Min.   :1.000   0:18      Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000   1:14      1st Qu.:0.0000  \n Median :0.0000   Median :4.000   Median :2.000             Median :0.0000  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812             Mean   :0.4375  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000             3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :5.000   Max.   :8.000             Max.   :1.0000  \n      cyl2             hp10         cyl2_hp10    \n Min.   : 6.000   Min.   : 5.20   Min.   : 31.2  \n 1st Qu.: 6.000   1st Qu.: 9.65   1st Qu.: 57.9  \n Median : 8.000   Median :12.30   Median : 98.4  \n Mean   : 8.188   Mean   :14.67   Mean   :130.0  \n 3rd Qu.:10.000   3rd Qu.:18.00   3rd Qu.:180.0  \n Max.   :10.000   Max.   :33.50   Max.   :335.0  \n\n\n�\n\n\nObtain the summaries of one variable\nWith the $ symbol we access a variable in a data set.\n\nsummary(data$mpg)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.40   15.43   19.20   20.09   22.80   33.90 \n\n\nWith summary(), we can also look at the outliers and the missings (NA).\n\n\nGet the other summary statisitics\n\nmean(data$mpg)\n\n[1] 20.09062\n\nsd(data$mpg)\n\n[1] 6.026948\n\nmedian(data$mpg)\n\n[1] 19.2\n\nquantile(data$mpg)\n\n    0%    25%    50%    75%   100% \n10.400 15.425 19.200 22.800 33.900 \n\n\n\n\nGet summary statistics per group\nUse the function aggregate to obtain your summary statistics per group.\nThe last element in the function specifies what you want to calculate.\n\naggregate(mpg ~ vs, data = data, mean)\n\n  vs      mpg\n1  0 16.61667\n2  1 24.55714\n\naggregate(mpg ~ vs, data = data, sd)\n\n  vs      mpg\n1  0 3.860699\n2  1 5.378978\n\naggregate(mpg ~ vs, data = data, median)\n\n  vs   mpg\n1  0 15.65\n2  1 22.80\n\naggregate(mpg ~ vs, data = data, summary)\n\n  vs mpg.Min. mpg.1st Qu. mpg.Median mpg.Mean mpg.3rd Qu. mpg.Max.\n1  0 10.40000    14.77500   15.65000 16.61667    19.07500 26.00000\n2  1 17.80000    21.40000   22.80000 24.55714    29.62500 33.90000\n\n\n\n\nFrequency tables\nUse the function table() for this\n\ntable(data$vs)\n\n\n 0  1 \n18 14 \n\n\nprop.table() gives us proportions.\n\nprop.table(table(data$vs))\n\n\n     0      1 \n0.5625 0.4375 \n\n\nNotice how I need to use the function table() inside prop.table().\n\ntab1 &lt;- table(data$vs)\nprop.table(tab1)\n\n\n     0      1 \n0.5625 0.4375 \n\n\nManually, I can multiply the proportions to obtain percentages.\n\nround(prop.table(tab1)*100,1)\n\n\n   0    1 \n56.2 43.8 \n\n\n\n\nCrosstabs\nTo investigate two categorical variables, I again use the function table().\n\ntable(data$vs, data$gear)\n\n   \n     3  4  5\n  0 12  2  4\n  1  3 10  1\n\n\nThis functions do not provide me with the variable names, so can be tricky to interpret this. The function with() can help with that.\n\nwith(data, table(vs, gear))\n\n   gear\nvs   3  4  5\n  0 12  2  4\n  1  3 10  1\n\n\nAgain use prop.table() for the proportions.\n\ntab2 &lt;- with(data, table(vs, gear))\nprop.table(tab2) # cell percentages\n\n   gear\nvs        3       4       5\n  0 0.37500 0.06250 0.12500\n  1 0.09375 0.31250 0.03125\n\nprop.table(tab2, 1) # row percentages\n\n   gear\nvs           3          4          5\n  0 0.66666667 0.11111111 0.22222222\n  1 0.21428571 0.71428571 0.07142857\n\nprop.table(tab2, 2) # column percentages\n\n   gear\nvs          3         4         5\n  0 0.8000000 0.1666667 0.8000000\n  1 0.2000000 0.8333333 0.2000000",
    "crumbs": [
      "Data Cleaning"
    ]
  },
  {
    "objectID": "Datacleaning_practical.html",
    "href": "Datacleaning_practical.html",
    "title": "4  Data Cleaning - Practical",
    "section": "",
    "text": "For this practical we will use the data set R_data you can find on Canvas. This is a .csv file. Load the data in R. Make sure you specify the correct file path!\n\nR_data &lt;- read.csv(\"~/R_data.csv\")\n\n\nQuestion 1\n\n\nWhat functions are useful for the first exploration of the data? How many observations and variables are in the data set? What type of variables are there?\n\n\n\n\nQuestion 2\n\n\nThere is a typo in one of the variable names (Stauts instead of Status). Change this.\n\n\n\n\nQuestion 3\n\n\nRound the variable folicacid_erys to two decimals.\nVerify by evaluating the first 20 values of this new variables (there are several ways to do this).\n\n\n\n\nQuestion 4\n\n\nMake a new variable birhtweight_kg that gives the birth weight in kilo’s What did you choose for the number of decimals to round the variable?\nVerify by evaluating the first 10 values of this new variables (there are several ways to do this).\n\n\n\n\nQuestion 5\n\n\nThe variables pregnancy_length_weeks and pregnancy_length_days together denote the total length of the pregnancy. For example: pregnancy_length_weeks = 38 and pregnancy_length_days = 4, means this patient is pregnant for 38 weeks plus 4 days. Combine the variables to obtain the length of the pregnancy in days.\nVerify by evaluating the first 12 values of this new variables (there are several ways to do this).\n\n\n\n\nQuestion 6\n\n\nDivide the variable BMI into categories: &lt;18.5 (“Underweight”), 18.5 - 24.9 (“Healthy weight”), 25 - 29.9 (“Overweight”), and &gt;30 (Obesity). How many patients (and %) are in each category?\n\n\n\n\nQuestion 7\n\n\nFor a current analysis, I am only interested in the patients with “Healthy weight”. Additionally, I only want to look at the relation between Status and birthweight. Make a data set with only these two variables and patientnumber, for a subset of the data with the patients with “Healthy weight”.\nWhat are the dimensions of this data set? First try to think yourself and then check with R code.\n\n\n\n\nQuestion 8\n\n\nMake a third data set containing the variables: patientnumber, Status and BMI. Then merge the data set you created in Question 7 with this data set.\nMerging these two data sets can be done several different ways. Describe two ways. What are the dimensions of these data sets?\n\n\n\n\nQuestion 9\n\n\nThere are several biomarkers collected in the data set. Investigate whether there are outliers in the biomarkers: cholesterol, triglycerides, and vitaminB12. Which functions did you use?\n\n\n\n\nQuestion 10\n\n\nIn question 9 we found an outlier. How do you deal with this outlier?\n\n\n\n\nQuestion 11Hint\n\n\nFill in the table with summary statistics below\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\n\n\n\n\n\n\n(n = …)\n(n = …)\n\n\nBMI, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nEducational level\nLow, n(%)\n\n\n\n\n\nIntermediate, n(%)\n\n\n\n\n\nHigh, n(%)\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSmoking\nNo, n(%)\n\n\n\n\n\nYes, n(%)\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSAM, mean (SD)\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSAH, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nVitamin B12, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\n\n\n\nYou can change the order of factors\nR_data$educational_level &lt;- factor(R_data$educational_level, levels = c('low', 'intermediate', 'high'))",
    "crumbs": [
      "Data Cleaning",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data Cleaning - Practical</span>"
    ]
  },
  {
    "objectID": "Datacleaning_answers.html",
    "href": "Datacleaning_answers.html",
    "title": "5  Data Cleaning - Answers",
    "section": "",
    "text": "Warning\n\n\n\nMake sure that you try the exercises yourself first before looking at the answers\n\n\n\nQuestion 1Answer 1\n\n\nWhat functions are useful for the first exploration of the data? How many observations and variables are in the data set? What type of variables are there?\n\n\nwith dim() and str() we can find out the dimensions of the data and the type of variables. The function head() can be used to view the first couple of observations.\n\ndim(R_data)\n\n[1] 190  20\n\nstr(R_data)\n\n'data.frame':   190 obs. of  20 variables:\n $ patientnumber         : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Stauts                : chr  \"intellectual disability\" \"normal brain development\" \"intellectual disability\" \"normal brain development\" ...\n $ iodine_deficiency     : chr  \"no\" \"no\" \"no\" \"yes\" ...\n $ BMI                   : int  32 23 29 22 22 24 24 28 33 32 ...\n $ educational_level     : chr  \"intermediate\" \"intermediate\" \"low\" \"low\" ...\n $ alcohol               : chr  \"no\" \"yes\" \"no\" \"no\" ...\n $ smoking               : chr  \"no\" \"yes\" \"no\" \"no\" ...\n $ medication            : chr  \"no\" \"no\" \"no\" \"no\" ...\n $ birthweight           : int  2618 3541 2619 3810 4136 4030 3377 2500 4255 2952 ...\n $ pregnancy_length_weeks: int  38 40 38 40 42 41 40 37 42 39 ...\n $ pregnancy_length_days : int  4 2 3 5 3 1 4 1 0 2 ...\n $ SAM                   : num  54.5 84 61 43 83 69 79 71.5 56 42.5 ...\n $ SAH                   : num  14.8 23.6 18.7 23.2 17.1 19.6 22.4 18 20 23.4 ...\n $ homocysteine          : num  18.8 15.6 15.2 16.5 19.5 17.5 14.9 22.2 19.1 16 ...\n $ cholesterol           : num  16.5 17.5 16.4 16.4 16.9 15.9 16.9 16 18.6 16.7 ...\n $ HDL                   : num  26.1 26.7 26.2 25.9 26.7 ...\n $ triglycerides         : num  8.84 7.78 7.54 8.95 7.57 7.35 7.63 7.38 8.25 8.27 ...\n $ vitaminB12            : int  303 370 533 346 389 611 604 518 288 520 ...\n $ folicacid_serum       : num  26.4 37.8 33.7 35.1 29 28.3 33.8 31.1 27.7 33.4 ...\n $ folicacid_erys        : num  1132 1467 1528 1539 1178 ...\n\n\nThere are 190 observations and 20 variables. There are integers (int), factors (Factors), and numeric variables (num).\n\n\n\n\nQuestion 2Answer 2\n\n\nThere is a typo in one of the variable names (Stauts instead of Status). Change this.\n\n\n\nnames(R_data)[names(R_data) == \"Stauts\"] &lt;- \"Status\"\nnames(R_data)\n\n [1] \"patientnumber\"          \"Status\"                 \"iodine_deficiency\"     \n [4] \"BMI\"                    \"educational_level\"      \"alcohol\"               \n [7] \"smoking\"                \"medication\"             \"birthweight\"           \n[10] \"pregnancy_length_weeks\" \"pregnancy_length_days\"  \"SAM\"                   \n[13] \"SAH\"                    \"homocysteine\"           \"cholesterol\"           \n[16] \"HDL\"                    \"triglycerides\"          \"vitaminB12\"            \n[19] \"folicacid_serum\"        \"folicacid_erys\"        \n\n\n\n\n\n\nQuestion 3Answer 3\n\n\nRound the variable folicacid_erys to two decimals.\nVerify by evaluating the first 20 values of this new variables (there are several ways to do this).\n\n\n\nR_data$folicacid_erys_round &lt;- round(R_data$folicacid_erys, digits = 2)\nR_data[1:20, \"folicacid_erys_round\"]\n\n [1] 1132.00 1467.18 1527.81 1539.13 1177.54 1175.00 1396.00 1341.20 1228.52\n[10] 1327.22 1110.88 1289.36 1333.85 1329.62 1207.11 1340.00 1173.00 1653.00\n[19] 1088.00  970.00\n\n\n\n\n\n\nQuestion 4Answer 4\n\n\nMake a new variable birthweight_kg that gives the birth weight in kilo’s. What did you choose for the number of decimals to round the variable?\nVerify by evaluating the first 10 values of this new variables (there are several ways to do this).\n\n\n\nR_data$birthweight_kg &lt;- round(R_data$birthweight/1000, digits = 1)\nR_data$birthweight_kg[1:10]\n\n [1] 2.6 3.5 2.6 3.8 4.1 4.0 3.4 2.5 4.3 3.0\n\n\n\n\n\n\nQuestion 5Answer 5\n\n\nThe variables pregnancy_length_weeks and pregnancy_length_days together denote the total length of the pregnancy. For example: pregnancy_length_weeks = 38 and pregnancy_length_days = 4, means this patient is pregnant for 38 weeks plus 4 days. Combine the variables to obtain the length of the pregnancy in days.\nVerify by evaluating the first 12 values of this new variables (there are several ways to do this).\n\n\n\nR_data$total_preg_days &lt;- R_data$pregnancy_length_weeks*7 + R_data$pregnancy_length_days\nhead(R_data$total_preg_days, 12)\n\n [1] 270 282 269 285 297 288 284 260 294 275 263 249\n\n\n\n\n\n\nQuestion 6HintAnswer 6\n\n\nDivide the variable BMI into categories: &lt;18.5 (“Underweight”), 18.5 - 24.9 (“Healthy weight”), 25 - 29.9 (“Overweight”), and &gt;30 (Obesity). How many patients (and %) are in each category?\n\n\nUse the function cut()\n\n\n\nR_data$BMI_cat &lt;- cut(R_data$BMI, breaks=c(-Inf, 18.5, 24.9, 29.9, Inf),\n                       labels=c(\"Underweight\", \"Healthy weight\", \"Overweight\", \"Obesity\"))\n\ntable(R_data$BMI_cat)\n\n\n   Underweight Healthy weight     Overweight        Obesity \n             1            104             76              9 \n\nprop.table(table(R_data$BMI_cat))\n\n\n   Underweight Healthy weight     Overweight        Obesity \n   0.005263158    0.547368421    0.400000000    0.047368421 \n\n\n\n\n\n\nQuestion 7HintAnswer 7\n\n\nFor a current analysis, I am only interested in the patients with “Healthy weight”. Additionally, I only want to look at the relation between Status and birthweight. Make a data set with only these two variables and patientnumber, for a subset of the data with the patients with “Healthy weight”.\nWhat are the dimensions of this data set? First try to think yourself and then check with R code.\n\n\nGive this data set a different name, so you don’t overwrite the original data set.\n\n\nOther solutions might be possible!\n\nR_data2 &lt;- R_data[R_data$BMI_cat == \"Healthy weight\", c(\"patientnumber\",\"Status\", \"birthweight\")]\n\nstr(R_data2)\n\n'data.frame':   104 obs. of  3 variables:\n $ patientnumber: int  2 4 5 6 7 14 16 19 20 21 ...\n $ Status       : chr  \"normal brain development\" \"normal brain development\" \"intellectual disability\" \"intellectual disability\" ...\n $ birthweight  : int  3541 3810 4136 4030 3377 2828 2959 3383 2500 2720 ...\n\ndim(R_data2)\n\n[1] 104   3\n\n\n\n\n\n\nQuestion 8HintAnswer 8\n\n\nMake a third data set containing the variables: patientnumber, Status and BMI. Then merge the data set you created in Question 7 with this data set.\nMerging these two data sets can be done several different ways. Describe two ways. What are the dimensions of these data sets?\n\n\nFor these two data sets inner join and left join will give the same results. The same goes for right join and full join.\n\n\n\nR_data3 &lt;- R_data[, c(\"patientnumber\",\"Status\", \"BMI\")]\n\n\ndata_inner &lt;- merge(R_data2, R_data3, by = c(\"patientnumber\", \"Status\"))\ndata_right &lt;- merge(R_data2, R_data3, by = c(\"patientnumber\", \"Status\"), all.y = T)\n\n\ndim(data_inner)\n\n[1] 104   4\n\ndim(data_right)\n\n[1] 190   4\n\n\n\n\n\n\nQuestion 9Answer 9\n\n\nThere are several biomarkers collected in the data set. Investigate whether there are outliers in the biomarkers: cholesterol, triglycerides, and vitaminB12. Which functions did you use?\n\n\n\n# Cholesterol\nhist(R_data$cholesterol)\n\n\n\n\n\n\n\nplot(R_data$cholesterol)\n\n\n\n\n\n\n\nboxplot(R_data$cholesterol)\n\n\n\n\n\n\n\nsummary(R_data$cholesterol)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.10   16.30   16.80   16.94   17.50   20.30 \n\n# triglycerides\nhist(R_data$triglycerides)\n\n\n\n\n\n\n\nplot(R_data$triglycerides)\n\n\n\n\n\n\n\nboxplot(R_data$triglycerides)\n\n\n\n\n\n\n\nsummary(R_data$triglycerides)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  7.350   7.710   7.925   8.068   8.270  10.300 \n\n# vitaminB12\nhist(R_data$vitaminB12)\n\n\n\n\n\n\n\nplot(R_data$vitaminB12)\n\n\n\n\n\n\n\nboxplot(R_data$vitaminB12)\n\n\n\n\n\n\n\nsummary(R_data$vitaminB12)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  201.0   307.0   370.5   409.7   463.0  3360.0 \n\n\nThere is one outlier in vitaminB12.\n\n\n\n\nQuestion 10Answer 10\n\n\nIn question 9 we found an outlier. How do you deal with this outlier?\n\n\nKnowing that the value of 3360 is an impossible value for vitamin B12, we can decide to remove this measurement. We can either put this measurement to missing (NA)\n\nR_data$vitaminB12_cor &lt;- R_data$vitaminB12\nR_data$vitaminB12_cor[R_data$vitaminB12_cor  == 3360] &lt;- NA \nsummary(R_data$vitaminB12_cor)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  201.0   307.0   370.0   394.1   463.0   766.0       1 \n\n\nor we can remove the whole patient\n\nR_data_cor &lt;- R_data[R_data$vitaminB12 != 3360,]\ndim(R_data_cor)\n\n[1] 189  25\n\n\n\n\n\n\nQuestion 11HintAnswer 11\n\n\nFill in the table with summary statistics below\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\n\n\n\n\n\n\n(n = …)\n(n = …)\n\n\nBMI, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nEducational level\nLow, n(%)\n\n\n\n\n\nIntermediate, n(%)\n\n\n\n\n\nHigh, n(%)\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSmoking\nNo, n(%)\n\n\n\n\n\nYes, n(%)\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSAM, mean (SD)\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nSAH, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\nVitamin B12, median [IQR]\n\n\n\n\n\n\nmissing (n = )\n\n\n\n\n\n\n\nYou can change the order of factors\nR_data$educational_level &lt;- factor(R_data$educational_level, levels = c('low', 'intermediate', 'high'))\n\n\n\ntable(R_data$Status)\n\naggregate(BMI ~ Status, data = R_data, summary)\nR_data$educational_level &lt;- factor(R_data$educational_level, levels = c('low', 'intermediate', 'high'))\nwith(R_data, table(educational_level, Status))\nprop.table(with(R_data, table(educational_level, Status)),2)\n\nwith(R_data, table(smoking, Status))\nprop.table(with(R_data, table(smoking, Status)),2)\n\naggregate(SAM ~ Status, data = R_data, mean)\naggregate(SAM ~ Status, data = R_data, sd)\n\naggregate(SAH ~ Status, data = R_data, summary)\n\naggregate(vitaminB12_cor ~ Status, data = R_data, summary)\n\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\n\n\n\n\n\n\n(n = 82)\n(n = 108)\n\n\nBMI, median [IQR]\n\n24 [22 - 27]\n24 [22 - 26]\n\n\n\nmissing (n = 0 )\n\n\n\n\nEducational level\nLow, n(%)\n31 (38%)\n14 (13%)\n\n\n\nIntermediate, n(%)\n34 (41%)\n48 (44%)\n\n\n\nHigh, n(%)\n17 (21%)\n46 (43%)\n\n\n\nmissing (n = 0)\n\n\n\n\nSmoking\nNo, n(%)\n55 (67%)\n96 (89%)\n\n\n\nYes, n(%)\n27 (33%)\n12 (11%)\n\n\n\nmissing (n = 0)\n\n\n\n\nSAM, mean (SD)\n\n72 (16)\n75 (18)\n\n\n\nmissing (n = 0)\n\n\n\n\nSAH, median [IQR]\n\n16 [15 - 18]\n18 [16 - 20]\n\n\n\nmissing (n = 0)\n\n\n\n\nVitamin B12, median [IQR]\n\n378 [310 - 477]\n363 [305 - 449]\n\n\n\nmissing (n = 1)",
    "crumbs": [
      "Data Cleaning",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Data Cleaning - Answers</span>"
    ]
  },
  {
    "objectID": "Analysis.html",
    "href": "Analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "Hypothesis testing and Confidence Intervals\nComparison is the most common basic principle in medical research. A statement about the truth is compared against a reference statement (the null).\nThe p-value is the probability of obtaining the observed data in the sample (or some- thing more extreme than the observed data), given that the null hypothesis is true. The p-value is calculated based on a point estimate (e.g. mean) of the sample. The decision to reject a null hypothesis based on the p-value depends on a chosen \\(\\alpha\\) level.\nFor a given dataset and corresponding test statistic, we say the results of the test are “statistically significant” if the p-value is less than the pre-selected and fixed significance level, \\(\\alpha\\) (often 0.05).\nNote that there is a distinction between statistical significance and clinical relevance:\nA confidence interval (CI) is another way to show the reliability of a point estimate. The decision to reject or not reject the null hypothesis aligns with whether or not the CI contains the null value (e.g. \\(H_0\\): mean = 0; if CI does not contain 0 then reject, otherwise do not reject \\(H_0\\)). In other words, the decision made by comparing the test statistic’s p-value to \\(\\alpha\\) will be the same as a decision made using a \\((1 - \\alpha) * 100\\%\\) CI. An interpretation of e.g. a 95% CI is “if the testing procedure were repeated on many (k) samples, the confidence intervals would encompass the true population parameter in 95% of the k samples” or, more abstractly, “we are 95% confident that the true [e.g. mean] lies in the confidence interval”.",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "Analysis.html#hypothesis-testing-and-confidence-intervals",
    "href": "Analysis.html#hypothesis-testing-and-confidence-intervals",
    "title": "Analysis",
    "section": "",
    "text": "\\(H_0\\): Null hypothesis, e.g. cholesterol is comparable between men and women\n\\(H_1\\): Alternative hypothesis, e.g. men and women differ on average in cholesterol\n\n\n\n\n\n\nIf the sample size is large enough, even a small difference of 0.1 mmHg blood pressure can be statistically signifcant between groups, though it is not relevant from a clinical point of view.\nIf the sample size is too small, even a sample mean of 150 mmHg can be not statistically significantly different from 130 mmHg, though 20 mmHg is clinically relevant.",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "Analysis.html#comparing-groups",
    "href": "Analysis.html#comparing-groups",
    "title": "Analysis",
    "section": "Comparing groups",
    "text": "Comparing groups\n\nt-Test\nThe t-test is a statistical procedure used to test for the difference in means between two independent populations. The samples should come from normal distributions (can check using e.g. qqnorm()) and the variances from each population are assumed to be equal.\n\n\n\n\n\n\n\n\n\nThe t-test in R makes a correction that does not require equal variances of the two populations. The null hypothesis is that the difference between means is 0; the alternative is that this difference is not 0.\nHere is an example of how to do this test in R. In a data set on tooth growth, it appears that OJ recipients in the sample had a larger tooth growth than VC recipients, on average. We can test if this is true in the larger population using a t-test. Let’s set \\(H_0\\) to be that the two mean tooth lengths are the same and \\(H_a\\) will be that the two mean tooth lengths are not equal. Let’s use a 0.10 significance level, which means the probability we falsely reject the null is 0.10. Note that the function t.test also provides a confidence interval - the confidence level specified should be \\(1 - \\alpha\\) for the interpretations to align.\n\ndata(\"ToothGrowth\")\n\nttooth &lt;- t.test(ToothGrowth$len~ToothGrowth$supp, conf.level = 0.90)\nttooth\n\n\n    Welch Two Sample t-test\n\ndata:  ToothGrowth$len by ToothGrowth$supp\nt = 1.9153, df = 55.309, p-value = 0.06063\nalternative hypothesis: true difference in means between group OJ and group VC is not equal to 0\n90 percent confidence interval:\n 0.4682687 6.9317313\nsample estimates:\nmean in group OJ mean in group VC \n        20.66333         16.96333 \n\n\nHere the p-value is less than our chosen significance level so we reject the null. Therefore, at the 10% significance level, the data provide sufficient evidence that our alternative hypothesis, that there is a difference between using OJ and VC to grow teeth, is true.\nNow consider the following example. Suppose we believe the mean reaction velocity in an enzymatic reaction will be higher in cells treated with Puromycin compared to cells not treated with Puromycin. Let’s use the 0.05 significance level, allowing for a slightly smaller Type I error probability than in the previous example.\n\ndata(\"Puromycin\")\n\nt.test(rate ~ state, data = Puromycin, alternative = \"greater\")\n\n\n    Welch Two Sample t-test\n\ndata:  rate by state\nt = 1.6375, df = 19.578, p-value = 0.05875\nalternative hypothesis: true difference in means between group treated and group untreated is greater than 0\n95 percent confidence interval:\n -1.677431       Inf\nsample estimates:\n  mean in group treated mean in group untreated \n               141.5833                110.7273 \n\n\nHere our p-value is greater than \\(\\alpha\\) so we do not reject the null hypothesis. We therefore conclude that, at the 5% significance level, the data do not provide sufficient evidence that Puromycin increases the mean reaction velocity.\nWe can extract statistics from the output:\n\nmytest &lt;- t.test(rate~state, data = Puromycin, alternative = \"greater\")\nmytest$p.value\n\n[1] 0.05874922\n\nmytest$conf.int\n\n[1] -1.677431       Inf\nattr(,\"conf.level\")\n[1] 0.95\n\n\nCan you guess why the CI goes to Inf (infinity)?\nIf samples are matched or paired (e.g. before/after), use argument paired=TRUE.\n\n\nMann-Whitney U Test\nThe Mann-Whitney U test (also known as the Wilcoxon Rank Sum test) is a non- parametric test for a location shift between two independent populations without assuming normality. However, the values should be sampled from two populations with very similar distributions. The null hypothesis is that there is no shift in the centers of the distributions of the two populations; the alternative is that there is a shift.\n\n\n\n\n\n\n\n\n\n\nwtest &lt;- wilcox.test(rate~state, data = Puromycin, conf.int = TRUE)\nwtest\n\n\n    Wilcoxon rank sum exact test\n\ndata:  rate by state\nW = 88, p-value = 0.1896\nalternative hypothesis: true location shift is not equal to 0\n95 percent confidence interval:\n -10  75\nsample estimates:\ndifference in location \n                    36 \n\nwtest$p.value\n\n[1] 0.1895867\n\n\nThe test statistic W in R is defined to be the sum of the ranks of one of the groups minus \\(n_1(n_1 +1)/2\\). The procedure to obtain a confidence interval is quite involved, but thankfully R will provide it to us upon request.\n\n\nANOVA\nA two-sample t-test is used to test hypotheses about the means of two normal populations using two datasets which were sampled independently of one another from the two respective populations. An analysis of variance (ANOVA) allows for comparing the means of one variable among more than two populations (each of which is normally distributed), again under the assumption that the samples are independent.\n\nIf the variance between groups is higher than the variance within groups, then there is evidence for a difference in means between groups.\nThe null hypothesis is that the means of all groups are equal; the alternative is that at least one group has a different mean from the others.\nANOVA does not provide which group is different nor in what direction; visualization and/or post-hoc pairwise t-tests can provide this information.\n\nHere is a small illustration of the analysis of variance:\n\n\n\n\n\n\n\n\n\nIn the left image there is more variability within each of the three groups (boxplots) than between the three group means (\\(\\bar{x}_1\\), \\(\\bar{x}_2\\), \\(\\bar{x}_3\\)). In the right image there is more variability between the three group means than within each of the three groups..\nAs with the previous testing procedures we’ve seen, we compare the p-value to the pre-selected significance level. If \\(p \\leq \\alpha\\) we reject the null and conclude we have evidence that at least one population (or group) mean is different from the others, while if \\(p &gt; \\alpha\\), we fail to reject the null and conclude we do not have evidence that any of the means are different.\nR will calculate all of the statistics for us! For example, let’s test at the 5% significance level the alternative hypothesis that at least one of the mean BMIs for three different educational levels are different from the other two (versus the null of three equal means).\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\n\nlibrary(readr)\nR_data &lt;- read_csv(\"~/R_data2.csv\")\n\n\nbaby_aov1 &lt;- aov(BMI ~ educational_level, data = R_data)\nsummary(baby_aov1)\n\n                   Df Sum Sq Mean Sq F value Pr(&gt;F)  \neducational_level   2   63.8   31.90   3.409 0.0351 *\nResiduals         187 1749.8    9.36                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nHere the F-statistic is large enough to get a p-value smaller than 0.05 so we conclude at least one population mean BMI is different from the other two. But which group is it? Let’s look at a boxplot:\n\nboxplot(R_data$BMI ~ R_data$educational_level)\n\n\n\n\n\n\n\n\nThis visual information is informative but we can actually make pairwise comparisons of all the means using Tukey’s HSD (for example). We initially used a significance level of 0.05, but will now conduct several tests and use a multiple test procedure that adjusts the family-wise error rate to 5%:\n\nTukeyHSD(baby_aov1)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = BMI ~ educational_level, data = R_data)\n\n$educational_level\n                       diff         lwr      upr     p adj\nintermediate-high 1.1397600 -0.07099027 2.350510 0.0697761\nlow-high          1.3587302 -0.05180238 2.769263 0.0617385\nlow-intermediate  0.2189702 -1.12174472 1.559685 0.9212512\n\n\nNote that we use the multiple testing procedure to account for the fact that we are simultaneously performing more than one test or CI which compounds the error rates of each test. Since all of the CIs contain 0 and none of the p-values are significant at the 5% level, the initial test result is overturned! We do not actually have evidence that education level affects average BMI.\nAlso note you would not bother with these posthoc tests/CIs if your initial ANOVA results were not statistically significant.\n\n\nKruskal-Wallis Test\nThe single-factor ANOVA model for comparing population or treatment means assumed that for all groups, random samples were drawn from normal populations each having the same variance. This normality assumption is required for a valid F test, but the next procedure for testing the equality of the centers of the distributions only requires that the populations have the same continuous distribution.\nThe null hypothesis is that all of the group centers are the same and the alternative is that at least one of the group centers is different. The Kruskal-Wallis test examines the validity of these hypotheses by working on ranks of the data without assuming the data come from a specific distribution.\nThe procedure starts by ranking all the data together on the assumption of the null, that if the centers of the groups are equal, the ranks from all the groups will be intermingled. If the null is false, then some samples will consist mostly of observations having small ranks in the combined sample, whereas others will consist mostly of observations having large ranks.\nThe Kruskal-Wallis test statistic is a measure of the extent to which the sums of the ranks within each group deviate from their common expected value, and the null is rejected if the computed value of the statistic indicates too great a discrepancy between observed and expected rank averages.\nExample. The accompanying observations on axial stiffness index resulted from a study of metal-plate connected trusses in which five different plate lengths (4 in., 6 in., 8 in., 10 in., and 12 in.) were used.\n\n\n\n\n\n\n\n\n\nHere we read in the data:\n\nlibrary(readr)\nstiffness &lt;- read_csv(\"~/stiffness.csv\")\n\nIf we look at the boxplot of the stiffness values for each length, we see that the means are probably different and that the boxplots don’t look very normal:\n\nboxplot(stiffness~lengths, data = stiffness)\n\n\n\n\n\n\n\n\nThe output of the Kruskal-Wallis test confirms that the means are indeed different. The p-value is quite small, indicating at least two of the group centers are different:\n\nkruskal.test(stiffness~lengths, data = stiffness)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  stiffness by lengths\nKruskal-Wallis chi-squared = 20.122, df = 4, p-value = 0.0004724\n\n\n\n\nChi-squared test\nA \\(\\chi^2\\) (read: chi-squared) test of independence tests the null hypothesis that rows and columns are independent in a c x r contingency table (r is number of rows, c columns); the alternative is that they are not independent. The counts must be independent and sampled randomly. We can calculate a chi-squared statistic as follows:\n\\(\\chi^2 = \\sum \\frac{(O_i-E_i)^2}{E_i}\\)\nwhere \\(O_i\\) is the observed count for cell i in the table, and \\(E_i\\) is the expected count, calculated by multiplying the row and column totals for i divided by the overall total. The p-value for the calculated \\(\\chi^2\\) statistic depends on the \\(\\chi^2\\) distribution with \\((r -1)*(c-1)\\) degrees of freedom. R will provide us with the statistic and p-value.\nSuppose we have the following table:\n\n\n\n\nevent\nno event\ntotal\n\n\n\n\ntreatment\n20\n80\n100\n\n\nplacebo\n50\n50\n100\n\n\ntotal\n70\n130\n200\n\n\n\nand we want to know whether our treatment prevents events, that is, does the occurence of an event depend on the type of treatment?\n\nmytable &lt;- matrix(c(20, 50, 80, 50), nrow=2)\nmytable\n\n     [,1] [,2]\n[1,]   20   80\n[2,]   50   50\n\ncstest &lt;- chisq.test(mytable)\ncstest\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  mytable\nX-squared = 18.484, df = 1, p-value = 1.714e-05\n\ncstest$p.value\n\n[1] 1.713801e-05\n\n\n\n\nCorrelations\nIf we want to know the degree of a linear association between 2 variables, we can calculate correlation. Correlation does not make any a priori assumptions about whether one variable is dependent on the other and is not concerned with the relationship between the variables. We have 4 general types of association to consider:\n\n\n\n\n\n\n\n\n\nPearson’s r can only lie in the interval [-1,1] (inclusive), where\n\nr = 0, no linear correlation\nr &gt; 0, positive linear correlation\nr &lt; 0, negative linear correlation\nr = 1, perfect positive linear correlation\nr = -1, perfect negative linear correlation\n\nNote that correlation does not imply causation. If two variables are highly correlated you cannot infer that one is causing the other; they could both be varying along with a third, possibly unknown confounding factor (either causal or not).\nFor Pearson’s r we assume a linear relationship between x and y and that they both follow a normal distribution.\nIf data are not normally distributed, the degree of association can be determined by the ranked correlation coefficient, Spearman’s \\(\\rho\\), which replaces the x’s and y’s in the Pearson formula with their ranks.\nR provides p-values and confidence intervals for both Pearson and Spearman correlations.\nLet’s look at an example of how BMI and cholesterol are associated:\n\nplot(R_data$BMI,  R_data$cholesterol)\n\n\n\n\n\n\n\ncor(R_data$BMI,  R_data$cholesterol)\n\n[1] 0.2004703\n\ncor(R_data$BMI,  R_data$cholesterol, method=\"spearman\")\n\n[1] 0.1876358\n\ncor.test(R_data$BMI,  R_data$cholesterol)\n\n\n    Pearson's product-moment correlation\n\ndata:  R_data$BMI and R_data$cholesterol\nt = 2.8057, df = 188, p-value = 0.00555\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.05982424 0.33331173\nsample estimates:\n      cor \n0.2004703 \n\ncor.test(R_data$BMI,  R_data$cholesterol, method=\"spearman\")\n\nWarning in cor.test.default(R_data$BMI, R_data$cholesterol, method =\n\"spearman\"): Cannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  R_data$BMI and R_data$cholesterol\nS = 928642, p-value = 0.009531\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.1876358 \n\n\nNote the warning message (which is not an error!) that indicates if your data have tied values (e.g. 1, 1, 3, 5) then the p-value is approximated and is not exact. It’s nothing to worry about (especially if you’re not a statistician…).",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "Analysis.html#regression",
    "href": "Analysis.html#regression",
    "title": "Analysis",
    "section": "Regression",
    "text": "Regression\n\nLinear regression\nThere is a high positive correlation between birth weight and gestational age, but this says nothing about predictive power of the variables. We would like to explain how gestational age influences changes in birth weight.\n\nplot(R_data$pregnancy_length_weeks, R_data$birthweight)\n\n\n\n\n\n\n\ncor(R_data$pregnancy_length_weeks, R_data$birthweight)\n\n[1] 0.9785784\n\n\nWe’ll quantify this relationship using linear regression, distinguishing between an in- dependent, or predictor or explanatory, variable (gestational age) and a dependent, or response or outcome, variable (birth weight). Simple linear regression uses the following model:\n\\(Y_i = \\beta_0 + \\beta_1*X_i + \\varepsilon_i\\)\nwhere \\(1 \\leq i \\leq n\\), the model is a straight line, and error is remaining variation which cannot be explained by the model. The parameters \\(beta_0\\) and \\(\\beta_1\\) are the intercept and slope of a straight line, respectively.\nThe \\(\\beta_0\\) and \\(\\beta_1\\) of the one straight line that best fits the data is estimated via the method of least squares. The “best” line is the one that has the lowest sum of squared residuals. The command to get these estimates in R is lm:\n\nlm1 &lt;- lm(birthweight ~ pregnancy_length_weeks, data = R_data)\nlm1\n\n\nCall:\nlm(formula = birthweight ~ pregnancy_length_weeks, data = R_data)\n\nCoefficients:\n           (Intercept)  pregnancy_length_weeks  \n              -12441.4                   400.3  \n\n\nYou can predict for given values\n\npredict(lm1)[R_data$pregnancy_length_weeks==35]\n\n      12       73      141 \n1568.921 1568.921 1568.921 \n\n\nYou can also use predict() to predict y for x’s that are not already in your data:\n\npredict(lm1, newdata=data.frame(pregnancy_length_weeks=c(seq(25,50,5))))\n\n         1          2          3          4          5          6 \n-2434.0284  -432.5538  1568.9207  3570.3952  5571.8698  7573.3443 \n\n\nbut watch out for extrapolating (predicting outside the range of your data) - clearly we can’t have negative birth weights!\nNow, before we make inference on or, actually, even find and use this line, we must check that the following assumptions hold, otherwise we will not obtain trustworthy results: - relationship between x and y can be described by a straight line - outcomes y are independent - variance of residuals is constant across values of x - residuals follow a normal distribution\nTo get diagnostic plots in R, we can check a histogram of the data and additionally plot our model to check that the residuals are normal and homoscedastic (have constant variance) across the weeks:\n\nhist(R_data$birthweight)\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(lm1)\n\n\n\n\n\n\n\n\nThe top left plot tells us if our residuals are homoscedastic, and the top right plot displays a quantile-quantile (QQ) plot to check for normality. Here are examples of bad QQ plots and heteroscedasticity:\n\nset.seed(1234)\npar(mfrow=c(2,2))\nx &lt;- sort(rnorm(100))\ny1 &lt;- sort(rt(100,2))\nplot(x, y1, xlim=c(-3,3), xlab=\"normal\", ylab=\"t, df=2\")\nabline(0, 1)\ny2 &lt;- sort(rexp(100))\nplot(x, y2, xlim=c(-3,3), ylim=c(-6,6), xlab=\"normal\", ylab=\"exponential\")\nabline(0, 1)\nplot(x, x^2-5+rexp(100))\nabline(0, 0, col=\"red\")\nplot(x, x*rexp(100))\nabline(0, 0, col=\"red\")\n\n\n\n\n\n\n\n\nHowever, the assumptions reasonably hold for our baby data, so we’ll go ahead and use the model fit to make inference on the slope.\nActually, R has already done the inference…we just need to extract it from the model:\n\nsummary(lm1)\n\n\nCall:\nlm(formula = birthweight ~ pregnancy_length_weeks, data = R_data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-280.1 -106.7   -2.9  101.2  331.4 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            -12441.401    242.033  -51.40   &lt;2e-16 ***\npregnancy_length_weeks    400.295      6.142   65.17   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 135.7 on 188 degrees of freedom\nMultiple R-squared:  0.9576,    Adjusted R-squared:  0.9574 \nF-statistic:  4248 on 1 and 188 DF,  p-value: &lt; 2.2e-16\n\n\nR has performed a one-sample t-test on the intercept b1 and slope b0 to determine if they are each statistically significantly different from 0. The probabilities are quite small, so we can reject the null hypothesis that they are equal to 0 and conclude that birthweight significantly increases, on average, by 400 grams per every additional week of gestation. The intercept is (usually) unimportant and we don’t really care that it is different from 0. If the p-value for the slope is not small (e.g. greater than 0.05) then we would say “we do not have enough evidence to reject the null hypothesis that the slope is 0.”\nNow, how good does the model actually fit our data? How well does x predict y? The square of Pearson’s correlation coefficient, r, is a measure of goodness of fit. It is the proportion of variance in y that can be explained by the model (so, x). In our example, r2 is:\n\ncor(R_data$pregnancy_length_weeks, R_data$birthweight)^2\n\n[1] 0.9576157\n\nsummary(lm1)$r.squared\n\n[1] 0.9576157\n\n\nwhich means that 96% of the variability in birth weight can be explained by gestational age.\nSimple linear regression models one y on one x. If we have multiple predictor variables, we use multiple linear regression to determine if the variability in y can be explained by this set of variables. In addition to the assumptions required for a valid simple linear regression, we now include that the covariates have no perfect multicollinearity, that is there is no strong correlation between the multiple x’s. The model is\n\\(Y_i = \\beta_0 + \\beta_1*X_{1i} + ... + \\beta_k*X_{ki}+\\varepsilon_i\\)\nIn R, the addition of an extra variable is quite straightforward:\n\ncor(R_data$pregnancy_length_weeks, R_data$BMI)\n\n[1] 0.01068054\n\nlm2 &lt;- lm(birthweight ~ pregnancy_length_weeks + BMI, data = R_data)\nlm2stats &lt;- summary(lm2)\nlm2stats\n\n\nCall:\nlm(formula = birthweight ~ pregnancy_length_weeks + BMI, data = R_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-279.39 -105.78   -1.85  105.25  333.50 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            -12377.339    253.444 -48.837   &lt;2e-16 ***\npregnancy_length_weeks    400.351      6.147  65.133   &lt;2e-16 ***\nBMI                        -2.738      3.190  -0.858    0.392    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 135.8 on 187 degrees of freedom\nMultiple R-squared:  0.9578,    Adjusted R-squared:  0.9573 \nF-statistic:  2121 on 2 and 187 DF,  p-value: &lt; 2.2e-16\n\n\nSince the 2 variables are uncorrelated, we can add BMI to the model. We see that it does not significantly predict birth weight, but gestational age still does. We use the adjusted \\(r^2\\) to check goodness of fit:\n\nlm2stats$adj.r.squared\n\n[1] 0.9573304\n\n\nSo adding BMI does not help explain any of the variability in birth weight (since r2 was previously already 0.96). This is also confirmed by visualization:\n\nplot(R_data$BMI, R_data$birthweight)\n\n\n\n\n\n\n\n\nNote that the summary function returns a lot of information. If, for example, you wanted to extract only the p-values you could do the following:\n\nnames(lm2stats)\n\n [1] \"call\"          \"terms\"         \"residuals\"     \"coefficients\" \n [5] \"aliased\"       \"sigma\"         \"df\"            \"r.squared\"    \n [9] \"adj.r.squared\" \"fstatistic\"    \"cov.unscaled\" \n\nlm2stats$coef[,4]\n\n           (Intercept) pregnancy_length_weeks                    BMI \n         2.179929e-108          1.815592e-130           3.918778e-01 \n\n\nWe can predict birthweights with new data:\n\npredict(lm2, newdata=data.frame(pregnancy_length_weeks=32,\nBMI=30))\n\n      1 \n351.771 \n\n\nBut we cannot forget to check assumptions!\n\npar(mfrow=c(2,2))\nplot(lm2)\n\n\n\n\n\n\n\npar(mfrow=c(1,1))\nhist(lm2$residuals)\n\n\n\n\n\n\n\n\n\n\nLogistic regression\nThere are many research topics for with the dependent variable y is binary (0/1), e.g.\n\nmortality (dead/alive)\ntreatment response (responder/non-responder)\ndevelopment of disease (yes/no)\n\nand we want to predict the membership of an individual to one of the two categories based on a set of predictors.\nIn this situation we have to work with probabilities, which are numbers between 0 and 1. A value \\(P(y)\\) that is close to 0 means that y is very unlikely to occur, while a value close to 1 means that y is very likely to occur.\nIn simple/multiple linear regression a continuous variable y is predicted by continuous/categorical x(s), but if y can only have 2 values (e.g. y = 0 or y = 1), how do we predict the probability that y = 1 given one or more predictors? Could we apply a linear regression model…?\nwe would try to fit \\(P(y = 1) = \\beta_0 + \\beta_1X\\), which doesn’t work. In linear regression we assume the relationship between x and y is linear, but in the case of binary outcomes this assumption is no longer valid. Results obtained from a linear regression model wouldn’t makes sense! Probabilities beyond the interval (0,1) are not interpretable.\nInstead we’re going to use a logistic curve:\n\\(ln(\\frac{p}{1-p}) = \\beta_0 + \\beta_1X\\)\nThe function \\(ln(p/(1- p))\\) is called a logit of p and it is this function of y that is linear in x instead of y itself.\nThis model formulation assures that the predicted probability of an event falls between 0 and 1, unlike a linear regression model.\nAlso note that we’ve made no assumptions about linearity, normality or homoscedasticity! The values of the intercept and slope are estimated using the maximum likelihood method, which finds the values of the coefficients that make the observed data most likely to occur. Statistical significance of estimate coefficients is testing with the Wald test, which is based on the \\(\\chi^2\\) distribution (though R calls it “z”). The goodness of fit is assessed by deviance, which is based on the differences observed-expected principle. Also, the Akaike information criterion (AIC) gives a measure of the quality of the model. The coefficients are most usefully interpreted with the following:\n\\(e^{\\beta} \\ \\frac{\\textrm{odds after a unit change}}{\\textrm{original odds}}\\)\nand when x is binary, \\(e^{\\beta}\\) is the odds ratio from the 2 by 2 contingency table!\nIn R:\n\nR_data$StatusNew &lt;- factor(R_data$Status, \n                           levels = c(\"normal brain development\", \"intellectual disability\"))\nlevels(R_data$StatusNew)\n\n[1] \"normal brain development\" \"intellectual disability\" \n\nlr1 &lt;- glm(StatusNew ~ BMI, family = binomial(logit), data = R_data)\nsummary(lr1)\n\n\nCall:\nglm(formula = StatusNew ~ BMI, family = binomial(logit), data = R_data)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)  \n(Intercept) -2.40591    1.18095  -2.037   0.0416 *\nBMI          0.08782    0.04822   1.821   0.0685 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 259.83  on 189  degrees of freedom\nResidual deviance: 256.44  on 188  degrees of freedom\nAIC: 260.44\n\nNumber of Fisher Scoring iterations: 4\n\n\nso \\(logit(p) = -2.40591+0.08782* BMI\\). Thus the probability of having a baby with an intellectual disability when BMI is 32, is:\n\nlogit_p1 &lt;- -2.40591+0.08782*32\nlogit_p1\n\n[1] 0.40433\n\n\nOr\n\npredict(lr1, newdata = data.frame(BMI = 32), se.fit = TRUE)\n\n$fit\n        1 \n0.4043502 \n\n$se.fit\n[1] 0.3995839\n\n$residual.scale\n[1] 1\n\n\nTo obtain the probability of the event use type = \"response\"\n\npredict(lr1, newdata = data.frame(BMI = 32), se.fit = TRUE, type = \"response\")\n\n$fit\n        1 \n0.5997324 \n\n$se.fit\n        1 \n0.0959215 \n\n$residual.scale\n[1] 1\n\n\nThe coefficient b1 = 0.08782 can be exponentiated to obtain the odds ratio:\n\nsummary(lr1)$coef\n\n               Estimate Std. Error   z value   Pr(&gt;|z|)\n(Intercept) -2.40591055 1.18095490 -2.037259 0.04162413\nBMI          0.08782065 0.04821621  1.821393 0.06854720\n\nb1 &lt;- summary(lr1)$coef[2, 1]\nb1\n\n[1] 0.08782065\n\nexp(b1)\n\n[1] 1.091792\n\n\nLike multiple linear regression, we can add variables into the model here as well:\n\nlr2 &lt;- glm(StatusNew ~ BMI + smoking, family = binomial(logit), data = R_data)\nsummary(lr2)$coef\n\n               Estimate Std. Error   z value    Pr(&gt;|z|)\n(Intercept) -2.52420359 1.22600372 -2.058887 0.039505027\nBMI          0.08128428 0.04997051  1.626645 0.103812552\nsmokingyes   1.34305855 0.38824022  3.459349 0.000541482\n\n\nThus the probability of having a baby with an intellectual disability when BMI is 32, and the mother is a smoker is:\n\nmynewdata &lt;- data.frame(BMI = 32, smoking = factor(\"yes\"))\nlogit_p2 &lt;- predict(lr2, newdata = mynewdata, type = \"response\")\nlogit_p2\n\n        1 \n0.8053309",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "Analysis_practical.html",
    "href": "Analysis_practical.html",
    "title": "Analysis - Practical",
    "section": "",
    "text": "For this practical we will use the data set R_data2 you can find on Canvas. This is a .csv file. Load the data in R. Make sure you specify the correct file path!\n\n\n\n\n\n\nImportant\n\n\n\nThis is a slightly different version of the data set used in the practical on data cleaning! You can still answer the questions, but the results might differ a bit!\n\n\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\n\nlibrary(readr)\nR_data &lt;- read_csv(\"~/R_data2.csv\")\n\n\nQuestion 1\n\n\nIn this question we will look at the variable SAH.\n\nWhat are the mean, median, variance and standard deviation of SAH?\nCreate a histogram and a horizontal boxplot of SAH.\nUtilize the graphs and the summary statistics to describe the shape of the distribution of SAH.\nLog-transform SAH (assign it to log_SAH).\nDescribe the distribution of log_SAH, based on the same techniques.\n\n\n\n\n\nQuestion 2Hint 1Hint 2\n\n\nAre the values of SAH different for the two levels of Status (normal brain development or intellectual disability)? Formulate a hypothesis, test it, and make a decision about whether or not you can reject the null hypothesis. Can you use a t-test (either on the raw or log-transformed data)? Why or why not?\n\n\nCheck the distributions with plots.\n\n\nFor normally distributed data you can use a t-test, for non-normally distributed data you can use the Wilcoxon signed rank test (also knows as the Mann-Whitney U test).\n\n\n\n\nQuestion 3\n\n\nMake a boxplot of the SAH values of the 2 groups and calculate the median difference of SAH between the 2 groups.\nDoes the difference seem clinically relevant? Why or why not?\n\n\n\n\nQuestion 4Hint\n\n\nWe suspect that people who drink alcohol (alcohol is yes) might also be smokers (smoking is yes). Formulate a hypothesis, test it using the appropriate test, and make a decision about statistical significance.\n\n\nuse table()\n\n\n\n\nQuestion 5Hint\n\n\nIn the previous practical we made a Table 1 of baseline characteristics between cases and controls (Intellectual disability and Normal brain development). Test per variable whether the groups are significantly different.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\np-value\n\n\n\n\n\n\n(n = 82)\n(n = 108)\n\n\n\nBMI, median [IQR]\n\n24 [22 - 27]\n24 [22 - 26]\n\n\n\n\nmissing (n = 0 )\n\n\n\n\n\nEducational level\nLow, n(%)\n31 (38%)\n14 (13%)\n\n\n\n\nIntermediate, n(%)\n34 (41%)\n48 (44%)\n\n\n\n\nHigh, n(%)\n17 (21%)\n46 (43%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSmoking\nNo, n(%)\n55 (67%)\n96 (89%)\n\n\n\n\nYes, n(%)\n27 (33%)\n12 (11%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAM, mean (SD)\n\n72 (16)\n75 (18)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAH, median [IQR]\n\n16 [15 - 18]\n18 [16 - 20]\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nVitamin B12, median [IQR]\n\n378 [310 - 477]\n363 [305 - 449]\n\n\n\n\nmissing (n = 1)\n\n\n\n\n\n\n\n\n\nFirst decide which test to use based on the distribution of the variable\n\n\n\n\nQuestion 6\n\n\nFor this question we will look at the correlation between vitaminB12 and homocysteine.\n\nPlot a histogram of each variable to decide whether the Pearson correlation is appropriate to use. Is it?\nMake a scatterplot of vitaminB12 and homocysteine. What correlation do you see in the the graph (postive, negative, none)?\nWhat is the correlation between vitaminB12 and homocysteine? Formulate a hypothesis, do a test, and make a decision as to whether either the Pearson or Spearman correlation is statistically significant.\n\n\n\n\n\nQuestion 7Hint aHint c\n\n\nLet’s see what happens when we categorize a continuous variable.\n\nCut vitaminB12 into 4 groups, where the breaks are the 5 quantile points of vitaminB12 Make sure you include the lowest breakpoint by specifying incl=TRUE. Assign the output to catB12. What are the levels of this new variable?\nUsing the log-transformed variable of homocysteine, asses how log_hc and catB12 relate. Make a boxplot of log_hc for the levels of catB12.\nAre the means of log_-homocysteine_hc equal across all levels of catB12? Formulate a hypothesis, test it, and make a decision for statistical significance.\n\n\n\nUse the function cut() for this. Running ?cut() will give you more information on the function.\n\n\nTest this with an ANOVA test.\n\n\n\n\nQuestion 8Hint\n\n\nRepeat questions 6b and 6c, without transforming homocysteine.\n\n\nWhich statistical test is appropriate in this case?\n\n\n\n\nQuestion 9Hint bHint e\n\n\nWe previously saw that there was an association between vitaminB12 and homocysteine. We will now quantify the magnitude of this relationship and see if we can explain the variabiliy of homocysteine with values of vitaminB12.\n\nWe will estimate a regression model with homocysteine as the dependent variable and vitaminB12 as the independent variable. Write down the equation for the regression model.\nEstimate the regression model and evaluate the residuals. Are the assumptions of the model met?\nThe residuals look a bit skewed. We saw earlier that our dependent variable follows a skewed distribution. The residuals might look better using the transformed version of the variable (log_hc). Re-estimate the model with this variable and evaluate the residuals again. Are you now satisfied?\nAssuming the assumptions hold (even if they don’t), we’ll make inference on the slope. Is vitaminB12 statistically significant in the model? What percent variability does it explain in log_hc?\nWhat is the predicted log_hc level for a person with vitaminB12 equal to 650? What is this value when unlogged (exponentiated)?\n\n\n\nLook at the normality of the residuals and the homoskedasticity\n\n\nUse the predict() function\n\n\n\n\nQuestion 10\n\n\nNow let’s consider a framework where we want to use more than one predictor. We want to build a regression model for SAM using vitaminB12, cholesterol, homocysteine and folicacid_erys (folic acid red blood cells).\n\nRun this multiple regression model in R. Check the assumptions. Do the assumptions hold?\nAssuming the assumptions hold (even if they don’t), we’ll make inference on the covariates. Are any of the variables statistically significant in the model? What percent variability do the variables explain in SAM?\nWhat is the predicted SAM level for a person with the following:\n\nvitaminB12 = 650\ncholesterol = 17\nhomocysteine = 16\nfolicacid erys = 1340\n\n\n\n\nQuestion 11\n\n\nWe would like to know if smoking and vitaminB12 can be used to predict Status.\n\nWhat type of model would you use for this?\nStatus and smoking should be factors for this analysis. Check if this is the case, otherwise use the following code to make factors of these variables:\n\n\nR_data$Status &lt;- as.factor(R_data$Status)\nR_data$smoking &lt;- as.factor(R_data$smoking)\n\nIf we run the model on the data as it is now, R will consider “normal brain development” as the event because it is second in the levels of Status:\n\nlevels(R_data$Status)\n\n[1] \"intellectual disability\"  \"normal brain development\"\n\n\nSo we need to first change these factor levels so we treat “intellectual disability” as the event and “normal brain development” as the baseline. Run the following to change the levels\n\nR_data$StatusNew &lt;- factor(R_data$Status, \n                           levels = c(\"normal brain development\", \"intellectual disability\"))\nlevels(R_data$StatusNew)\n\n[1] \"normal brain development\" \"intellectual disability\" \n\n\n\nRun a logistic regression model in R with StatusNew as the outcome and smoking and vitaminB12 as the predictors. Can either variable significantly predict mental retardation?\nWhat is the probability of having a baby with an intellectual disability given the mother smokes and has a vitaminB12 level of 400? What is the probability of having a baby with an intellectual disability given the mother smokes and has a vitaminB12 level of 650?",
    "crumbs": [
      "Analysis",
      "Analysis - Practical"
    ]
  },
  {
    "objectID": "Analysis_answers.html",
    "href": "Analysis_answers.html",
    "title": "Analysis - Answers",
    "section": "",
    "text": "Warning\n\n\n\nMake sure that you try the exercises yourself first before looking at the answers\n\n\n\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.3.3\n\nR_data &lt;- read_csv(\"Data/R_data2.csv\")\n\n\nQuestion 1Answer 1\n\n\nIn this question we will look at the variable SAH.\n\nWhat are the mean, median, variance and standard deviation of SAH?\nCreate a histogram and a horizontal boxplot of SAH.\nUtilize the graphs and the summary statistics to describe the shape of the distribution of SAH.\nLog-transform SAH (assign it to log_SAH).\nDescribe the distribution of log_SAH, based on the same techniques.\n\n\n\n\n\n\n\nround(mean(R_data$SAH), 2)\n\n[1] 17.59\n\nround(median(R_data$SAH), 2)\n\n[1] 17.3\n\nround(var(R_data$SAH), 2)\n\n[1] 11.27\n\nround(sd(R_data$SAH), 2)\n\n[1] 3.36\n\n\n\n\n\n\nhist(R_data$SAH)\n\n\n\n\n\n\n\nboxplot(R_data$SAH, horizontal=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nSAH has a skewed distribution.\n\n\n\n\nR_data$log_SAH &lt;- log(R_data$SAH)\n\n\n\n\n\nsummary(R_data$log_SAH)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.241   2.723   2.851   2.850   2.948   3.350 \n\nhist(R_data$log_SAH)\n\n\n\n\n\n\n\nboxplot(R_data$log_SAH, horizontal=TRUE)\n\n\n\n\n\n\n\n\nThe log transformed variable looks a lot more normally distributed.\n\n\n\n\nQuestion 2Hint 1Hint 2Answer 2\n\n\nAre the values of SAH different for the two levels of Status (normal brain development or intellectual disability)? Formulate a hypothesis, test it, and make a decision about whether or not you can reject the null hypothesis. Which test did you use?\n\n\nCheck the distributions with plots\n\n\nFor normally distributed data you can use a t-test, for non-normally distributed data you can use the Wilcoxon signed rank test (also knows as the Mann-Whitney U test).\n\n\nWe already saw that SAH is not normally distributed.\nWe will use the Wilcoxon singed rank test on the untransformed data.\nHypotheses:\n\\(H_0: \\textrm{median}_0 = \\textrm{median}_1\\)\n\\(H_a: \\textrm{median}_0 \\neq \\textrm{median}_1\\)\n\nwilcox.test(SAH ~ Status, data = R_data) \n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  SAH by Status\nW = 2868, p-value = 3.264e-05\nalternative hypothesis: true location shift is not equal to 0\n\n\nThe p-value &lt;0.001. Based on a significance level of 5% there is enough evidence to reject the null hypothesis.\n\n\n\n\n\n\nNote\n\n\n\nRemember that you can save the test as an object and extract elements from it (such as the p-value)\n\ntest1 &lt;- wilcox.test(SAH ~ Status, data = R_data) \ntest1$p.value\n\n[1] 3.264271e-05\n\n\n\n\n\n\n\n\nQuestion 3Answer 3\n\n\nMake a boxplot of the SAH values of the 2 groups and calculate the median difference of SAH between the 2 groups.\nDoes the difference seem clinically relevant? Why or why not?\n\n\n\nboxplot(SAH ~ Status, data = R_data)\n\n\n\n\n\n\n\naggregate(SAH ~ Status, data = R_data, median)\n\n                    Status   SAH\n1  intellectual disability 15.85\n2 normal brain development 18.00\n\n\nThe medians and boxplots also show a clinically relevant difference.\n\n\n\n\nQuestion 4HintAnswer 4\n\n\nWe suspect that people who drink alcohol (alcohol is yes) might also be smokers (smoking is yes). Formulate a hypothesis, test it using the appropriate test, and make a decision about statistical significance.\n\n\nuse table()\n\n\nHypotheses\n\\(H_0: P_{alcohol} = P_{no-alcohol}\\)\n\\(H_a: P_{alcohol} \\neq P_{no-alcohol}\\)\n\ntab1 &lt;- with(R_data, table(alcohol, smoking))\ntab1\n\n       smoking\nalcohol no yes\n    no  75   9\n    yes 76  30\n\nprop.table(tab1, 1)\n\n       smoking\nalcohol        no       yes\n    no  0.8928571 0.1071429\n    yes 0.7169811 0.2830189\n\n\nBased on the tables, we see that in the group of patients that drinks alcohol, 28% smokes vs 10% in the non-alcohol group.\nTo test whether this difference is statistically signficant, we use the Chi-square test.\n\nchisq &lt;- chisq.test(tab1)\nchisq\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  tab1\nX-squared = 7.8407, df = 1, p-value = 0.005108\n\n\nThe p-value is 0.005, this is significant on a 5% significance level.\n\n\n\n\nQuestion 5HintAnswer 5\n\n\nIn the previous practical we made a Table 1 of baseline characteristics between cases and controls (Intellectual disability and Normal brain development). Test per variable whether the groups are significantly different.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\np-value\n\n\n\n\n\n\n(n = 82)\n(n = 108)\n\n\n\nBMI, median [IQR]\n\n24 [22 - 27]\n24 [22 - 26]\n\n\n\n\nmissing (n = 0 )\n\n\n\n\n\nEducational level\nLow, n(%)\n31 (38%)\n14 (13%)\n\n\n\n\nIntermediate, n(%)\n34 (41%)\n48 (44%)\n\n\n\n\nHigh, n(%)\n17 (21%)\n46 (43%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSmoking\nNo, n(%)\n55 (67%)\n96 (89%)\n\n\n\n\nYes, n(%)\n27 (33%)\n12 (11%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAM, mean (SD)\n\n72 (16)\n75 (18)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAH, median [IQR]\n\n16 [15 - 18]\n18 [16 - 20]\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nVitamin B12, median [IQR]\n\n378 [310 - 477]\n363 [305 - 449]\n\n\n\n\nmissing (n = 1)\n\n\n\n\n\n\n\n\n\nFirst decide which test to use based on the distribution of the variable\n\n\n\nwilcox.test(BMI ~ Status, data = R_data)$p.value \nchisq.test(R_data$educational_level, R_data$Status)$p.value\nchisq.test(R_data$smoking, R_data$Status)$p.value\nt.test(SAM ~ Status, data = R_data)$p.value \nwilcox.test(SAH ~ Status, data = R_data)$p.value \nwilcox.test(vitaminB12 ~ Status, data = R_data)$p.value \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntellectual disability\nNormal brain development\np-value\n\n\n\n\n\n\n(n = 82)\n(n = 108)\n\n\n\nBMI, median [IQR]\n\n24 [22 - 27]\n24 [22 - 26]\n0.175\n\n\n\nmissing (n = 0 )\n\n\n\n\n\nEducational level\nLow, n(%)\n31 (38%)\n14 (13%)\n&lt;0.001\n\n\n\nIntermediate, n(%)\n34 (41%)\n48 (44%)\n\n\n\n\nHigh, n(%)\n17 (21%)\n46 (43%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSmoking\nNo, n(%)\n55 (67%)\n96 (89%)\n&lt;0.001\n\n\n\nYes, n(%)\n27 (33%)\n12 (11%)\n\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAM, mean (SD)\n\n72 (16)\n75 (18)\n0.267\n\n\n\nmissing (n = 0)\n\n\n\n\n\nSAH, median [IQR]\n\n16 [15 - 18]\n18 [16 - 20]\n&lt;0.001\n\n\n\nmissing (n = 0)\n\n\n\n\n\nVitamin B12, median [IQR]\n\n378 [310 - 477]\n363 [305 - 449]\n0.348\n\n\n\nmissing (n = 1)\n\n\n\n\n\n\n\n\n\n\n\nQuestion 6Answer 6\n\n\nFor this question we will look at the correlation between vitaminB12 and homocysteine.\n\nPlot a histogram of each variable to decide whether the Pearson correlation is appropriate to use. Is it?\nMake a scatterplot of vitaminB12 and homocysteine. What correlation do you see in the the graph (postive, negative, none)?\nWhat is the correlation between vitaminB12 and homocysteine? Formulate a hypothesis, do a test, and make a decision as to whether either the Pearson or Spearman correlation is statistically significant.\n\n\n\n\n\n\n\nhist(R_data$homocysteine)\n\n\n\n\n\n\n\nhist(R_data$vitaminB12)\n\n\n\n\n\n\n\n\nBoth variables look skewed, so the Spearman correlation coefficient is more appropriate.\n\n\n\n\nplot(R_data$homocysteine, R_data$vitaminB12)\n\n\n\n\n\n\n\n\nWe see a slight negative correlation.\n\n\n\n\n\n\nNote\n\n\n\nThis code will give the same result :\n\nplot(vitaminB12 ~ homocysteine, data = R_data)\n\n\n\n\n\n\nHypotheses\n\\(H_0: \\textrm{cor}_{\\textrm{vit, hc}} = 0\\)\n\\(H_a: \\textrm{cor}_{\\textrm{vit, hc}} \\neq 0\\)\n\ncor.test(R_data$homocysteine, R_data$vitaminB12, method = \"spearman\")\n\nWarning in cor.test.default(R_data$homocysteine, R_data$vitaminB12, method =\n\"spearman\"): Cannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  R_data$homocysteine and R_data$vitaminB12\nS = 1511019, p-value = 5.962e-06\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n       rho \n-0.3218201 \n\n\nThe correlation coefficient is -0.322 and is highly significant (p-value &lt; 0.001).\n\n\n\n\n\n\nImportant\n\n\n\nWe often find correlations interesting when they are &gt; 0.5 (or &lt; -0.5). Therefore, testing for significance is not very relevant here.\n\n\n\n\n\n\nQuestion 7Hint aHint cAnswer 7\n\n\nLet’s see what happens when we categorize a continuous variable.\n\nCut vitaminB12 into 4 groups, where the breaks are the 5 quantile points of vitaminB12 Make sure you include the lowest breakpoint by specifying incl=TRUE. Assign the output to catB12. What are the levels of this new variable?\nUsing the log-transformed variable of homocysteine, asses how log_hc and catB12 relate. Make a boxplot of log_hc for the levels of catB12.\nAre the means of log_-homocysteine_hc equal across all levels of catB12? Formulate a hypothesis, test it, and make a decision for statistical significance.\n\n\n\nUse the function cut() for this. Running ?cut() will give you more information on the function.\n\n\nTest this with an ANOVA test.\n\n\n\n\n\n\nR_data$catB12 &lt;- cut(R_data$vitaminB12, breaks = quantile(R_data$vitaminB12), incl=TRUE)\nlevels(R_data$catB12)\n\n[1] \"[201,307]\" \"(307,370]\" \"(370,463]\" \"(463,766]\"\n\n\n\n\n\n\nR_data$log_hc &lt;- log(R_data$homocysteine)\nboxplot(R_data$log_hc ~ R_data$catB12)\n\n\n\n\n\n\n\n\nThere appears to be a trend: the higher levels of catB12 correspond to lower levels of log-transformed homocysteine.\n\n\n\nHypotheses\n\\(H_0: \\mu_1 = \\mu_2 = \\mu_3 = \\mu_4\\)\n\\(H_a: \\textrm{not all means are equal}\\)\n\nANOVA1 &lt;- aov(R_data$log_hc ~ R_data$catB12)\n\nsummary(ANOVA1)\n\n               Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nR_data$catB12   3  0.626 0.20880   6.286 0.000438 ***\nResiduals     186  6.179 0.03322                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe p-value is &lt; 0.05, so we conclude that there is a statistically significant difference between the mean log-homocysteine of at least one of the groups and the others.\n\n\n\n\nQuestion 8HintAnswer 8\n\n\nRepeat questions 6b and 6c, without transforming homocysteine.\n\n\nWhich statistical test is appropriate in this case?\n\n\n\nboxplot(R_data$homocysteine ~ R_data$catB12)\n\n\n\n\n\n\n\n\nHypotheses\n\\(H_0: \\textrm{No difference in the distributions}\\)\n\\(H_a: \\textrm{A difference in the distributions}\\)\n\nKW.1 &lt;- kruskal.test(R_data$homocysteine ~ R_data$catB12)\n\nKW.1\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  R_data$homocysteine by R_data$catB12\nKruskal-Wallis chi-squared = 16.928, df = 3, p-value = 0.0007311\n\n\nThe Kruskal-Wallis test is also highly significant.\n\n\n\n\nQuestion 9Hint bHint eAnswer 9\n\n\nWe previously saw that there was an association between vitaminB12 and homocysteine. We will now quantify the magnitude of this relationship and see if we can explain the variabiliy of homocysteine with values of vitaminB12.\n\nWe will estimate a regression model with homocysteine as the dependent variable and vitaminB12 as the independent variable. Write down the equation for the regression model.\nEstimate the regression model and evaluate the residuals. Are the assumptions of the model met?\nThe residuals look a bit skewed. We saw earlier that our dependent variable follows a skewed distribution. The residuals might look better using the transformed version of the variable (log_hc). Re-estimate the model with this variable and evaluate the residuals again. Are you now satisfied?\nAssuming the assumptions hold (even if they don’t), we’ll make inference on the slope. Is vitaminB12 statistically significant in the model? What percent variability does it explain in log_hc?\nWhat is the predicted log_hc level for a person with vitaminB12 equal to 650? What is this value when unlogged (exponentiated)?\n\n\n\nLook at the normality of the residuals and the homoskedasticity\n\n\nUse the predict() function\n\n\n\n\n\n\\(\\textrm{homocysteine}_i = \\beta_0 + \\beta_1*\\textrm{vitaminB12}_i + \\varepsilon_i\\)\n\n\n\n\nLM1 &lt;- lm(homocysteine ~ vitaminB12, data = R_data)\nplot(LM1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhist(LM1$residuals)\n\n\n\n\n\n\n\n\nIt seems the residuals do not follow a normal distribution, so this assumption does not hold\n\n\n\n\nLM2 &lt;- lm(log_hc ~ vitaminB12, data = R_data)\nplot(LM2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhist(LM2$residuals)\n\n\n\n\n\n\n\n\nThe residuals now look more symmetrical. We are satisfied with these residuals.\n\n\n\n\nsummary(LM2)\n\n\nCall:\nlm(formula = log_hc ~ vitaminB12, data = R_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5501 -0.1288 -0.0041  0.1176  0.5334 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  3.0369329  0.0457556  66.373  &lt; 2e-16 ***\nvitaminB12  -0.0004881  0.0001113  -4.386 1.92e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1812 on 188 degrees of freedom\nMultiple R-squared:  0.09281,   Adjusted R-squared:  0.08799 \nF-statistic: 19.23 on 1 and 188 DF,  p-value: 1.923e-05\n\n\nThe value of the slope for vitaminB12 is statistically significant. So per point increase in vitaminB12, the mean log_hc decreases with 0.0004881.\nThe R-squared is 0.093, meaning that roughly 9% of the variations in log_hc are explained by vitaminB12.\n\n\n\n\nPatient1 &lt;- predict(LM2, newdata = data.frame(vitaminB12 = 650))\nPatient1\n\n       1 \n2.719635 \n\nexp(Patient1)\n\n       1 \n15.17479 \n\n\nThe predicted homocysteine value for a patient with a vitaminB12 value of 650 is 15.2.\n\n\n\n\n\n\nNote\n\n\n\nYou can also calculate this manually:\n\\(\\beta_0 + \\beta_1*650 = 3.037 - 0.0005*650 =\\) 2.712\n\n\n\n\n\n\nQuestion 10Answer 10\n\n\nNow let’s consider a framework where we want to use more than one predictor. We want to build a regression model for SAM using vitaminB12, cholesterol, homocysteine and folicacid_erys (folic acid red blood cells).\n\nRun this multiple regression model in R. Check the assumptions. Do the assumptions hold?\nAssuming the assumptions hold (even if they don’t), we’ll make inference on the covariates. Are any of the variables statistically significant in the model? What percent variability do the variables explain in SAM?\nWhat is the predicted SAM level for a person with the following:\n\nvitaminB12 = 650\ncholesterol = 17\nhomocysteine = 16\nfolicacid erys = 1340\n\n\n\n\n\n\nLM3 &lt;- lm(SAM ~ vitaminB12 + cholesterol + homocysteine + folicacid_erys, data = R_data)\n\nplot(LM3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhist(LM3$residuals)\n\n\n\n\n\n\n\n\nThe residuals look good, meaning that the asumptions hold.\n\n\n\n\nsummary(LM3)\n\n\nCall:\nlm(formula = SAM ~ vitaminB12 + cholesterol + homocysteine + \n    folicacid_erys, data = R_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-35.704 -12.367  -1.047  11.972  49.505 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     1.800739  27.877405   0.065 0.948566    \nvitaminB12     -0.002684   0.011286  -0.238 0.812288    \ncholesterol     4.583482   1.369695   3.346 0.000992 ***\nhomocysteine   -0.645535   0.413510  -1.561 0.120206    \nfolicacid_erys  0.005033   0.006812   0.739 0.460939    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 16.94 on 185 degrees of freedom\nMultiple R-squared:  0.09232,   Adjusted R-squared:  0.0727 \nF-statistic: 4.704 on 4 and 185 DF,  p-value: 0.001225\n\n\nCholesterol is the only significant variable (p-value &lt; 0.05). The R squared is 0.092. So this model explains 9% of variability in SAM.\n\n\n\n\n\n\nNote\n\n\n\nThe adjusted R-squared is 0.0727. This measure gives a penalty for including more covariates in the model and can be used when comparing different models.\n\n\n\n\n\n\nPatient2 &lt;- predict(LM3, newdata = data.frame(vitaminB12 = 650,\n                                              cholesterol = 17,\n                                              homocysteine = 16,\n                                              folicacid_erys = 1340))\nPatient2\n\n       1 \n74.39131 \n\n\n\n\n\n\nQuestion 11Answer 11\n\n\nWe would like to know if smoking and vitaminB12 can be used to predict Status.\n\nWhat type of model would you use for this?\nStatus and smoking should be factors for this analysis. Check if this is the case, otherwise use the following code to make factors of these variables:\n\n\nR_data$Status &lt;- as.factor(R_data$Status)\nR_data$smoking &lt;- as.factor(R_data$smoking)\n\nIf we run the model on the data as it is now, R will consider “normal brain development” as the event because it is second in the levels of Status:\n\nlevels(R_data$Status)\n\nSo we need to first change these factor levels so we treat “intellectual disability” as the event and “normal brain development” as the baseline. Run the following to change the levels\n\nR_data$StatusNew &lt;- factor(R_data$Status, \n                           levels = c(\"normal brain development\", \"intellectual disability\"))\nlevels(R_data$StatusNew)\n\n\nRun a logistic regression model in R with StatusNew as the outcome and smoking and vitaminB12 as the predictors. Can either variable significantly predict mental retardation?\nWhat is the probability of having a baby with an intellectual disability given the mother smokes and has a vitaminB12 level of 400? What is the probability of having a baby with an intellectual disability given the mother smokes and has a vitaminB12 level of 650?\n\n\n\n\n\n\nA logistic regression model\n\n\n\n\nstr(R_data)\n\n'data.frame':   190 obs. of  24 variables:\n $ patientnumber         : num  1 2 3 4 5 6 7 8 9 10 ...\n $ Status                : Factor w/ 2 levels \"intellectual disability\",..: 1 2 1 2 1 1 1 1 1 1 ...\n $ iodine_deficiency     : chr  \"no\" \"no\" \"no\" \"yes\" ...\n $ BMI                   : num  32 23 29 22 22 24 24 28 33 32 ...\n $ educational_level     : chr  \"intermediate\" \"intermediate\" \"low\" \"low\" ...\n $ alcohol               : chr  \"no\" \"yes\" \"no\" \"no\" ...\n $ smoking               : Factor w/ 2 levels \"no\",\"yes\": 1 2 1 1 1 1 1 1 2 1 ...\n $ medication            : chr  \"no\" \"no\" \"no\" \"no\" ...\n $ birthweight           : num  2618 3541 2619 3810 4136 ...\n $ pregnancy_length_weeks: num  38 40 38 40 42 41 40 37 42 39 ...\n $ pregnancy_length_days : num  4 2 3 5 3 1 4 1 0 2 ...\n $ SAM                   : num  54.5 84 61 43 83 69 79 71.5 56 42.5 ...\n $ SAH                   : num  14.8 23.6 18.7 23.2 17.1 19.6 22.4 18 20 23.4 ...\n $ homocysteine          : num  18.8 15.6 15.2 16.5 19.5 17.5 14.9 22.2 19.1 16 ...\n $ cholesterol           : num  16.5 17.5 16.4 16.4 16.9 15.9 16.9 16 18.6 16.7 ...\n $ HDL                   : num  26.1 26.7 26.2 25.9 26.7 ...\n $ triglycerides         : num  8.84 7.78 7.54 8.95 7.57 7.35 7.63 7.38 8.25 8.27 ...\n $ vitaminB12            : num  303 370 533 346 389 611 604 518 288 520 ...\n $ folicacid_serum       : num  26.4 37.8 33.7 35.1 29 28.3 33.8 31.1 27.7 33.4 ...\n $ folicacid_erys        : num  1132 1467 1528 1539 1178 ...\n $ log_SAH               : num  2.69 3.16 2.93 3.14 2.84 ...\n $ catB12                : Factor w/ 4 levels \"[201,307]\",\"(307,370]\",..: 1 2 4 2 3 4 4 4 1 4 ...\n $ log_hc                : num  2.93 2.75 2.72 2.8 2.97 ...\n $ StatusNew             : Factor w/ 2 levels \"normal brain development\",..: 2 1 2 1 2 2 2 2 2 2 ...\n\n\n\n\n\n\nGLM1 &lt;- glm(StatusNew ~ smoking + vitaminB12, \n            family = binomial(logit), data = R_data)\nsummary(GLM1)\n\n\nCall:\nglm(formula = StatusNew ~ smoking + vitaminB12, family = binomial(logit), \n    data = R_data)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -1.397552   0.555095  -2.518 0.011813 *  \nsmokingyes   1.435938   0.391342   3.669 0.000243 ***\nvitaminB12   0.002088   0.001301   1.604 0.108610    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 259.83  on 189  degrees of freedom\nResidual deviance: 243.59  on 187  degrees of freedom\nAIC: 249.59\n\nNumber of Fisher Scoring iterations: 4\n\n\nSmoking is a significant predictor, but vitaminB12 is not.\nTo obtain ORs and their corresponding 95% CI, we might use:\n\nexp(coef(GLM1))\n\n(Intercept)  smokingyes  vitaminB12 \n  0.2472015   4.2035866   1.0020900 \n\nexp(confint(GLM1))\n\nWaiting for profiling to be done...\n\n\n                 2.5 %    97.5 %\n(Intercept) 0.08107013 0.7206897\nsmokingyes  1.99336189 9.3392849\nvitaminB12  0.99955623 1.0046944\n\n\n\n\n\n\nmynew &lt;- data.frame(smoking = factor(c(\"yes\", \"yes\")), vitaminB12 = c(400, 650))\npredict(GLM1, newdata = mynew, type = \"response\")\n\n        1         2 \n0.7054726 0.8014592 \n\n\nThe probabilities are 71% and 80% for these two patients.",
    "crumbs": [
      "Analysis",
      "Analysis - Answers"
    ]
  },
  {
    "objectID": "basic_plotting_intro.html",
    "href": "basic_plotting_intro.html",
    "title": "Basic plotting",
    "section": "",
    "text": "R is a very powerful tool for producing custom graphics ranging from basic scatterplots to 3D plots. In this introduction to plotting we will learn how to create basic graphs like scatterplots, line graphs and bar charts, as well as histograms and boxplots, all of which are available in the base package. Different methods for saving plots will be introduced. We will use the data ToothGrowth throughout the following examples:\n\ndata(ToothGrowth)\nstr(ToothGrowth)\n\n'data.frame':   60 obs. of  3 variables:\n $ len : num  4.2 11.5 7.3 5.8 6.4 10 11.2 11.2 5.2 7 ...\n $ supp: Factor w/ 2 levels \"OJ\",\"VC\": 2 2 2 2 2 2 2 2 2 2 ...\n $ dose: num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...",
    "crumbs": [
      "Basic plotting"
    ]
  },
  {
    "objectID": "basic_plotting.html",
    "href": "basic_plotting.html",
    "title": "6  Basic plotting",
    "section": "",
    "text": "6.1 Scatterplots and Line Graphs",
    "crumbs": [
      "Basic plotting",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Basic plotting</span>"
    ]
  },
  {
    "objectID": "basic_plotting.html#scatterplots-and-line-graphs",
    "href": "basic_plotting.html#scatterplots-and-line-graphs",
    "title": "6  Basic plotting",
    "section": "",
    "text": "Scatterplots\nThe plot function is the most basic function for plotting continuous data. If we use plot on one variable, the values of the variable will be plotted against their index, i.e., the order of the data within the object they’re stored:\n\nplot(ToothGrowth$len)\n\n\n\n\n\n\n\n\nWith two variables plot puts the first variable on the x-axis and the second variable on the y-axis (y versus x):\n\nplot(ToothGrowth$dose, ToothGrowth$len)\n\n\n\n\n\n\n\n\nMany parameters are available for customizing your plot. See ?par for an extensive list. We will just look at a couple here, like changing the axis labels:\n\nplot(ToothGrowth$dose, ToothGrowth$len, xlab = \"Dose\", ylab = \"Tooth Length\")\n\n\n\n\n\n\n\n\nWe can also add a title:\n\nplot(ToothGrowth$dose, ToothGrowth$len, xlab = \"Dose\", ylab = \"Tooth Length\", main = \"Guinea Pig Tooth Growth by Dosage\")\n\n\n\n\n\n\n\n\nand even change the colors and characters of specific points:\n\nplot(ToothGrowth$dose, \n     ToothGrowth$len, \n     xlab = \"Dose\", \n     ylab = \"Tooth Length\", \n     main = \"Guinea Pig Tooth Growth by Dosage\", \n     col = ToothGrowth$supp, \n     pch = as.numeric(ToothGrowth$supp))\n\n\n\n\n\n\n\n\nThe legend function adds a legend so we can easily identify which points represent which groups:\n\nplot(ToothGrowth$dose, ToothGrowth$len, xlab = \"Dose\", ylab = \"Tooth Length\", main = \"Guinea Pig Tooth Growth by Dosage\", col = ToothGrowth$supp, pch = as.numeric(ToothGrowth$supp))\n\nlegend(1.5, 15, c(\"OJ\", \"VC\"), col = 1:2, pch = 1:2)\n\n\n\n\n\n\n\n\nThe location of the legend can also be specified by stating a region of the plot e.g. “bottomright” to place it in the very bottom righthand corner of the plot.\nThe argument cex stands for “character expansion” and will enlarge the size of points:\n\nplot(ToothGrowth$dose, ToothGrowth$len, xlab = \"Dose\",\n     ylab = \"Tooth Length\", main = \"Guinea Pig Tooth Growth by Dosage\",\n     col = ToothGrowth$supp, pch = as.numeric(ToothGrowth$supp),\n     cex = 2)\n\nlegend(1.5, 15, c(\"OJ\", \"VC\"), col = 1:2, pch = as.numeric(ToothGrowth$supp), cex=2)\n\n\n\n\n\n\n\n\n\n\nLine Graphs\nTo create a plot using lines instead of points, we can actually still use plot, but we need to specify the type of plot we want, e.g.:\n\nplot(ToothGrowth$len, type = \"l\") # note type is the letter l for \"line\"\n\n\n\n\n\n\n\n\n\nplot(ToothGrowth$len, type = \"b\") # note type is the letter b for \"both\"\n\n\n\n\n\n\n\n\nWe can add additional lines by calling lines:\n\nplot(ToothGrowth$len, type = \"l\")\nlines(ToothGrowth$len + 2)\n\n\n\n\n\n\n\n\nThe line type, width, and color can be adjusted as follows:\n\nplot(ToothGrowth$len, type = \"l\")\nlines(ToothGrowth$len + 2, lty = 3, lwd = 3, col = \"darkgreen\")",
    "crumbs": [
      "Basic plotting",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Basic plotting</span>"
    ]
  },
  {
    "objectID": "basic_plotting.html#bar-charts-and-histograms",
    "href": "basic_plotting.html#bar-charts-and-histograms",
    "title": "6  Basic plotting",
    "section": "6.2 Bar Charts and Histograms",
    "text": "6.2 Bar Charts and Histograms\n\nBar Charts\nViewing categorical data in a scatterplot often doesn’t make sense. For example, if we want to see the number of guinea pigs who received each dosage, the following doesn’t provide this information in the most intuitive format:\n\nplot(ToothGrowth$dose)\n\n\n\n\n\n\n\n\n\ntable(ToothGrowth$dose)\n\n\n0.5   1   2 \n 20  20  20 \n\n\n\nbarplot(table(ToothGrowth$dose))\n\n\n\n\n\n\n\n\nWe can plot proportions instead of frequencies, as is often helpful (though not in this case):\n\nprops &lt;- table(ToothGrowth$dose)/nrow(ToothGrowth)\nprops\n\n\n      0.5         1         2 \n0.3333333 0.3333333 0.3333333 \n\n\n\nbarplot(props)\n\n\n\n\n\n\n\n\nNote that the y-axis doesn’t quite extend to the height of the bars. The range of the y-axis is easily change in plots by adjusting the parameter ylim (similarly xlim for the x-axis):\n\nbarplot(props, ylim = c(0, .4))\n\n\n\n\n\n\n\n\nYet again, there are many parameters available for customizing the plot. Let’s try changing the width and colors of the bars:\n\nbarplot(props, ylim = c(0, .4), width = .2, col = c(\"blue\", \"white\", \"red\"))\n\n\n\n\n\n\n\n\nAnd we can plot the bars horizontally, if preferable:\n\nbarplot(props, xlim = c(0, .4),\n  width = .2, col = c(\"blue\", \"white\", \"red\"),\n  horiz = TRUE)\n\n\n\n\n\n\n\n\nNote that we adjusted the range of the x-axis now instead of the y-axis.\n\n\nHistograms\nA bar chart is slightly different from a histogram. We use bar charts to plot frequencies (or proportions) of values present in categories. Continuous data don’t have categories, so to make a similar plot we have to create “categories”. They are often called bins or cells and are created by delining ranges in which the frequencies are calculated. Thankfully, R will do this, and plot the histogram, when we call the function hist:\n\nhist(ToothGrowth$len)\n\n\n\n\n\n\n\n\nNote that in a histogram the sides of the cells touch, whereas they do not in a bar chart. We can also plot the proportions, now called “density”, by changing a single parameter:\n\nhist(ToothGrowth$len, freq = FALSE)\n\n\n\n\n\n\n\n\nIn the next graph we plot the histogram with a different bin width by specifying where to make the breakpoints between the bars:\n\nhist(ToothGrowth$len, freq = FALSE, breaks = seq(0, 35, 2))\n\n\n\n\n\n\n\n\nNote how the granularity of the plot changes with the width of the bin. We can also change the breaks by delining the number of cells to use:\n\nhist(ToothGrowth$len, freq = FALSE, breaks = 25)\n\n\n\n\n\n\n\n\nThe same parameters that change the axes and labels are applicable here:\n\nhist(ToothGrowth$len, freq = FALSE, breaks = seq(0, 35, 2),\n  main = \"Histogram of Tooth Growth\", xlab = \"Tooth Length\",\n  ylim = c(0, .07), col = \"orange\")",
    "crumbs": [
      "Basic plotting",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Basic plotting</span>"
    ]
  },
  {
    "objectID": "basic_plotting.html#boxplots",
    "href": "basic_plotting.html#boxplots",
    "title": "6  Basic plotting",
    "section": "6.3 Boxplots",
    "text": "6.3 Boxplots\nA boxplot is another graph we use to view the distribution of a continuous variable. It displays the specified quantiles of the data in the following way:\n\nboxplot(ToothGrowth$len)\n\n\n\n\n\n\n\n\nA single boxplot is nice for visualizing the distribution of one variable, but plotting several side by side allows for a simultaneous comparison of distributions. Here we will use the formula notation. The format y ~ x, where y is a numeric vector and x is a factor, tells the boxplot function that we want to separate the continuous y values into as many boxplots as there are levels of the factor x.\n\nboxplot(ToothGrowth$len~ToothGrowth$supp)\n\n\n\n\n\n\n\n\nJust like in the bar chart, we can plot the boxes horizontally and change the colors, labels and axes:\n\nboxplot(ToothGrowth$len~ToothGrowth$supp,\n  col = c(\"darkgreen\", \"purple\"),\n  ylab = \"Supplement Type\", xlab = \"Tooth Length\",\n  ylim = c(0, 40), horizontal = TRUE)\n\n\n\n\n\n\n\n\nThe settings of the parameters of a plot, including the margins, can be specified by calling par() before creating a plot. One nice setting we’ll introduce here is how to put multiple plots into one graphics device:\n\npar(mfrow = c(1, 2))\n  boxplot(ToothGrowth$len~ToothGrowth$supp, main = \"Boxplot\",\n  xlab = \"Supplement Type\")\n  \nhist(ToothGrowth$len, main = \"Histogram\", xlab = \"Tooth Length\")\n\n\n\n\n\n\n\n\nThe settings will stay fixed until we close the device (e.g. by calling dev.off()) or reset par (e.g. par(mfrow = c(1, 1))). It is highly recommended to get familiar with the help page for par to control graphing parameters to create custom graphs. Another helpful function is axis, which allows the specification of custom axis labels (e.g. where to put them and at what angle). See ?axis for more information.",
    "crumbs": [
      "Basic plotting",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Basic plotting</span>"
    ]
  },
  {
    "objectID": "basic_plotting.html#saving-plots",
    "href": "basic_plotting.html#saving-plots",
    "title": "6  Basic plotting",
    "section": "6.4 Saving Plots",
    "text": "6.4 Saving Plots\nUp until now we have been creating graphs in a single graphics window that gets overwritten every time we create new plots. If we want to save the images created, we can use “Export” in RStudio to specify what type of file we want to write, its size, location, and name.\nAlternatively we can use functions such as png, pdf, and jpeg. Since we can save our code and not our mouse clicks, the use of these functions avoids any confusion about how an image was written, allows for quick simple changes, and provides a convenient way to reproduce multiple, similar plots. For example:\n\n# note: run getwd() to see the working directory -\n# that is the directory to which files will be written\npdf(\"plot1.pdf\", width = 6, height = 9)\nboxplot(ToothGrowth$len~ToothGrowth$supp,\n  col = c(\"darkgreen\", \"purple\"),\n  xlab = \"Supplement Type\", ylab = \"Tooth Length\",\n  ylim = c(0, 40), horizontal = TRUE)\ndev.off()\n\npdf(\"plot2.pdf\", width = 4, height = 8)\nboxplot(ToothGrowth$len~ToothGrowth$supp,\n  col = c(\"darkgreen\", \"purple\"),\n  xlab = \"Supplement Type\", ylab = \"Tooth Length\",\n  ylim = c(0, 40), horizontal = TRUE)\ndev.off()\n\nNote that you have to call dev.off() to finish writing the image to the file. If more than one device is open, the return of that function will display a number larger than 1.\nThe units for the width and height arguments of pdf are in inches (7 by 7), but the default for e.g. png is pixels (there is an argument units to change it to in, cm, or mm):\n\npng(\"plot1.png\", units = \"in\", res = 300,\n  width = 6, height = 9)\n\nboxplot(ToothGrowth$len~ToothGrowth$supp,\n  col = c(\"darkgreen\", \"purple\"),\n  xlab = \"Supplement Type\", ylab = \"Tooth Length\",\n  ylim = c(0, 40), horizontal = TRUE)\n\ndev.off()",
    "crumbs": [
      "Basic plotting",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Basic plotting</span>"
    ]
  },
  {
    "objectID": "basic_plotting_practicals_questions.html",
    "href": "basic_plotting_practicals_questions.html",
    "title": "7  Basic Plotting: Questions",
    "section": "",
    "text": "Use R to do the following exercises on the BOD data\n\nQuestion 1\n\n\nDisplay the built-in dataset called BOD by running BOD.\n\n\n\n\nQuestion 2\n\n\nWhat is the data structure of BOD? What are the dimensions?\n\n\n\n\nQuestion 3\n\n\nWhat are the names of BOD? Use a function other than str.\n\n\n\n\nQuestion 3\n\n\nMake a line graph of demand versus time, where the line is a deep pink dot-dashed line [Hint: run ?par and look for the parameter lty to see the line types]. Add a blue dashed line of 1.1 times the demand and give it a thickness of 2 using the line width parameter lwd. Make sure both lines are entirely visible by adjusting the range of y using the parameter ylim in the original plot.\n\n\n\nUse R to do the following exercises on the chickwts data.\n\nQuestion 4\n\n\nDisplay the built-in chickwts data.\n\n\n\n\nQuestion 5\n\n\nWhat are the names of chickwts? Use a function other than str\n\n\n\n\nQuestion 6\n\n\nWhat are the levels of feed?\n\n\n\n\nQuestion 7\n\n\nMake the following plots in one 2 x 2 image: - A bar chart of the feed types, each bar a different color. - A bar chart of the proportions of feed types, each bar a different color. - A boxplot of the weights by feed type, each box a different color. - A horizontal boxplot of the weights by feed type, each box a different color.\n\n\n\nUse R to do the following exercises on the Puromycin data.\n\nQuestion 8\n\n\nDisplay the built-in Puromycin data.\n\n\n\n\nQuestion 9\n\n\nMake a scatterplot of the rate versus the concentration. Describe the relationship.\n\n\n\n\nQuestion 10\n\n\nMake a scatterplot of the rate versus the log of the concentration. Describe the relationship.\n\n\n\n\nQuestion 11\n\n\nMake a scatterplot of the rate versus the log of the concentration and color the points by treatment group (state). Describe what you see.\n\n\n\n\nQuestion 12\n\n\nMake a scatterplot of the rate versus the log of the concentration, color the points by treatment group (state), label the x-axis “Concentration” and the y-axis “Rate”, and label the plot “Puromycin”.\n\n\n\n\nQuestion 13\n\n\nAdd a legend to the above plot indicating what the points represent.\n\n\n\n\nQuestion 14\n\n\nMake a boxplot of the treated versus untreated rates. Using the function pdf, save the image to a file with a width and height of 7 inches.\n\n\n\n\nQuestion 15\n\n\nMake a histogram of the frequency of concentrations. What is the width of the bins?\n\n\n\n\nQuestion 16\n\n\nMake a histogram of the frequency of concentrations with a bin width of 0.10. How is this different from the histogram above?\n\n\n\n\nQuestion 17\n\n\nPlot the histograms side by side in the same graphic window and make sure they have the same range on the y-axis. Does this make it easier to answer the question of how the two histograms differ?",
    "crumbs": [
      "Basic Plotting: Practicals",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Plotting: Questions</span>"
    ]
  },
  {
    "objectID": "basic_plotting_practicals_answers.html",
    "href": "basic_plotting_practicals_answers.html",
    "title": "8  Basic Plotting: Answers",
    "section": "",
    "text": "Warning\n\n\n\nMake sure that you try the exercises yourself first before looking at the answers\n\n\nUse R to do the following exercises on the BOD data\n\nQuestion 1Answer\n\n\nDisplay the built-in dataset called BOD by running BOD.\n\n\n\nBOD\n\n  Time demand\n1    1    8.3\n2    2   10.3\n3    3   19.0\n4    4   16.0\n5    5   15.6\n6    7   19.8\n\n\n\n\n\n\nQuestion 2Answer\n\n\nWhat is the data structure of BOD? What are the dimensions?\n\n\n\nstr(BOD)\n\n'data.frame':   6 obs. of  2 variables:\n $ Time  : num  1 2 3 4 5 7\n $ demand: num  8.3 10.3 19 16 15.6 19.8\n - attr(*, \"reference\")= chr \"A1.4, p. 270\"\n\ndim(BOD)\n\n[1] 6 2\n\n\n\n\n\n\nQuestion 3Answer\n\n\nWhat are the names of BOD? Use a function other than str.\n\n\n\nnames(BOD)\n\n[1] \"Time\"   \"demand\"\n\n\n\n\n\n\nQuestion 3Answer\n\n\nMake a line graph of demand versus time, where the line is a deep pink dot-dashed line [Hint: run ?par and look for the parameter lty to see the line types]. Add a blue dashed line of 1.1 times the demand and give it a thickness of 2 using the line width parameter lwd. Make sure both lines are entirely visible by adjusting the range of y using the parameter ylim in the original plot.\n\n\n\nplot(BOD$Time, BOD$demand, type = \"l\", lty = 4,\n  col = \"pink\", ylim = c(0, 25))\nlines(BOD$Time, 1.1 * BOD$demand, lwd = 2, col = \"blue\")\n\n\n\n\n\n\n\n\n\n\n\nUse R to do the following exercises on the chickwts data.\n\nQuestion 4Answer\n\n\nDisplay the built-in chickwts data.\n\n\n\nchickwts\n\n   weight      feed\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n11    309   linseed\n12    229   linseed\n13    181   linseed\n14    141   linseed\n15    260   linseed\n16    203   linseed\n17    148   linseed\n18    169   linseed\n19    213   linseed\n20    257   linseed\n21    244   linseed\n22    271   linseed\n23    243   soybean\n24    230   soybean\n25    248   soybean\n26    327   soybean\n27    329   soybean\n28    250   soybean\n29    193   soybean\n30    271   soybean\n31    316   soybean\n32    267   soybean\n33    199   soybean\n34    171   soybean\n35    158   soybean\n36    248   soybean\n37    423 sunflower\n38    340 sunflower\n39    392 sunflower\n40    339 sunflower\n41    341 sunflower\n42    226 sunflower\n43    320 sunflower\n44    295 sunflower\n45    334 sunflower\n46    322 sunflower\n47    297 sunflower\n48    318 sunflower\n49    325  meatmeal\n50    257  meatmeal\n51    303  meatmeal\n52    315  meatmeal\n53    380  meatmeal\n54    153  meatmeal\n55    263  meatmeal\n56    242  meatmeal\n57    206  meatmeal\n58    344  meatmeal\n59    258  meatmeal\n60    368    casein\n61    390    casein\n62    379    casein\n63    260    casein\n64    404    casein\n65    318    casein\n66    352    casein\n67    359    casein\n68    216    casein\n69    222    casein\n70    283    casein\n71    332    casein\n\n\n\n\n\n\nQuestion 5Answer\n\n\nWhat are the names of chickwts? Use a function other than str\n\n\n\nnames(chickwts)\n\n[1] \"weight\" \"feed\"  \n\n\n\n\n\n\nQuestion 6Answer\n\n\nWhat are the levels of feed?\n\n\n\nlevels(chickwts$feed)\n\n[1] \"casein\"    \"horsebean\" \"linseed\"   \"meatmeal\"  \"soybean\"   \"sunflower\"\n\n\n\n\n\n\nQuestion 7Answer\n\n\nMake the following plots in one 2 x 2 image: - A bar chart of the feed types, each bar a different color. - A bar chart of the proportions of feed types, each bar a different color. - A boxplot of the weights by feed type, each box a different color. - A horizontal boxplot of the weights by feed type, each box a different color.\n\n\n\npar(mfrow = c(2, 2))\n\nbarplot(table(chickwts$feed),\n  col = c(\"red\", \"orange\", \"yellow\",\n  \"green\", \"blue\", \"purple\"))\n\nbarplot(table(chickwts$feed)/length(chickwts$feed),\n  col = c(\"red\", \"orange\", \"yellow\",\n  \"green\", \"blue\", \"purple\"))\n\nboxplot(chickwts$weight~chickwts$feed,\n  col = c(\"red\", \"orange\", \"yellow\",\n  \"green\", \"blue\", \"purple\"))\n\nboxplot(chickwts$weight~chickwts$feed,\n  col = c(\"red\", \"orange\", \"yellow\",\n  \"green\", \"blue\", \"purple\"),\n  horizontal = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nUse R to do the following exercises on the Puromycin data.\n\nQuestion 8Answer\n\n\nDisplay the built-in Puromycin data.\n\n\n\nPuromycin\n\n   conc rate     state\n1  0.02   76   treated\n2  0.02   47   treated\n3  0.06   97   treated\n4  0.06  107   treated\n5  0.11  123   treated\n6  0.11  139   treated\n7  0.22  159   treated\n8  0.22  152   treated\n9  0.56  191   treated\n10 0.56  201   treated\n11 1.10  207   treated\n12 1.10  200   treated\n13 0.02   67 untreated\n14 0.02   51 untreated\n15 0.06   84 untreated\n16 0.06   86 untreated\n17 0.11   98 untreated\n18 0.11  115 untreated\n19 0.22  131 untreated\n20 0.22  124 untreated\n21 0.56  144 untreated\n22 0.56  158 untreated\n23 1.10  160 untreated\n\n\n\n\n\n\nQuestion 9Answer\n\n\nMake a scatterplot of the rate versus the concentration. Describe the relationship.\n\n\n\nplot(Puromycin$conc, Puromycin$rate)\n\n\n\n\n\n\n\n\nThe rate increases faster at lower concentrations than at higher concentrations.\n\n\n\n\nQuestion 10Answer\n\n\nMake a scatterplot of the rate versus the log of the concentration. Describe the relationship.\n\n\n\nplot(log(Puromycin$conc), Puromycin$rate)\n\n\n\n\n\n\n\n\nThe two variables have a linear relationship\n\n\n\n\nQuestion 11Answer\n\n\nMake a scatterplot of the rate versus the log of the concentration and color the points by treatment group (state). Describe what you see.\n\n\n\nplot(log(Puromycin$conc), Puromycin$rate, col = Puromycin$state)\n\n\n\n\n\n\n\n\nIt appears that the the treated group has higher rates than the untreated group, on average. (Note that default colors are black for the first level and red for the second level).\n\n\n\n\nQuestion 12Answer\n\n\nMake a scatterplot of the rate versus the log of the concentration, color the points by treatment group (state), label the x-axis “Concentration” and the y-axis “Rate”, and label the plot “Puromycin”.\n\n\n\nplot(log(Puromycin$conc), Puromycin$rate, col = Puromycin$state,\n  xlab = \"Concentration\", ylab = \"Rate\", main = \"Puromycin\")\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion 13Answer\n\n\nAdd a legend to the above plot indicating what the points represent.\n\n\n\nplot(log(Puromycin$conc), Puromycin$rate, col = Puromycin$state,\n  xlab = \"Concentration\", ylab = \"Rate\", main = \"Puromycin\")\n\nlegend(\"topleft\",c(\"Treated\", \"Untreated\"), col = 1:2, pch = 1)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion 14Answer\n\n\nMake a boxplot of the treated versus untreated rates. Using the function pdf, save the image to a file with a width and height of 7 inches.\n\n\n\npdf(\"puromycin.pdf\",width = 7, height = 7)\nboxplot(Puromycin$rate~Puromycin$state)\ndev.off()\n\n\n\n\n\nQuestion 15Answer\n\n\nMake a histogram of the frequency of concentrations. What is the width of the bins?\n\n\n\nhist(Puromycin$conc)\n\n\n\n\n\n\n\n\nThe bin width is 0.20.\n\n\n\n\nQuestion 16Answer\n\n\nMake a histogram of the frequency of concentrations with a bin width of 0.10. How is this different from the histogram above?\n\n\n\nhist(Puromycin$conc, breaks = seq(0, 1.2, .10))\n\n\n\n\n\n\n\n\nThe bins are narrower, so we see in finer detail the distribution of the concentrations.\n\n\n\n\nQuestion 17Answer\n\n\nPlot the histograms side by side in the same graphic window and make sure they have the same range on the y-axis. Does this make it easier to answer the question of how the two histograms differ?\n\n\n\npar(mfrow = c(1, 2))\nhist(Puromycin$conc, ylim = c(0, 12))\nhist(Puromycin$conc, breaks = seq(0, 1.2, .10), ylim = c(0, 12))\n\n\n\n\n\n\n\n\nIn some situations it may be of use to view plots simultaneously. In this case, on the right we see clearly that more values are between 0 and 0.10 than 0.10 and 0.20 whereas the plot on the left does not display this information. In the histogram on the right we see that no concentrations fall between 0.30 and 0.50, whereas this is not apparent in the histogram on the left.",
    "crumbs": [
      "Basic Plotting: Practicals",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Basic Plotting: Answers</span>"
    ]
  },
  {
    "objectID": "ggplot2_intro.html",
    "href": "ggplot2_intro.html",
    "title": "ggplot2",
    "section": "",
    "text": "Grammar of graphics\nThe grammar of graphics consists of a number of “layers”, which generate a ggplot when correctly put together. These five basic layers will be discussed here:",
    "crumbs": [
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2_intro.html#grammar-of-graphics",
    "href": "ggplot2_intro.html#grammar-of-graphics",
    "title": "ggplot2",
    "section": "",
    "text": "Data\nAesthetics\nGeometries\nFacets\nScales\nThemes",
    "crumbs": [
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html",
    "href": "ggplot2.html",
    "title": "9  Data visualization using ggplot2",
    "section": "",
    "text": "9.1 Data\nThe basis of each plot is the data. To plot data with ggplot the data needs to be of the class “data.frame”. The structure of your data.frame is important when you want to plot it with ggplot. Each variable you want to use has to be in a separate column in your data.frame. Take for example the “Indometh” data set which comes with R.\n?Indometh\nThe “Indometh”” data set describes the pharmacokinetics of indomethacin after intravenous injection of indomethacin in six subjects. The data.frame has three columns one containing the subject number, one containing the time of sampling in hours, and one containing the indomethacin concentration ug/ml. This data set is easily plotted with ggplot because it is a data.frame and there is a good separation of variables in the columns.\nSubject time conc\n1       1 0.25 1.50\n2       1 0.50 0.94\n3       1 0.75 0.78\n4       1 1.00 0.48\n5       1 1.25 0.37\n6       1 2.00 0.19\nAn example of a badly formatted data set for visualization with ggplot is a data set of monthly deaths from lung diseases in the UK:\n?ldeaths\nThis data set contains three separate data sets for female, male and both male and female deaths (ldeaths, fdeaths, and mdeaths). The columns contain values per month and the rows indicate the year. (also they are not data.frames)\nJan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n1974 3035 2552 2704 2554 2014 1655 1721 1524 1596 2074 2199 2512\n1975 2933 2889 2938 2497 1870 1726 1607 1545 1396 1787 2076 2837\n1976 2787 3891 3179 2011 1636 1580 1489 1300 1356 1653 2013 2823\n1977 3102 2294 2385 2444 1748 1554 1498 1361 1346 1564 1640 2293\n1978 2815 3137 2679 1969 1870 1633 1529 1366 1357 1570 1535 2491\n1979 3084 2605 2573 2143 1693 1504 1461 1354 1333 1492 1781 1915\nSince there are two separate data sets, there is no column indicating the sex. There is also no column indicating the year and no column indicating the month. This means that we cannot use these variables in ggplot to visualize, for instance, the difference between the number of deaths in men and women in a certain year. We can use some more advanced R data reshaping to get these data sets in the right shape.\nDeaths Year Month    Sex\n1    901 1974   Jan female\n2    689 1974   Feb female\n3    827 1974   Mar female\n4    677 1974   Apr female\n5    522 1974   May female\n6    406 1974   Jun female\nggplot(data, aes(x=Month, y=Deaths, color=Sex)) + geom_point()\nHowever, it is much more easy to keep in mind that any variable that you want to use as a part of your ggplot should get its own column when you are designing your data set (in Excel). With the data in the right class and the right format we can easily call the ggplot function, and add a scatter plot layer to it.",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#aesthetics",
    "href": "ggplot2.html#aesthetics",
    "title": "9  Data visualization using ggplot2",
    "section": "9.2 Aesthetics",
    "text": "9.2 Aesthetics\nAfter figuring out what data to plot it is necessary to indicate how to plot it. Aesthetics are used to indicate how to plot what. As we saw in the plot of the ldeaths data we start with indicating what data.frame to plot and use aes() to indicate what to plot on the x axis, the y axis and what to use as color. We do not have to indicate what to plot where and which color to give to which category. We simply map a column of our data.frame to an aesthetic. Depending on the geom we use there are a number of aesthetics that can be mapped to a variable:\n\nx\ny\ncolor\nfill\nsize\nalpha\nlinetype\nlabels\nshape\ngroup\n\nAesthetics can also be specified per geom layer. This allows plotting multiple geom layers with different aesthetics. However, when using one data source and one geom layer this will result in exactly the same plot.\n\nggplot(data) + geom_point(aes(x=Month, y=Deaths, color=Sex))\n\nWe can also use plotting parameters without mapping them to a variable to change all dots in the geom_point. This can only be done in the geom itself.\n\nggplot(data, aes(x=Month, y=Deaths, color=Sex)) + geom_point(size=3)",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#geometries",
    "href": "ggplot2.html#geometries",
    "title": "9  Data visualization using ggplot2",
    "section": "9.3 Geometries",
    "text": "9.3 Geometries\nFor the previous ggplots we have used the geom_point function which generates a scatter plot layer that can be added to the ggplot. “point” is one of the many geometry layers available in the ggplot library. There are over thirty different geoms in ggplot which can be found at http://docs.ggplot2.org/. We will have a look at the plot types that we have already encountered using the basic R plotting functions and replace them with their ggplot counterparts.\n\nScatter plots\nJust like with other objects in R a ggplot object can be saved to a variable using “&lt;-”. This makes it possible to store the basic plot in a variable and add different geoms to it. Geometries are added to a plot using “+”.\n\n#Basic graphics:\nplot(ToothGrowth$len)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(ToothGrowth)\np + geom_point(aes(x=as.numeric(rownames(ToothGrowth)), y=len), size=2)\n\n\n\n\n\n\n\n\nWe now map the numeric row names of ToothGrowth to the x aesthetic, however, we could also create a new column called index in the data.frame.\n\nToothGrowth$index &lt;- as.numeric(rownames(ToothGrowth))\n\nWhen we change the data of the ggplot object we saved in variable p we need to recreate the ggplot object with the new data set.\n\np &lt;- ggplot(ToothGrowth)\n\n\n\nLine graphs\n\n#Basic graphics:\nplot(ToothGrowth$len, type = \"l\")\n\n\n\n\n\n\n\np + geom_line(aes(x=index, y=len))\n\n\n\n\n\n\n\n\n\n\nBar charts\n\n#Basic graphics:\nbarplot(table(ToothGrowth$dose))\n\n\n\n\n\n\n\np + geom_bar(aes(x=dose))\n\n\n\n\n\n\n\n\nBecause dose is a continuous variable, ggplot creates a x axis with a continuous scale, which is why there is an empty spot for the 1.5 dose. If we want to use a continuous value as a categorical value we can change it into a factor on the fly in the geom function:\n\np + geom_bar(aes(x=as.factor(dose)))\n\n\n\n\n\n\n\n\n\n\nHistograms\n\n#Basic graphics:\nhist(ToothGrowth$len,breaks = 50)\n\n\n\n\n\n\n\np + geom_histogram(aes(x=len), binwidth = 0.5)\n\n\n\n\n\n\n\n\n\n\nBox plots\n\n#Basic graphics:\nboxplot(ToothGrowth$len~ToothGrowth$supp)\n\n\n\n\n\n\n\n\n\np + geom_boxplot(aes(x=supp,y=len))\n\n\n\n\n\n\n\n\nIf we want whiskers in our plot we can add an error bar geom\n\np + geom_errorbar(aes(x=supp, ymin=..., ymax=...),width=0.5)\n\n\n\n\n\n\n\n\n\n\nHowever, as you can see, this geom requires ymin and ymax as aesthetics and does not calculate the values by itself. We could calculate the min and max values for tooth length grouped by supplement, but we will use a trick using ggplot’s box plot statistics function. (if you want to know more, please read more about these “stat” functions online)\nFirst, we add the error bars with the “stat_boxplot” function, and then add the box plots on top of them.\n\np + stat_boxplot(aes(x=supp,y=len), geom=\"errorbar\", width=0.5) + \n    geom_boxplot(aes(x=supp,y=len))\n\n\n\n\n\n\n\n\nAs we can see the aesthetics of both geoms have to be defined separately in this plot. To reduce typing we could also write the ggplot as follows.\n\np &lt;- ggplot(ToothGrowth, aes(x=supp,y=len)) \np + stat_boxplot(geom=\"errorbar\", width=0.5) + geom_boxplot()\n\nWhen the aesthetics are specified in the base ggplot object it is not necessary to specify them in the added layers.\n\n\nHeatmaps\nOne popular way of displaying large grids of data is using a heatmap. The tile geom generates a tile at each provided x and y value and uses the fill aesthetic to fill the tiles according to another variable. The border color of the tiles are can be changed by using the color aesthetic.\n\np &lt;- ggplot(ToothGrowth)\n\np + geom_tile(aes(x = supp, y = as.factor(dose), fill = len), color=\"black\")\n\n\n\n\n\n\n\n\nThere are dedicated packages for plotting heatmaps, which also perform horizontal and vertical clustering of the tiles. These are, however, out of the scope of this course, but it should be easy to find them online.",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#facets",
    "href": "ggplot2.html#facets",
    "title": "9  Data visualization using ggplot2",
    "section": "9.4 Facets",
    "text": "9.4 Facets\nApart from using aesthetics to map variables to, ggplot has another feature which can help visualizing data called “facets”. We have added multiple plots to the viewing window before, using “par(mfrow=c(…,…))”. However, after specifying how many plots should be printed in the plot viewer we have to call the plot function multiple times to populate the viewer.\nIf we want to compare the effect of orange juice versus vitamin C depending on the dose we can plot three box plots next to each other.\n\npar(mfrow = c(1, 3))\n\nlow &lt;- ToothGrowth[which(ToothGrowth$dose==0.5),]\nmed &lt;- ToothGrowth[which(ToothGrowth$dose==1),]\nhigh &lt;- ToothGrowth[which(ToothGrowth$dose==2),]\n\nboxplot(low$len~low$supp, main = \"Low dose\", xlab = \"Supplement Type\")\nboxplot(med$len~med$supp, main = \"Medium dose\", xlab = \"Supplement Type\")\nboxplot(high$len~high$supp, main = \"High dose\", xlab = \"Supplement Type\")\n\n\n\n\n\n\n\n\nHowever, using ggplot we can simply map the dose column to a ggplot facet grid. The mapping of variables is not done via a aes(), but in formula form. Variables on the right indicate the columns in the grid and variables on the left indicate the rows of the grid. A “.” can be used if we want to use only one variable for faceting. This will also preserve the scales, making it more easy to compare the three plots. For fun, let’s add the actual data points in an additional geom on top of the box plot.\n\nggplot(ToothGrowth, aes(x=supp,y=len)) + \n    stat_boxplot(geom=\"errorbar\", width=0.5) + \n    geom_boxplot() + geom_point(color=\"red\") + \n    facet_grid(. ~ as.factor(dose))\n\n\n\n\n\n\n\n\nWe can do the same with two variables in a grid.\n\nggplot(ToothGrowth, aes(x=len)) + \n    geom_histogram(bins = 5) + \n    facet_grid(dose ~ as.factor(supp))",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#scales",
    "href": "ggplot2.html#scales",
    "title": "9  Data visualization using ggplot2",
    "section": "9.5 Scales",
    "text": "9.5 Scales\nWhen mapping a variable to one of the aesthetics of a ggplot, ggplot uses the default scales. It is however possible to adjust the scales of the plot and their color using the scales functions. The scales that are generally used the most are those for the x, y, color and fill of the plot. The type of function to adjust the scale of one of the aesthetics depends on the aesthetic and the type of variable (continuous or discrete). Some of the possible scale adjustments, such as limits, transformation, breaks, labels, and color, are exemplified by the plot below.\n\nggplot(ToothGrowth, aes(x=index, y=as.factor(dose), color=len)) + \n    geom_point() + \n    scale_x_continuous(limits=c(1,100), trans = \"log2\", \n        breaks=c(2,4,8,16,32,64), \n        label=c(\"two\",\"four\",\"eight\",\"sixteen\",\"thirtytwo\",\"sixtyfour\")) + \n    scale_y_discrete(label=c(\"low\",\"medium\",\"high\")) + \n    scale_color_gradient2(limits=c(0,40), low = \"green\", mid = \"black\", high = \"red\", \n        midpoint = 20)\n\n\n\n\n\n\n\n\nHave a look at the scales chapter at http://ggplot2.tidyverse.org/reference/ to explore the other possibilities!",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#themes",
    "href": "ggplot2.html#themes",
    "title": "9  Data visualization using ggplot2",
    "section": "9.6 Themes",
    "text": "9.6 Themes\nUntil now we have simply mapped a variable from our data set to an aesthetics parameter, potentially change the scales, and let ggplot handle the styling of the graph. However, ggplot has many options to customize the style of your plot using themes. There are several standard themes that we can use, however it is possible to create our own style from scratch.\nThe standard themes available in the ggplot package are:\n\ntheme_gray\ntheme_bw\ntheme_linedraw\ntheme_light\ntheme_dark\ntheme_minimal\ntheme_classic\ntheme_void\n\nTo add a standard theme we simply add the theme to the ggplot like we would with a geom.\n\np &lt;- ggplot(ToothGrowth)\np + geom_point(aes(x = index, y = len, color = supp, size = dose)) + theme_light()\n\n\n\n\n\n\n\n\nCustom themes can be made from scratch using the “theme()” function. To have a look at all customization parameters visit http://ggplot2.tidyverse.org/reference/theme.html. Labels can be edited by adding “labs()” to the plot.\n\np &lt;- ggplot(ToothGrowth)\np + geom_point(aes(x = index, y = len, color = supp, size = dose)) + \n    theme(text = element_text(family = \"serif\", colour = \"#6f898e\"), \n      line = element_line(color = \"#163f47\"), \n      rect = element_rect(fill = \"#163f47\", color = \"#163f47\"),\n        axis.text.x = element_text(color=\"black\"), \n        axis.text.y = element_text(color=\"white\"), \n      axis.ticks = element_line(color = \"#6f898e\"), \n      axis.line = element_line(color = \"#163f47\", linetype = 1),\n        legend.background = element_blank(), \n        legend.key = element_blank(), \n        panel.background = element_rect(fill = \"#215c68\", colour = \"#163f47\"), \n        panel.border = element_blank(), \n      panel.grid = element_line(color = \"#163f47\"), \n      panel.grid.major = element_line(color = \"#163f47\"), \n      panel.grid.minor = element_line(color = \"#163f47\"), \n      plot.background = element_rect(fill = NULL, colour = NA, linetype = 0)\n    ) + \n    labs(title=\"Toothgrowth\", \n        subtitle = \"Orange juice or Vitamin C?\", x=\"Index\", y=\"Toothlength\", \n        size=\"Dose\", color=\"Supplement\") +\n    scale_color_manual(label=c(\"Orange juice\",\"Vitamin C\"), \n        values = c(\"VC\"=\"green\",\"OJ\"=\"orange\"))",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#saving-ggplots",
    "href": "ggplot2.html#saving-ggplots",
    "title": "9  Data visualization using ggplot2",
    "section": "9.7 Saving ggplots",
    "text": "9.7 Saving ggplots\nWe can save out plots by using the ggsave() function. ggsave takes two argument, the first argument being the ggplot and the second being the location where the file should be saved. If we do not specify the complete path, it will save the plot in our current working directory (getwd()). The type of the file depends on the file extension we use. Possible file extensions are “eps”, “ps”, “tex” (pictex), “pdf”, “jpeg”, “tiff”, “png”, “bmp”, “svg” or “wmf” (windows only).\n\np &lt;- ggplot(ToothGrowth)\n\nmyplot &lt;- p + geom_point(aes(x = index, y = len, color = supp, size = dose))\n\nggsave(\"my_plot.pdf\",myplot)",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2.html#ggplot2-extensions",
    "href": "ggplot2.html#ggplot2-extensions",
    "title": "9  Data visualization using ggplot2",
    "section": "9.8 ggplot2 extensions",
    "text": "9.8 ggplot2 extensions\nBasic ggplot functions are enough to create a rich variety of plots. However, depending on the field of research, specific plots are popular to visualize specific types of data. Sometimes these plots cannot be made directly from “basic” ggplot. Since ggplot is an opensource package, several people have extended it fulfill the custom needs of users. Many of these ggplot extension packages can be found online with a quick google. The ggplot2 extensions gallery shows some nice examples of add-ons https://exts.ggplot2.tidyverse.org/gallery/. Below are a handful of examples, which we will not explain in detail, but should serve as a source of inspiration.\n\n\n\nggridgeshttps://cran.r-project.org/web/packages/ggridges/\n\n\n\n\n\nplotROC https://github.com/sachsmc/plotROC\n\n\n\n\n\nsurvminer https://rpkgs.datanovia.com/survminer/index.html",
    "crumbs": [
      "ggplot2",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Data visualization using ggplot2</span>"
    ]
  },
  {
    "objectID": "ggplot2_practicals_questions.html",
    "href": "ggplot2_practicals_questions.html",
    "title": "10  ggplot: Questions",
    "section": "",
    "text": "Load the ggplot2 library (install it if you have to) and the diamonds data set using data()\n\n# if needed install.packages(\"ggplot2\")\nlibrary(ggplot2)\ndata(\"diamonds\")\n\n\nQuestion 1\n\n\nExplore the data set using dim(), str() and help(), which variables are continuous, which variables are discrete? Is this data set ready for plotting with ggplot?\n\n\n\n\nQuestion 2\n\n\nUse ggplot to plot a scatterplot of the relationship between the diamonds’ carat a\n\n\n\n\nQuestion 3\n\n\nMake all dots darkblue and set the alpha value to 0.1\n\n\n\n\nQuestion 4\n\n\nVisualize the influence of the color of a diamond on its price by mapping the diamond color to the color aesthetic\n\n\n\n\nQuestion 5\n\n\nUse a ggplot barplot to visualize diamond clarity depending on color, map diamond color to x and diamond clarity to fill\n\n\n\n\nQuestion 6\n\n\nCreate a boxplot of the carat of a diamond based on its clarity and add whiskers using stat_boxplot\n\n\n\n\nQuestion 7\n\n\nAdd a geom_point layer to the previous plot mapping the diamonds price to the color\n\n\n\n\nQuestion 8\n\n\nCreate a histogram of the price of the diamonds and separate the histograms into facets using diamond color, choose a good binwith or number of bins\n\n\n\n\nQuestion 9\n\n\nCreate a grid of facets of the same histogram by comparing both color and cut\n\n\n\n\nQuestion 10\n\n\nUse aggregate(diamonds, by = list(cut = diamonds$cut, color = diamonds$color), mean) to calculate the mean of all variables by cut and color. Create a heatmap of the mean prices by cut and color using geom_tile\n\n\n\n\nQuestion 11\n\n\nChange the title of the heatmap to “Average prices”\n\n\n\n\nQuestion 12\n\n\nChange the gradient of the fill scale using ‘scale_fill_gradient2’. Have it go from darkblue to white to darkred, set the midpoint to 4500\n\n\n\n\nQuestion 13\n\n\nChoose and add a theme to the heatmap, or create a theme yourself using the options listed at http://ggplot2.tidyverse.org/reference/theme.html",
    "crumbs": [
      "ggplot2: Practicals",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>ggplot: Questions</span>"
    ]
  },
  {
    "objectID": "ggplot2_practicals_answers.html",
    "href": "ggplot2_practicals_answers.html",
    "title": "11  ggplot: Answers",
    "section": "",
    "text": "Warning\n\n\n\nMake sure that you try the exercises yourself first before looking at the answers\n\n\n\nQuestion 1Answer 1\n\n\nExplore the data set using dim(), str() and help(), which variables are continuous, which variables are discrete? Is this data set ready for plotting with ggplot?\n\n\nExplore the data set using dim(), str() and help(), which variables are continuous, which variables are discrete? Is this data set ready for plotting with ggplot?\n\ndim(diamonds)\nstr(diamonds)\nhelp(diamonds)\n\n\n\n\n\nQuestion 2Answer 2\n\n\nUse ggplot to plot a scatterplot of the relationship between the diamonds’ carat and their price\n\n\nUse ggplot to plot a scatterplot of the relationship between the diamonds’ carat and their price\n\nggplot() + geom_point(data=diamonds, aes(x=carat, y=price))\n\n#or\n\nggplot(diamonds) + geom_point(aes(x=carat, y=price))\n\n#or\n\nggplot(diamonds, aes(x=carat, y=price)) + geom_point()\n\nCut, color, and clarity are factors, and therefore discrete. The others are numeric continuous variables.\n\n\n\n\nQuestion 3Answer 3\n\n\nMake all dots darkblue and set the alpha value to 0.1\n\n\nMake all dots darkblue and set the alpha value to 0.1\n\nggplot(diamonds, aes(x=carat, y=price)) + geom_point(color=\"darkblue\", alpha=0.1)\n\n\n\n\n\nQuestion 4Answer 4\n\n\nVisualize the influence of the color of a diamond on its price by mapping the diamond color to the color aesthetic\n\n\nVisualize the influence of the color of a diamond on its price by mapping the diamond color to the color aesthetic\n\n#The color of the dots will be overwritten if we specify it statically  \n#in the geom_point function itself\nggplot(diamonds, aes(x=carat, y=price, color=color)) + geom_point(alpha=0.1)\n\n\n\n\n\nQuestion 5Answer 5\n\n\nUse a ggplot barplot to visualize diamond clarity depending on color, map diamond color to x and diamond clarity to fill\n\n\nUse a ggplot barplot to visualize diamond clarity depending on color, map diamond color to x and diamond clarity to fill\n\nggplot(diamonds, aes(x=color, fill=clarity)) + geom_bar()\n\n\n\n\n\nQuestion 6Answer 6\n\n\nCreate a boxplot of the carat of a diamond based on its clarity and add whiskers using stat_boxplot\n\n\nCreate a boxplot of the carat of a diamond based on its clarity and add whiskers using stat_boxplot\n\nggplot(diamonds, aes(x=clarity, y=carat)) + \n    stat_boxplot(geom=\"errorbar\", width=0.5) + \n    geom_boxplot()\n\n\n\n\n\nQuestion 7Answer 7\n\n\nAdd a geom_point layer to the previous plot mapping the diamonds price to the color\n\n\nAdd a geom_point layer to the previous plot mapping the diamonds price to the color\n\nggplot(diamonds, aes(x=clarity, y=carat)) + \n    stat_boxplot(geom=\"errorbar\", width=0.5) + \n    geom_boxplot() + \n    geom_point(aes(color=price))\n\n\n\n\n\nQuestion 8Answer 8\n\n\nCreate a histogram of the price of the diamonds and separate the histograms into facets using diamond color, choose a good binwith or number of bins\n\n\nCreate a histogram of the price of the diamonds and separate the histograms into facets using diamond color, choose a good binwith or number of bins\n\nggplot(diamonds, aes(x=price)) + \n    geom_histogram(binwidth = 100) + \n    facet_grid(color ~ .)\n\n\n\n\n\nQuestion 9Answer 9\n\n\nCreate a grid of facets of the same histogram by comparing both color and cut\n\n\nCreate a grid of facets of the same histogram by comparing both color and cut\n\nggplot(diamonds, aes(x=price)) + \n    geom_histogram(binwidth = 100) + \n    facet_grid(color ~ cut)\n\n\n\n\n\nQuestion 10Answer 10\n\n\nUse aggregate(diamonds, by = list(cut = diamonds$cut, color = diamonds$color), mean) to calculate the mean of all variables by cut and color. Create a heatmap of the mean prices by cut and color using geom_tile\n\n\nUse aggregate(diamonds, by = list(cut = diamonds$cut, color = diamonds$color), mean) to calculate the mean of all variables by cut and color. Create a heatmap of the mean prices by cut and color using geom_tile\n\n#Aggregate uses a function (in this case mean) to aggregate all variables \n#in a given data.frame by a list of variables given in \"by\"\nmean.price &lt;- aggregate(diamonds, by = list(cut = diamonds$cut, color = diamonds$color), mean)\n\nggplot(mean.price, aes(x=cut, y=color, fill=price)) + \n    geom_tile()\n\n\n\n\n\nQuestion 11Answer 11\n\n\nChange the title of the heatmap to “Average prices”\n\n\nChange the title of the heatmap to “Average prices”\n\nggplot(mean.price, aes(x=cut, y=color, fill=price)) + \n    geom_tile() + \n    labs(title=\"Average prices\")\n\n\n\n\n\nQuestion 12Answer 12\n\n\nChange the gradient of the fill scale using ‘scale_fill_gradient2’. Have it go from darkblue to white to darkred, set the midpoint to 4500\n\n\nChange the gradient of the fill scale using ‘scale_fill_gradient2’. Have it go from darkblue to white to darkred, set the midpoint to 4500\n\nggplot(mean.price, aes(x=cut, y=color, fill=price)) + \n    geom_tile() + \n    labs(title=\"Average prices\") + \n    scale_fill_gradient2(low=\"darkblue\", mid=\"white\", high=\"darkred\", midpoint = 4500)\n\n\n\n\n\nQuestion 13Answer 13\n\n\nChoose and add a theme to the heatmap, or create a theme yourself using the options listed at http://ggplot2.tidyverse.org/reference/theme.html\n\n\nChoose and add a theme to the heatmap, or create a theme yourself using the options listed at http://ggplot2.tidyverse.org/reference/theme.html\n\nggplot(mean.price, aes(x=cut, y=color, fill=price)) + \n    geom_tile() + \n    labs(title=\"Average prices\") + \n    scale_fill_gradient2(low=\"darkblue\", mid=\"white\", high=\"darkred\", midpoint = 4500) + \n    theme_minimal()",
    "crumbs": [
      "ggplot2: Practicals",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>ggplot: Answers</span>"
    ]
  },
  {
    "objectID": "functions_intro.html",
    "href": "functions_intro.html",
    "title": "Functions 1",
    "section": "",
    "text": "Functions are things you can do. R comes with predefined functions which do many things from basic file management to complex statistics. To get started, below are some often used functions. This default set of functions is easily extended by defining your own functions and adding those defined by others conveniently in CRAN and BioConductor packages:\nhttp://stat.ethz.ch/R-manual/R-patched/library/base/html/00Index.html\nhttp://cran.r-project.org/web/packages/available_packages_by_name.html\nhttp://www.bioconductor.org/packages/release/bioc/\nFunctions are expressed as:\nfunction.name(), e.g., t.test() or, an operator, e.g., +\nEasily obtain functions from other R users using install.packages():\ninstall.packages(\"packageName\")\nPackages are basically a collection of new functions made by people around the world managed by the “CRAN” package repository team.\nThe package name must be quoted when installing. Besides installing the package on your PC, you need to load it into your R session before you can use it:\nlibrary(packageName)",
    "crumbs": [
      "Functions 1"
    ]
  },
  {
    "objectID": "functions_types.html",
    "href": "functions_types.html",
    "title": "12  Types of available functions",
    "section": "",
    "text": "Built-in Named Functions\nR has an extensive set of built-in functions, a few of which are listed below:\nPrint structure of an object:\n\nstr()\n\nPrint class of an object:\n\nclass()\n\nFirst six elements/rows:\n\nhead()\n\nLast six elements/rows:\n\ntail()\n\nList all objects and functions that you currently made:\n\nls()\n\nGenerate a sequence of values:\n\nseq(from=1, to=10, by=2)\n\n[1] 1 3 5 7 9\n\n\nRun the entire contents of a script:\n\nsource(\"myScript.R\")\n\nFor a (very long) list of all named functions available in base-R have a look at this website:\nhttps://stat.ethz.ch/R-manual/R-patched/library/base/html/00Index.html",
    "crumbs": [
      "Functions 1",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Types of available functions</span>"
    ]
  },
  {
    "objectID": "functions_arguments.html",
    "href": "functions_arguments.html",
    "title": "13  Function arguments",
    "section": "",
    "text": "Input of Functions\nEach function accepts one or more values passed to it as arguments, performs computations or operations on those values, and returns a single result.\nTo use a function, type the name of the function with the values of its argument(s) in parentheses ( ), then hit ‘Enter’. For example:\n\nsqrt(2)\n\n[1] 1.414214\n\n\nValues passed as arguments can be in the form of variables, such as x below:\n\nx &lt;- 2\n\nsqrt(x)\n\n[1] 1.414214\n\n\nor they can be entire expressions, such as x^2 + 5 below:\n\nsqrt(x^2 + 5)\n\n[1] 3\n\n\nMost functions take multiple arguments, each of which has a name, and some of which are optional. One way to see what arguments a function takes and which ones are optional is to use the function args().Another way to view a function’s arguments is to look at its help file by typing a ? in front of the function ’s name like so: ?sqrt\nFor example, to see what arguments round() takes (using args()), we’d type:\n\nargs(round)\n\nfunction (x, digits = 0) \nNULL\n\n\nWe see that round() has two arguments, x, a numeric value to be rounded, and digits, an integer specifying the number of decimal places to round to. Thus to round 4.679 to 2 decimal places, we type:\n\nround(4.679, 2)\n\n[1] 4.68\n\n\n\n\nOptional Arguments and Default Values\nThe specification digits = 0 in the output from args(round) tells us that digits has a default value of 0. This means that it’s an optional argument and if no value is passed for that argument, rounding is done to 0 decimal places (i.e. to the nearest integer).\n\n\nPositional Matching and Named Argument Matching\nWhen we type round(4.679, 2) R knows, by positional matching, that the first value, 4.679, is the value to be rounded and the second one, 2, is the number of decimal places to round to.\nWe can also specify values for the arguments by name. For example:\n\nround(x = 4.679, digits = 2)\n\n[1] 4.68\n\n\nWhen named argument matching is used, as above, the order of the arguments is irrelevant. For example, we get the same result by typing:\n\nround(digits = 2, x = 4.679)\n\n[1] 4.68\n\n\nThe two types of argument specification (positional and named argument matching) can be mixed in the same function call:\n\nround(4.679, digits=2)\n\n[1] 4.68\n\n\nAlthough it may be confusing, it is also possible to specify the first argument in the second position, by using named argument matching for the second argument like so:\n\nround(digits=2, 4.679)\n\n[1] 4.68\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor readability of your code it is advisable to name most of the arguments when calling a function",
    "crumbs": [
      "Functions 1",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Function arguments</span>"
    ]
  },
  {
    "objectID": "functions_custom.html",
    "href": "functions_custom.html",
    "title": "14  Creating your own functions",
    "section": "",
    "text": "14.1 Function environments\nEach function, whether built-in or user-defined, has an associated environment, which can be thought of as a container that holds all of the objects present at the time the function is created.\nWhen a function is created on the command line, it’s environment is the so-called “Global Environment”:\nw &lt;- 2\nf &lt;- function(y) {\n  d &lt;- 3\n  return(d * (w + y))\n}\nenvironment(f)\n\n&lt;environment: R_GlobalEnv&gt;\nThe function objects() (or ls()), when called from the command line, lists the objects in the Global Environment:\nobjects()\n\n [1] \"Ages\"                   \"calc4\"                  \"data\"                  \n [4] \"f\"                      \"mean_vector\"            \"mean_x\"                \n [7] \"mean_xy\"                \"mean_xy_2\"              \"mean_xy_3\"             \n[10] \"my_descriptives\"        \"my_descriptives2\"       \"my_descriptives2_wrong\"\n[13] \"myFun\"                  \"PatientID\"              \"w\"                     \n[16] \"x\"",
    "crumbs": [
      "Functions 1",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Creating your own functions</span>"
    ]
  },
  {
    "objectID": "functions_custom.html#function-environments",
    "href": "functions_custom.html#function-environments",
    "title": "14  Creating your own functions",
    "section": "",
    "text": "Global and Local Variables\nIn the function f() defined above, the variable w is said to be global to f() and the variable d, because it’s created within f(), is said to be local to f(). Global variables (like w) are visible from within a function, but local variables (like d) aren’t visible from outside the function. In fact, local variables are temporary, and disappear when the function call is completed:\n\nf(y = 1)\nd\n\nYou get an error: Error in eval(expr, envir, enclos) : object ‘d’ not found, indicating that the variable d does not exist in the ‘Global Environment’.\nWhen a global and local variable share the same name, the local variable is used:\n\nw &lt;- 2\nd &lt;- 4\n\nf &lt;- function(y) {\n  d &lt;- 3\n  return(d * (w + y))\n}\n\nf(y = 1)\n\n[1] 9\n\n\nNote also that when an assignment takes place within a function, and the local variable shares its name with an existing global variable, only the local variable is affected:\n\nw &lt;- 2\nd &lt;- 4 # This value of d will remain unchanged.\n\nf &lt;- function(y) {\n  d &lt;- 3 # This doesnt affect the value of d in the global environment\n  return(d * (w + y))\n}\n\nf(y = 1)\n\n[1] 9\n\nd\n\n[1] 4",
    "crumbs": [
      "Functions 1",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Creating your own functions</span>"
    ]
  },
  {
    "objectID": "functions_conditional.html",
    "href": "functions_conditional.html",
    "title": "15  Conditional execution using if and else",
    "section": "",
    "text": "If? Then! Else?\nSometimes we’ll want R to execute a statement only if a certain condition is met. This can be accomplished via the if() and (optionally) else statements:\n\nif()    # Used to execute a statement only if the given condition\n        # is met\nelse    # Used to specify an alternative statement to be executed \n        # if the condition given in if() isn't met\n\nSuch conditional execution commands have the forms:\n\nif (condition) {\n  statement1\n}\n\nand\n\nif (condition) {\n  statement1\n} else {\n  statement2\n}\n\nwhere condition is a logical expression (i.e. it evaluates to TRUE or FALSE)\nIn both cases above, if condition is TRUE, statement1 is executed. If condition is FALSE, then in the first case nothing happens, but in the second case, statement2 is executed.\nHere’s a simple example:\n\nx &lt;- 5\nif (x &lt; 10) {\n  y &lt;- 0\n}\ny\n\n[1] 0\n\n\nHere’s another:\n\nif (x &gt;= 10) {\n  y &lt;- 1\n  } else {\n    y &lt;- 0\n}\ny\n\n[1] 0\n\n\nIt is also possible to write short if/else statements on a single line, in that case you do not have to include { }:\n\ny &lt;- if(x &gt;= 10) 1 else 0\ny\n\n[1] 0\n\n\nBe aware that when using such conditional assignment statements, in the absence of else, if() returns NULL if the condition isn’t met. So:\n\ny &lt;- if(x &gt;= 10) 1\ny\n\nNULL\n\n\n\n\nNested if() Statements\nIn addition, if() statements can be nested. The form for nested if() statements is\n\nif(condition1) {\n  if(condition2) {\n    statement1 \n  } else {\n    statement2\n  }\n}\n\nThe else always refers to the most recent if(), but to keep our code readable, we use tab indentation for every level of nesting in our nested if-else statements.\n\n\nif() else() statements in functions\nThe (nested) if() else() statements can be used in functions. In the next example, we expand on the earlier function my_descriptives. The function now first checks whether the function is numeric or a factor. For numeric variables, the negative values are removed and the summary statistics provided. For factors, the negative level (-1) is removed and a table of the variable is given.\n\nmy_descriptives &lt;- function(x){\n  if(class(x) == \"numeric\"){\n    x.trim &lt;- x[x&gt;0]\n    summary(x.trim)\n  } else if (class(x) == \"factor\"){\n    x.trim &lt;- droplevels(x[x!=-1])\n    table(x.trim)\n  }\n}\n\nThe function can now be applied to numeric variables and factors:\n\nmy_descriptives(data$Ages)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  20.00   38.25   45.50   43.58   48.00   66.00 \n\nmy_descriptives(data$Sex)\n\nx.trim\n 0  1 \n14 10 \n\n\nAgain, we compare the output with the standard summary() and table() output:\n\nsummary(data$Ages)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n -50.00   36.00   45.00   39.84   48.00   66.00 \n\ntable(data$Sex)\n\n\n-1  0  1 \n 1 14 10 \n\n\nApart form nesting if() statements it is also possible to string multiple if statements together like so:\n\nwhatAnimalSound &lt;- function(animal){\n  if(animal == \"cat\") {\n    return(\"Meow!\")\n  } else if (animal == \"frog\") {\n    return(\"Ribbit!\")\n  } else if (animal == \"dog\") {\n    return(\"Woof!\")\n  } else {\n    return(paste0(\"I don't know what sound a '\",animal,\"' makes...\"))\n  }\n}\n\n\nwhatAnimalSound(\"dog\")\n\n[1] \"Woof!\"\n\nwhatAnimalSound(\"bird\")\n\n[1] \"I don't know what sound a 'bird' makes...\"\n\n\n\n\n\n\n\n\nTip\n\n\n\nNotice that the last statement can be else, but to string together multiple statements you have to use if else.\n\n\n\n\nVectorized if-else: The ifelse() Function\nSometimes we’ll need to create a vector whose values depend on whether or not the values in another vector satisfies some condition. In that case we can use the ifelse() function, which works on a vector of values by repeating the same conditional statement for every value in the vector.\nifelse() takes argument test, the condition to be met, yes, the return value (or vector of values) when test is TRUE, and no, the return values (or vector of values) when test is FALSE.\nFor example, here we convert the values in height to \"short\" or \"tall\" based on whether they are larger than 69 or not:\n\nheight &lt;- c(69, 71, 67, 66, 72, 71, 61, 65, 73, 70, 68, 74)\n\nhtCategory &lt;- ifelse(height &gt; 69, yes = \"tall\", no = \"short\")\n\nhtCategory\n\n [1] \"short\" \"tall\"  \"short\" \"short\" \"tall\"  \"tall\"  \"short\" \"short\" \"tall\" \n[10] \"tall\"  \"short\" \"tall\" \n\n\nThe ifelse function is a very simple way of applying a test to a vector of values. To apply a more complicated function to a vector or to apply a function to multiple rows of a matrix or a dataframe we can use the apply functions which will be discussed later on.",
    "crumbs": [
      "Functions 1",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Conditional execution using if and else</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_questions.html",
    "href": "functions_practicals1_questions.html",
    "title": "16  Functions 1: Questions",
    "section": "",
    "text": "16.1 Function Arguments",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Functions 1: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_questions.html#function-arguments",
    "href": "functions_practicals1_questions.html#function-arguments",
    "title": "16  Functions 1: Questions",
    "section": "",
    "text": "Question 1\n\n\nLook at the help file for the function mean().\nHow many arguments does the function have?\nWhat types of vectors are accepted?\nWhat is the default setting for dealing with NA values?\n\n\n\n\nQuestion 2\n\n\nUse the function mean() to calculate the mean of the following values:\n\n\n\n\n\n\nNote\n\n\n\nnote the NA and use named argument matching\n\n\n\nc(1, 2, NA, 6)\n\n\n\n\n\nQuestion 3\n\n\nDo Q2 again but rearrange the arguments.\n\n\n\n\nQuestion 4\n\n\nDo Q2 again using positional matching.\n\n\n\n\nQuestion 5\n\n\nDetermine the class of mean() using class().\n\n\n\n\nQuestion 6\n\n\nDetermine the class of mean() using str().\n\n\n\n\nQuestion 7\n\n\nDetermine the class of the value output in Q4 using class().\n\n\n\n\nQuestion 8\n\n\nDetermine the class of the value output in Q4 using str().\n\n\n\n\nQuestion 9\n\n\nUse R as a calculator to calculate the following values:\n17^4=?\n45-2*3=?\n(45-2)*3=?",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Functions 1: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_questions.html#use-the-operators-and-to-do-the-following",
    "href": "functions_practicals1_questions.html#use-the-operators-and-to-do-the-following",
    "title": "16  Functions 1: Questions",
    "section": "16.2 Use the operators %% and %/% to do the following:",
    "text": "16.2 Use the operators %% and %/% to do the following:\n\nQuestion 10\n\n\nCalculate the remainder after dividing 29,079 into 184,277,809.\n\n\n\n\nQuestion 11\n\n\nHow many times does 29,079 go into 184,277,809 (i.e. what’s the integer divide value)?\n\n\n\n\nQuestion 12\n\n\nDo the last calculation from Q8 in another way, like this:\n\na &lt;- 45\nb &lt;- 2\nc &lt;- 3\nd &lt;- (a - b) * c\n\nNow check what a, b, c, and d are. You can just type the variable name (e.g. a) and hit ‘Control+Enter’ or use the command print(a).",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Functions 1: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_questions.html#if-else-and-ifelse-and-vectorization",
    "href": "functions_practicals1_questions.html#if-else-and-ifelse-and-vectorization",
    "title": "16  Functions 1: Questions",
    "section": "16.3 if(), else, and ifelse() and Vectorization",
    "text": "16.3 if(), else, and ifelse() and Vectorization\n\nQuestion 13\n\n\nWrite a function called ‘evenOrOdd’ involving if and else that takes an argument x and returns “Even” or “Odd” depending on whether or not x is divisible by 2. (Do not use the ifelse() function).\n\n\n\n\nQuestion 14\n\n\nIs your function ‘evenOrOdd’ vectorized? Check by passing it the vector:\n\nw &lt;- c(3, 6, 6, 4, 7, 9, 11, 6)\n\n\n\n\n\nQuestion 15\n\n\nAnother way to determine if each element of a vector is even or odd is to use the ifelse() function, which serves as a vectorized version if and else. Use ifelse() to obtain “Even” or “Odd” for each element of w.",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Functions 1: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_questions.html#logical-operators-and",
    "href": "functions_practicals1_questions.html#logical-operators-and",
    "title": "16  Functions 1: Questions",
    "section": "16.4 Logical Operators &, |, and !",
    "text": "16.4 Logical Operators &, |, and !\n\nQuestion 16\n\n\nWhat will be the result of the following:\n\n(10 &lt; 20 && 15 &lt; 16) || 9 == 10\n\n\n\n\n\nQuestion 17\n\n\nOne of the following evaluates to TRUE, the other to FALSE. Which is which?\n\n4 &lt; 3 && (5 &lt; 6 || 8 &lt; 9)\n\n\n(4 &lt; 3 && 5 &lt; 6) || 8 &lt; 9\n\n\n\n\n\nQuestion 18\n\n\nThe data set in ‘BPressure.txt’ contains the systolic and diastolic blood pressure readings for 22 patients.\n\nRead the data from BPressure.txt into a data frame called bp using read.table().\nA person’s blood pressure is classified as normal if the systolic level is below 120 and the diastolic level is below 80. Use relational, and logical operations in square brackets [ ] to extract from bp the rows corresponding to patients with normal blood pressures.\nNow use the same strategy to extract the rows corresponding to patients whose blood pressures aren’t normal.",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Functions 1: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_answers.html",
    "href": "functions_practicals1_answers.html",
    "title": "17  Functions 1: Answers",
    "section": "",
    "text": "17.1 Function Arguments",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Functions 1: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_answers.html#function-arguments",
    "href": "functions_practicals1_answers.html#function-arguments",
    "title": "17  Functions 1: Answers",
    "section": "",
    "text": "Question 1Answer\n\n\nLook at the help file for the function mean().\nHow many arguments does the function have?\nWhat types of vectors are accepted?\nWhat is the default setting for dealing with NA values?\n\n\nThree arguments (plus further arguments).\nNumerical and logical vectors are accepted.\nThe default setting is to NOT remove NA (missing) values.\n\n\n\n\nQuestion 2Answer\n\n\nUse the function mean() to calculate the mean of the following values:\n\n\n\n\n\n\nNote\n\n\n\nnote the NA and use named argument matching\n\n\n\nc(1, 2, NA, 6)\n\n\n\n\nmean(x = c(1, 2, NA, 6), na.rm = TRUE)\n\n[1] 3\n\n\n\n\n\n\nQuestion 3Answer\n\n\nDo Q2 again but rearrange the arguments.\n\n\n\nmean(na.rm = TRUE, x = c(1, 2, NA, 6))\n\n[1] 3\n\n\n\n\n\n\nQuestion 4Answer\n\n\nDo Q2 again using positional matching.\n\n\n\nmean(c(1, 2, NA, 6), 0, TRUE)\n\n[1] 3\n\n\n\n\n\n\nQuestion 5Answer\n\n\nDetermine the class of mean() using class().\n\n\n\nclass(mean)\n\n[1] \"function\"\n\n\nThe class is function.\n\n\n\n\nQuestion 6Answer\n\n\nDetermine the class of mean() using str().\n\n\n\nstr(mean)\n\nfunction (x, ...)  \n\n\nThe class is function.\n\n\n\n\nQuestion 7Answer\n\n\nDetermine the class of the value output in Q4 using class().\n\n\n\nclass(mean(c(1, 2, NA, 6), 0, TRUE))\n\n[1] \"numeric\"\n\n\nThe class is numeric\n\n\n\n\nQuestion 8Answer\n\n\nDetermine the class of the value output in Q4 using str().\n\n\n\nstr(mean(c(1, 2, NA, 6), 0, TRUE))\n\n num 3\n\n\nThe num means the class is numeric.\n\n\n\n\nQuestion 9Answer\n\n\nUse R as a calculator to calculate the following values:\n17^4=?\n45-2*3=?\n(45-2)*3=?\n\n\n\n17^4\n\n[1] 83521\n\n45 - 2 * 3\n\n[1] 39\n\n(45 - 2) * 3\n\n[1] 129",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Functions 1: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_answers.html#use-the-operators-and-to-do-the-following",
    "href": "functions_practicals1_answers.html#use-the-operators-and-to-do-the-following",
    "title": "17  Functions 1: Answers",
    "section": "17.2 Use the operators %% and %/% to do the following:",
    "text": "17.2 Use the operators %% and %/% to do the following:\n\nQuestion 10Answer\n\n\nCalculate the remainder after dividing 29,079 into 184,277,809.\n\n\n\n184277809 %% 29079\n\n[1] 4186\n\n\n\n\n\n\nQuestion 11Answer\n\n\nHow many times does 29,079 go into 184,277,809 (i.e. what’s the integer divide value)?\n\n\n\n184277809 %/% 29079\n\n[1] 6337\n\n\n\n\n\n\nQuestion 12Answer\n\n\nDo the last calculation from Q8 in another way, like this:\n\na &lt;- 45\nb &lt;- 2\nc &lt;- 3\nd &lt;- (a - b) * c\n\nNow check what a, b, c, and d are. You can just type the variable name (e.g. a) and hit ‘Control+Enter’ or use the command print(a).\n\n\n\na &lt;- 45\nb &lt;- 2\nc &lt;- 3\nd &lt;- (a - b) * c\n\n\na\n\n[1] 45\n\nb\n\n[1] 2\n\nc\n\n[1] 3\n\nd\n\n[1] 129",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Functions 1: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_answers.html#if-else-and-ifelse-and-vectorization",
    "href": "functions_practicals1_answers.html#if-else-and-ifelse-and-vectorization",
    "title": "17  Functions 1: Answers",
    "section": "17.3 if(), else, and ifelse() and Vectorization",
    "text": "17.3 if(), else, and ifelse() and Vectorization\n\nQuestion 13Anwser\n\n\nWrite a function called ‘evenOrOdd’ involving if and else that takes an argument x and returns “Even” or “Odd” depending on whether or not x is divisible by 2. (Do not use the ifelse() function).\n\n\n\nevenOrOdd &lt;- function(x) {\n  if(x %% 2 == 0) {\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\n\n\n\n\n\nQuestion 14Answer\n\n\nIs your function ‘evenOrOdd’ vectorized? Check by passing it the vector:\n\nw &lt;- c(3, 6, 6, 4, 7, 9, 11, 6)\n\n\n\n\nevenOrOdd(w)\n\nError in if (x%%2 == 0) {: the condition has length &gt; 1\n\n\nAn error is given, because x in if(x %% 2 == 0) is longer than 1.\n\n\n\n\nQuestion 15Answer\n\n\nAnother way to determine if each element of a vector is even or odd is to use the ifelse() function, which serves as a vectorized version if and else. Use ifelse() to obtain “Even” or “Odd” for each element of w.\n\n\n\nifelse(w %% 2 == 0, \"Even\", \"Odd\")\n\n[1] \"Odd\"  \"Even\" \"Even\" \"Even\" \"Odd\"  \"Odd\"  \"Odd\"  \"Even\"",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Functions 1: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals1_answers.html#logical-operators-and",
    "href": "functions_practicals1_answers.html#logical-operators-and",
    "title": "17  Functions 1: Answers",
    "section": "17.4 Logical Operators &, |, and !",
    "text": "17.4 Logical Operators &, |, and !\n\nQuestion 16Answer\n\n\nWhat will be the result of the following:\n\n(10 &lt; 20 && 15 &lt; 16) || 9 == 10\n\n\n\n\n(10 &lt; 20 && 15 &lt; 16) || 9 == 10\n\n[1] TRUE\n\n\nTRUE because the first statement (in parentheses) is TRUE and the second is FALSE.\n\n\n\n\nQuestion 17Answer\n\n\nOne of the following evaluates to TRUE, the other to FALSE. Which is which?\n\n4 &lt; 3 && (5 &lt; 6 || 8 &lt; 9)\n\n\n(4 &lt; 3 && 5 &lt; 6) || 8 &lt; 9\n\n\n\n\n4 &lt; 3 && (5 &lt; 6 || 8 &lt; 9)\n\n\n(4 &lt; 3 && 5 &lt; 6) || 8 &lt; 9\n\nThe first one FALSE because the first statement before && is FALSE. The second one is TRUE because one of the two statements to the left and right of || is TRUE\n\n\n\n\nQuestion 18Answer\n\n\nThe data set in ‘BPressure.txt’ contains the systolic and diastolic blood pressure readings for 22 patients.\n\nRead the data from BPressure.txt into a data frame called bp using read.table().\nA person’s blood pressure is classified as normal if the systolic level is below 120 and the diastolic level is below 80. Use relational, and logical operations in square brackets [ ] to extract from bp the rows corresponding to patients with normal blood pressures.\nNow use the same strategy to extract the rows corresponding to patients whose blood pressures aren’t normal.\n\n\n\n\n\n\n\nbp &lt;- read.table(\"Data/BPressure.txt\", header=TRUE)\n\n\n\n\n\nbp[(bp$Systolic &lt; 120 & bp$Diastolic &lt; 80), ]\n\n   PatientID Systolic Diastolic\n2         SS       96        60\n3         FR      100        70\n8         JI      110        40\n9         MC      119        66\n12        KD      108        54\n13        DS      110        50\n17        SB      118        76\n21        EC      112        62\n\n\n\n\n\n\nbp[!(bp$Systolic &lt; 120 & bp$Diastolic &lt; 80), ]\n\n   PatientID Systolic Diastolic\n1         CK      120        50\n4         CP      120        75\n5         BL      140        90\n6         ES      120        70\n7         CP      165       110\n10        FC      125        76\n11        RW      133        60\n14        JW      130        80\n15        BH      120        65\n16        JW      134        80\n18        NS      122        78\n19        GS      122        70\n20        AB      122        78\n22        HH      122        82",
    "crumbs": [
      "Functions 1: Practicals",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Functions 1: Answers</span>"
    ]
  },
  {
    "objectID": "functions_intro2.html",
    "href": "functions_intro2.html",
    "title": "Functions 2",
    "section": "",
    "text": "Functions are things you can do. R comes with predefined functions which do many things from basic file management to complex statistics. To get started, below are some oft used functions. This default set of functions is easily extended by defining your own functions and adding those defined by others conveniently in CRAN and BioConductor packages:\nhttp://stat.ethz.ch/R-manual/R-patched/library/base/html/00Index.html\nhttp://cran.r-project.org/web/packages/available_packages_by_name.html\nhttp://www.bioconductor.org/packages/release/bioc/\nFunctions are expressed as:\nfunction.name(), e.g., t.test() or, an operator, e.g., +\nEasily obtain functions from other R users using install.packages():\ninstall.packages(\"packageName\", lib = \"/directory/to/my custom R library\", repos = \"http://cran.xl-mirror.nl\")\nThe package name must be quoted when installing. Besides installing the package on your PC, you need to load it into your R session before you can use it:\nlibrary(\"packageName\") ## quotes are optional when loading a package",
    "crumbs": [
      "Functions 2"
    ]
  },
  {
    "objectID": "functions_terminating.html",
    "href": "functions_terminating.html",
    "title": "18  Terminating a function with returns, errors, and warnings",
    "section": "",
    "text": "The following functions are useful for terminating a function call or just printing a warning message:\n\nreturn()     # Terminate a function call and return a value.\nstop()       # Terminate a function call and print an error message.\nwarning()    # Print a warning message (without terminating the \n             # function call).\n\n\nTerminating a Function Call Using if() and return()\nOne way to terminate a function call is with return() which, when encountered, immediately terminates the call and returns a value. For example:\n\nmySign &lt;- function(x) {\n  if(x &lt; 0) return(\"Negative\")\n  if(x &gt; 0) return(\"Positive\")\n  return(\"Zero\")\n}\n\nPassing mySign() the value x = 13 produces the following:\n\nmySign(x = 13)\n\n[1] \"Positive\"\n\n\n(Note that the last line, return(\"Zero\"), was never encountered during the call to my.sign().)\n\n\nTerminating a Function Call and Printing an Error Message Using if() and stop()\nAnother way to terminate a function call is with stop(), which then prints an error message without returning a value. Here’s an example:\n\nmyRatio &lt;- function(x, y) {\n  if(y == 0) stop(\"Cannot divide by 0\")\n  return(x/y)\n}\n\nAn attempt to pass the value 0 for y now results in the following:\n\nmyRatio(x = 3, y = 0)\n\nError in myRatio(x = 3, y = 0): Cannot divide by 0\n\n\n(Note that the last line, return(x/y), was never encountered during the call to myRatio())\n\n\nPrinting a Warning Message Using if() and warning()\nwarning() just prints a warning message to the screen without terminating the function call. Here’s an example:\n\nmyRatio &lt;- function(x, y) {\n  if(y == 0) warning(\"Attempt made to divide by 0\")\n  return(x/y)\n}\n\nNow when we pass the value 0 for y the function call isn’t terminated (the special value Inf is returned), but we get the warning message:\n\nmyRatio(x = 3, y = 0)\n\nWarning in myRatio(x = 3, y = 0): Attempt made to divide by 0\n\n\n[1] Inf\n\n\nBy adding error messages and warnings to you functions it is easier for you and others using your scripts to figure out what went wrong if your script doesn’t return the anticipated answer.",
    "crumbs": [
      "Functions 2",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Terminating a function with returns, errors, and warnings</span>"
    ]
  },
  {
    "objectID": "functions_looping.html",
    "href": "functions_looping.html",
    "title": "19  Looping",
    "section": "",
    "text": "19.1 for() Loops\nfor() loops are used when we know in advance how many iterations the loop should perform. The general form of a for() loop is:\nfor(i in sequence) {\n  statement1\n  statement2\n  .\n  .\n  .\n  statementq\n}\nwhere sequence is a vector, i (whose name you’re free to change) assumes the values in sequence one after another, each time triggering another iteration of the loop during which statements 1 through q are executed. The statements usually involve the variable i.\nHere’s an example. Suppose we have the data frame describing someone’s coin collection:\ncoins &lt;- data.frame(Coin = c(\"penny\", \"quarter\", \"nickel\", \"quarter\", \"dime\", \"penny\"),\n                    Year = c(1943, 1905, 1889, 1960, 1937, 1900),\n                    Mint = c(\"Den\", \"SF\", \"Phil\", \"Den\", \"SF\", \"Den\"),\n                    Condition = c(\"good\", \"fair\", \"excellent\", \"good\", \"poor\", \"good\"),\n                    Value = c(12.00, 55.00, 300.00, 40.00, 18.00, 28.00),\n                    Price = c(15.00, 45.00, 375.00, 25.00, 20.00, 20.00))\ncoins\n\n     Coin Year Mint Condition Value Price\n1   penny 1943  Den      good    12    15\n2 quarter 1905   SF      fair    55    45\n3  nickel 1889 Phil excellent   300   375\n4 quarter 1960  Den      good    40    25\n5    dime 1937   SF      poor    18    20\n6   penny 1900  Den      good    28    20\nIf we type:\ncolMeans(coins)\n\nError in colMeans(coins): 'x' must be numeric\nwe get an error message because some of the columns are non-numeric. We can compute the means of the numeric columns by looping over the columns, each time checking whether it’s numeric before computing it’s mean:\nmeans &lt;- NULL\nfor(i in 1:ncol(coins)) {\n  if (is.numeric(coins[ , i])) {\n    means &lt;- c(means, mean(coins[ , i]))\n  }\n}\nThe result is:\nmeans\n\n[1] 1922.33333   75.50000   83.33333",
    "crumbs": [
      "Functions 2",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Looping</span>"
    ]
  },
  {
    "objectID": "functions_looping.html#looping-over-list-elements",
    "href": "functions_looping.html#looping-over-list-elements",
    "title": "19  Looping",
    "section": "19.2 Looping Over List Elements",
    "text": "19.2 Looping Over List Elements\nIn the next example, we loop over the elements of a list, printing a list element and recording it’s length during each iteration:\n\nmyList &lt;- list(\n  w = c(4, 4, 5, 5, 6, 6),\n  x = c(\"a\", \"b\", \"c\"),\n  y = c(5, 10, 15),\n  z = c(\"r\", \"s\", \"t\", \"u\", \"v\")\n)\n\nlengths &lt;- NULL\n\nfor(i in myList) {\n  print(i)\n  lengths &lt;- c(lengths, length(i))\n}\n\n[1] 4 4 5 5 6 6\n[1] \"a\" \"b\" \"c\"\n[1]  5 10 15\n[1] \"r\" \"s\" \"t\" \"u\" \"v\"\n\nlengths\n\n[1] 6 3 3 5\n\n\nThese examples are very simple, but looping is a very powerful programming structure for automating analyses, or data processing.\nIn the next chapter we will look at the apply() family of functions, that have been designed for applying functions to a data set in several convenient ways.",
    "crumbs": [
      "Functions 2",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Looping</span>"
    ]
  },
  {
    "objectID": "functions_apply.html",
    "href": "functions_apply.html",
    "title": "20  Using apply functions",
    "section": "",
    "text": "Once you have written a function, you would like to apply it to some piece of data. As described in the previous chapter you can simply enter some values as arguments of the function and run it. However, usually you would like to run the function on all of your data. To do that you could write a for loop that loops through you data and applies the function to the whole dataset. However, there is a special family of functions in R that make it easier to apply your function to a range of different data classes in different ways. This family of functions are called apply functions.\nThe apply functions make it easier to run functions over vectors, matrixes, and data.frames. We will discuss four functions of the apply family that are regularly used apply(), lapply(), sapply() and tapply().\n\nUsing apply on matrices\nThe apply function works by “applying” a specified function to an data object. It requires 3 arguments: the data, a so-called “MARGIN”, and a function. The data can be a vector, data.frame or a matrix. The MARGIN indicates whether you want to apply the function to the rows or the columns of your data, or both. To apply the function to the rows the MARGIN should be 1, to apply it to the columns it should be 2 and to apply it to both it should be c(1,2). The function can be an existing function, such as sum() or mean(), or your own custom function.\nAs an example we will apply the function max() to some data, in this case a matrix.\nFirst we create a matrix of 10 by 10.\n\nmat &lt;- matrix(1:100,nrow=10)\n\nmat\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n [1,]    1   11   21   31   41   51   61   71   81    91\n [2,]    2   12   22   32   42   52   62   72   82    92\n [3,]    3   13   23   33   43   53   63   73   83    93\n [4,]    4   14   24   34   44   54   64   74   84    94\n [5,]    5   15   25   35   45   55   65   75   85    95\n [6,]    6   16   26   36   46   56   66   76   86    96\n [7,]    7   17   27   37   47   57   67   77   87    97\n [8,]    8   18   28   38   48   58   68   78   88    98\n [9,]    9   19   29   39   49   59   69   79   89    99\n[10,]   10   20   30   40   50   60   70   80   90   100\n\n\nThen we apply our function “max” to the matrix rows, indicated with a 1 (notice that we do not run the function by writing max(), but we just give the name of the function that should be run: max).\n\napply(mat, 1, max)\n\n [1]  91  92  93  94  95  96  97  98  99 100\n\n\nThe result of applying the function max to the rows of the matrix is a vector containing the maximal values for each row.\nWe can also determine the maximal value in each column by using 2 as the MARGIN value.\n\napply(mat, 2, max)\n\n [1]  10  20  30  40  50  60  70  80  90 100\n\n\nAs mentionned before, it is also possible to apply the functions to each element in the matrix by using c(1,2). In that case it doesn’t make sense to determine the maximum value, so lets take the square root.\n\napply(mat, c(1,2), sqrt)\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,] 1.000000 3.316625 4.582576 5.567764 6.403124 7.141428 7.810250 8.426150\n [2,] 1.414214 3.464102 4.690416 5.656854 6.480741 7.211103 7.874008 8.485281\n [3,] 1.732051 3.605551 4.795832 5.744563 6.557439 7.280110 7.937254 8.544004\n [4,] 2.000000 3.741657 4.898979 5.830952 6.633250 7.348469 8.000000 8.602325\n [5,] 2.236068 3.872983 5.000000 5.916080 6.708204 7.416198 8.062258 8.660254\n [6,] 2.449490 4.000000 5.099020 6.000000 6.782330 7.483315 8.124038 8.717798\n [7,] 2.645751 4.123106 5.196152 6.082763 6.855655 7.549834 8.185353 8.774964\n [8,] 2.828427 4.242641 5.291503 6.164414 6.928203 7.615773 8.246211 8.831761\n [9,] 3.000000 4.358899 5.385165 6.244998 7.000000 7.681146 8.306624 8.888194\n[10,] 3.162278 4.472136 5.477226 6.324555 7.071068 7.745967 8.366600 8.944272\n          [,9]     [,10]\n [1,] 9.000000  9.539392\n [2,] 9.055385  9.591663\n [3,] 9.110434  9.643651\n [4,] 9.165151  9.695360\n [5,] 9.219544  9.746794\n [6,] 9.273618  9.797959\n [7,] 9.327379  9.848858\n [8,] 9.380832  9.899495\n [9,] 9.433981  9.949874\n[10,] 9.486833 10.000000\n\n\nBecause sqrt also works on matrices, it is actually unnecessary to use apply to run it for each element in the matrix. In cases where functions cannot directly be run on a matrix, apply offers a short and readible alternative to writing a nested for loop.\n\n\nUsing lapply on lists to return lists\nThe lapply function is used to run a function on list objects. Let’s assume we have a list of different sized matrices and we would like to know the dimensions of these matrices. We can then run the function “dim” on the list using lapply. lapply only requires a list object and a function as arguments and always returns a list of results.\n\nmylist &lt;- list(matrix(1:16,nrow=4), matrix(1:9,nrow=3),matrix(1:4,nrow=2))\n\nlapply(mylist, dim)\n\n[[1]]\n[1] 4 4\n\n[[2]]\n[1] 3 3\n\n[[3]]\n[1] 2 2\n\n\nBecause dataframes are lists of lists, it is also possible to run lapply on dataframes. In that case lapply will apply the function to the columns of the data.frame object and it returns a list of values.\n\ndf &lt;- data.frame(\"col1\"=c(1,1,1,1), \"col2\"=c(2,2,2,2), \"col3\"=c(3,3,3,3))\n\nlapply(df, sum)\n\n$col1\n[1] 4\n\n$col2\n[1] 8\n\n$col3\n[1] 12\n\n\n\n\nUsing lapply alternative sapply\nsapply is a user-friendly version of lapply. The difference with lapply is that sapply tries to turn the list of results into a more user-friendly format, such as a vector or a matrix.\nFor the first example the results are turned into a matrix.\n\nsapply(mylist, dim)\n\n     [,1] [,2] [,3]\n[1,]    4    3    2\n[2,]    4    3    2\n\n\nFor the second example, the results are turned into a vector.\n\nsapply(df, sum)\n\ncol1 col2 col3 \n   4    8   12 \n\n\nThere is no difference between lapply and sapply in how the data is used, but it gives you more flexibility in how the results are created.\n\n\nUsing tapply on groups of data\ntapply lets you apply a function on groupings of your data. Imagine that you have a dataset in which a grouping factor separates your data into two groups of patients. With tapply you can apply a function to those two groups separately. The only thing tapply requires is the column you would like to apply the function to, the grouping factor and the function you would like to apply.\n\npatients &lt;- data.frame(\"group\"=paste('grp',c(1,1,1,1,1,1,2,2,2,2,2,2),sep='-'), \"outcome\"=rnorm(12))\npatients\n\n   group      outcome\n1  grp-1  1.296482443\n2  grp-1  0.073787538\n3  grp-1  0.264782226\n4  grp-1 -0.001054132\n5  grp-1  0.025637147\n6  grp-1  1.301770137\n7  grp-2 -1.051873060\n8  grp-2  0.986549391\n9  grp-2  1.753548551\n10 grp-2 -1.598572877\n11 grp-2  1.486200226\n12 grp-2 -0.914966280\n\ntapply(patients$outcome, patients$group, mean)\n\n    grp-1     grp-2 \n0.4935676 0.1101477 \n\n\nIt is also possible to use multiple factors in a list to create groups, which returns a matrix.\n\npatients &lt;- data.frame(\"group\"=paste('grp',c(1,1,1,1,1,1,2,2,2,2,2,2),sep='-'),\n                       \"serotype\"=c(\"A\",\"B\",\"A\",\"B\",\"A\",\"B\",\"A\",\"B\",\"A\",\"B\",\"A\",\"B\"),\n                       \"outcome\"=rnorm(12))\n\ntapply(patients$outcome, list(patients$group, patients$serotype), mean)\n\n                A         B\ngrp-1 -0.08956798 0.1063610\ngrp-2  0.05158519 0.3741057\n\n\nThese are some (trivial) examples of how you can use the apply family of functions to quickly apply a function to your data. It is possible to do the same thing by using for loops, but apply functions are generally faster to write and read. In some cases using apply to run your function can also increase the speed of your code. More on increasing the speed of your code will follow in later lectures.",
    "crumbs": [
      "Functions 2",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Using apply functions</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_questions.html",
    "href": "functions_practicals2_questions.html",
    "title": "21  Functions 2: Questions",
    "section": "",
    "text": "21.1 Function environment and scoping",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Functions 2: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_questions.html#function-environment-and-scoping",
    "href": "functions_practicals2_questions.html#function-environment-and-scoping",
    "title": "21  Functions 2: Questions",
    "section": "",
    "text": "Question 1\n\n\nFor each of the following sets of commands, give the value that will be returned by the last command. Try to answer without using R.\n\n\n\n\nw &lt;- 5\nf &lt;- function(y) {\n  return(w + y)\n}\nf(y = 2)\n\n\n\n\n\nw &lt;- 5\nf &lt;- function(y) {\n  w &lt;- 4\n  return(w + y)\n}\nf(y = 2)\n\n\n\n\n\nQuestion 2\n\n\nAmong the variables w, d, and y, which are global to f() and which are local? What is the value of z when executing f(w)\n\nw &lt;- 2\nf &lt;- function(y) {\n  d &lt;- 3\n  h &lt;- function(z) {\n    return(z + d)\n  }\n  return(y * h(y))\n}\n\n\n\n\n\nQuestion 3\n\n\nDo the following in R:\n\nTry:\n\n\nmyFun1 &lt;- function(a) {\n  b &lt;- 3\n  myFun2(a)\n}\n\nmyFun2 &lt;- function(y) {\n  return(y + a + b)\n}\n\nmyFun1(10)\n\nWhat happens?\n\nNow try:\n\n\na &lt;- 1\nb &lt;- 2\nmyFun1(10)\n\nWhat happens?",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Functions 2: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_questions.html#decorating-a-function-with-returns-errors-and-warnings",
    "href": "functions_practicals2_questions.html#decorating-a-function-with-returns-errors-and-warnings",
    "title": "21  Functions 2: Questions",
    "section": "21.2 Decorating a function with returns, errors, and warnings",
    "text": "21.2 Decorating a function with returns, errors, and warnings\nThe functions warning() and stop() are used to print a warning message and to stop the execution of the function call and print an error message. For example:\n\nnoNegMean &lt;- function(x) {\n  if(all(x &lt; 0)) {\n    stop(\"All values in x are negative\")\n  }\n  \n  if(any(x &lt; 0)) {\n    x[x &lt; 0] &lt;- 0\n    warning(\"Negative values in x replaced by zero\")\n  }\n  \n  return(mean(x))\n}\n\n\nQuestion 1\n\n\nCopy the above code and then pass noNegMean() a vector containing some negative and some positive values. What happens?\n\n\n\n\nQuestion 2\n\n\nWhat happens when you pass noNegMean() a vector containing all negative values?\n\n\n\n\nQuestion 3\n\n\nWrite a function ratio() that takes two arguments, x and y, and attempts to compute the ratio x/y.\nIf both x == 0 & y == 0, the function should stop and print an error message about dividing 0 by 0.\nIf y == 0 (but not x), the function should print a warning message about dividing by 0, and then return x/y (which will be Inf).\nIn all other cases, it should return x/y.\nTest your ratio() function first using two nonzero values for x and y, then using a nonzero x but y = 0, and finally using x = 0 and y = 0.",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Functions 2: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_questions.html#looping-using-for-loops-and-the-apply-functions",
    "href": "functions_practicals2_questions.html#looping-using-for-loops-and-the-apply-functions",
    "title": "21  Functions 2: Questions",
    "section": "21.3 Looping using for() loops and the apply functions",
    "text": "21.3 Looping using for() loops and the apply functions\n\nQuestion 1\n\n\nCopy this is a function to determine if a number is a prime number:\n\nisPrime &lt;- function(num){\n  if (num == 2) {\n    return(TRUE)\n  }\n  if(num &gt; 1) {\n    for(i in 2:(num-1)) {\n      if ((num %% i) == 0) {\n        return(FALSE)\n      }\n    }\n  } else {\n    return(FALSE)\n  }\n  \n  return(TRUE)\n}\n\nCopy this matrix for which we would like to check if a number is a prime number:\n\nmat &lt;- matrix(1:100, nrow=10)\n\nUse the apply() function to calculate the prime number for each number in the matrix.\nWhat numbers from 1 until 100 are prime numbers?\n\n\n\n\nQuestion 2\n\n\nCopy the following command to create a list containing two generations of the famous Kennedy family:\n\nKennedys &lt;- list(\n    JosephJr = character(0),\n    John = c(\"Caroline\", \"JohnJr\", \"Patrick\"),\n    Rosemary = character(0),\n    Kathleen = character(0),\n    Eunice = c(\"RobertIII\", \"Maria\", \"Timothy\", \"Mark\", \"Anthony\"),\n    Patricia = c(\"Christopher\", \"Sydney\", \"Victoria\", \"Robin\"),\n    Robert = c(\"Kathleen\", \"JosephII\", \"RobertJr\", \"David\", \n               \"MaryC\", \"Michael\", \"MaryK\", \"Christopher\", \n               \"Matthew\", \"Douglas\", \"Rory\"),\n    Jean = c(\"Stephen\", \"William\", \"Amanda\", \"Kym\"),\n    Edward = c(\"Kara\", \"EdwardJr\", \"Patrick\")\n)\n\nUse a for() loop to loop over the list of the first generation of Kennedys, keeping track of how many children each one has in a vector.\n\n\n\n\nQuestion 3\n\n\nNow, using the lapply() function, loop over the list of the first generation of Kennedys and keep track of how many children each Kennedy has. What is the class of the output?\n\n\n\n\nQuestion 3\n\n\nAnswer Q2 again using the sapply() function. What is the class of the output?\n\n\n\n\nQuestion 4\n\n\nLoad the “diamonds” dataset from the ggplot2 package by running library(gglot2) and calculate the average price of diamonds by color and clarity using the tapply() function.",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Functions 2: Questions</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_answers.html",
    "href": "functions_practicals2_answers.html",
    "title": "22  Functions 2: Answers",
    "section": "",
    "text": "22.1 Function environment and scoping",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Functions 2: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_answers.html#function-environment-and-scoping",
    "href": "functions_practicals2_answers.html#function-environment-and-scoping",
    "title": "22  Functions 2: Answers",
    "section": "",
    "text": "Question 1Answer\n\n\nFor each of the following sets of commands, give the value that will be returned by the last command. Try to answer without using R.\n\n\n\n\nw &lt;- 5\nf &lt;- function(y) {\n  return(w + y)\n}\nf(y = 2)\n\n\n\n\n\nw &lt;- 5\nf &lt;- function(y) {\n  w &lt;- 4\n  return(w + y)\n}\nf(y = 2)\n\n\n\n\nThis will return 7 because w is 5 and we are evaluating the function at y = 2\nThis will return 6 because w is reassigned as 4 inside the function and we are evaluating the function at y = 2.\n\n\n\n\n\nQuestion 2Answer\n\n\nAmong the variables w, d, and y, which are global to f() and which are local? What is the value of z when executing f(w)\n\nw &lt;- 2\nf &lt;- function(y) {\n  d &lt;- 3\n  h &lt;- function(z) {\n    return(z + d)\n  }\n  return(y * h(y))\n}\n\n\n\nThe object w is global to f() while d and y are local to f().\nz is 2, because it takes the value of y when executing h(y) in function f(), which takes the value of global variable w when executing f(w)\n\n\n\n\nQuestion 3Answer\n\n\nDo the following in R:\n\nTry:\n\n\nmyFun1 &lt;- function(a) {\n  b &lt;- 3\n  myFun2(a)\n}\n\nmyFun2 &lt;- function(y) {\n  return(y + a + b)\n}\n\nmyFun1(10)\n\nWhat happens?\n\nNow try:\n\n\na &lt;- 1\nb &lt;- 2\nmyFun1(10)\n\nWhat happens?\n\n\n\nWe get an error message because a and b are local to myFun1 so the function myFun2 can’t find them in the global environment.\nWe get get the value 13 because the values a and b are global so myFun2 can find them and use them in its commands.",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Functions 2: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_answers.html#decorating-a-function-with-returns-errors-and-warnings",
    "href": "functions_practicals2_answers.html#decorating-a-function-with-returns-errors-and-warnings",
    "title": "22  Functions 2: Answers",
    "section": "22.2 Decorating a function with returns, errors, and warnings",
    "text": "22.2 Decorating a function with returns, errors, and warnings\nThe functions warning() and stop() are used to print a warning message and to stop the execution of the function call and print an error message. For example:\n\nnoNegMean &lt;- function(x) {\n  if(all(x &lt; 0)) {\n    stop(\"All values in x are negative\")\n  }\n  \n  if(any(x &lt; 0)) {\n    x[x &lt; 0] &lt;- 0\n    warning(\"Negative values in x replaced by zero\")\n  }\n  \n  return(mean(x))\n}\n\n\nQuestion 1Answer\n\n\nCopy the above code and then pass noNegMean() a vector containing some negative and some positive values. What happens?\n\n\n\nnoNegMean(c(-1,0,1))\n\nWarning in noNegMean(c(-1, 0, 1)): Negative values in x replaced by zero\n\n\n[1] 0.3333333\n\n\nWe get the warning message and it returned 0.3333, which is the average of c(0, 0, 1).\n\n\n\n\nQuestion 2Answer\n\n\nWhat happens when you pass noNegMean() a vector containing all negative values?\n\n\n\nnoNegMean(c(-1,-1,-1))\n\nError in noNegMean(c(-1, -1, -1)): All values in x are negative\n\n\nWe get the error message and nothing is returned.\n\n\n\n\nQuestion 3Answer\n\n\nWrite a function ratio() that takes two arguments, x and y, and attempts to compute the ratio x/y.\nIf both x == 0 & y == 0, the function should stop and print an error message about dividing 0 by 0.\nIf y == 0 (but not x), the function should print a warning message about dividing by 0, and then return x/y (which will be Inf).\nIn all other cases, it should return x/y.\nTest your ratio() function first using two nonzero values for x and y, then using a nonzero x but y = 0, and finally using x = 0 and y = 0.\n\n\n\nratio &lt;- function(x,y) {\n  if(x == 0 & y == 0) {\n    stop(\"Cannot divide zero by zero.\")\n  }\n\n  if(y == 0) {\n    warning(\"Cannot divide by zero.\")\n  }\n\n  ratio &lt;- x/y\n  return(ratio)\n}\n\n\nratio(2,3)\n\n[1] 0.6666667\n\nratio(0,0)\n\nError in ratio(0, 0): Cannot divide zero by zero.\n\nratio(1,0)\n\nWarning in ratio(1, 0): Cannot divide by zero.\n\n\n[1] Inf",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Functions 2: Answers</span>"
    ]
  },
  {
    "objectID": "functions_practicals2_answers.html#looping-using-for-loops-and-the-apply-functions",
    "href": "functions_practicals2_answers.html#looping-using-for-loops-and-the-apply-functions",
    "title": "22  Functions 2: Answers",
    "section": "22.3 looping using for() loops and the apply functions",
    "text": "22.3 looping using for() loops and the apply functions\n\nQuestion 1Answer\n\n\nCopy this is a function to determine if a number is a prime number:\n\nisPrime &lt;- function(num){\n  if (num == 2) {\n    return(TRUE)\n  }\n  if(num &gt; 1) {\n    for(i in 2:(num-1)) {\n      if ((num %% i) == 0) {\n        return(FALSE)\n      }\n    }\n  } else {\n    return(FALSE)\n  }\n  \n  return(TRUE)\n}\n\nCopy this matrix for which we would like to check if a number is a prime number:\n\nmat &lt;- matrix(1:100, nrow=10)\n\nUse the apply() function to calculate the prime number for each number in the matrix.\nWhat numbers from 1 until 100 are prime numbers?\n\n\n\napply(mat, c(1,2), isPrime)\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10]\n [1,] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n [2,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,]  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\n\nmat[apply(mat, c(1,2), isPrime)]\n\n [1]  2  3  5  7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97\n\n\n\n\n\n\nQuestion 2Answer\n\n\nCopy the following command to create a list containing two generations of the famous Kennedy family:\n\nKennedys &lt;- list(\n    JosephJr = character(0),\n    John = c(\"Caroline\", \"JohnJr\", \"Patrick\"),\n    Rosemary = character(0),\n    Kathleen = character(0),\n    Eunice = c(\"RobertIII\", \"Maria\", \"Timothy\", \"Mark\", \"Anthony\"),\n    Patricia = c(\"Christopher\", \"Sydney\", \"Victoria\", \"Robin\"),\n    Robert = c(\"Kathleen\", \"JosephII\", \"RobertJr\", \"David\", \n               \"MaryC\", \"Michael\", \"MaryK\", \"Christopher\", \n               \"Matthew\", \"Douglas\", \"Rory\"),\n    Jean = c(\"Stephen\", \"William\", \"Amanda\", \"Kym\"),\n    Edward = c(\"Kara\", \"EdwardJr\", \"Patrick\")\n)\n\nUse a for() loop to loop over the list of the first generation of Kennedys, keeping track of how many children each one has in a vector.\n\n\n\nchildren &lt;- NULL\nfor(i in Kennedys){\n  children &lt;- c(children, length(i))\n}\nchildren\n\n[1]  0  3  0  0  5  4 11  4  3\n\n\n\n\n\n\nQuestion 3Answer\n\n\nNow, using the lapply() function, loop over the list of the first generation of Kennedys and keep track of how many children each Kennedy has. What is the class of the output?\n\n\n\nresult &lt;- lapply(Kennedys, length)\nresult\n\n$JosephJr\n[1] 0\n\n$John\n[1] 3\n\n$Rosemary\n[1] 0\n\n$Kathleen\n[1] 0\n\n$Eunice\n[1] 5\n\n$Patricia\n[1] 4\n\n$Robert\n[1] 11\n\n$Jean\n[1] 4\n\n$Edward\n[1] 3\n\nclass(result)\n\n[1] \"list\"\n\n\n\n\n\n\nQuestion 4Answer\n\n\nAnswer Q2 again using the sapply() function. What is the class of the output?\n\n\n\nresult &lt;- sapply(Kennedys, length)\nresult\n\nJosephJr     John Rosemary Kathleen   Eunice Patricia   Robert     Jean \n       0        3        0        0        5        4       11        4 \n  Edward \n       3 \n\nclass(result)\n\n[1] \"integer\"\n\n\n\n\n\n\nQuestion 5Answer\n\n\nLoad the “diamonds” dataset from the ggplot2 package by running library(gglot2) and calculate the average price of diamonds by color and clarity using the tapply() function.\n\n\n\nlibrary(ggplot2)\ntapply(diamonds$price, list(diamonds$color, diamonds$clarity), mean)\n\n        I1      SI2      SI1      VS2      VS1     VVS2     VVS1       IF\nD 3863.024 3931.101 2976.146 2587.226 3030.159 3351.128 2947.913 8307.370\nE 3488.422 4173.826 3161.838 2750.942 2856.294 2499.674 2219.820 3668.506\nF 3342.182 4472.625 3714.226 3756.795 3796.718 3475.513 2804.277 2750.836\nG 3545.693 5021.684 3774.787 4416.256 4131.362 3845.283 2866.821 2558.034\nH 4453.414 6099.895 5032.415 4722.414 3780.689 2649.067 1845.658 2287.870\nI 4302.185 7002.649 5355.020 5690.506 4633.184 2968.233 2034.862 1994.937\nJ 5254.060 6520.958 5186.048 5311.059 4884.461 5142.397 4034.176 3363.882",
    "crumbs": [
      "Functions 2: Practicals",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Functions 2: Answers</span>"
    ]
  },
  {
    "objectID": "represearch.html",
    "href": "represearch.html",
    "title": "Reproducible research",
    "section": "",
    "text": "An analysis is reproducible when all information is available (for somebody) to do your analysis and obtain the same results. This includes the data, code and the documentation. This somebody else can even be your future self.\nWhen data is reproducible it makes it easier to go back and figure out what you did, perform checks and make adjustments. It also makes collaboration with other people easier.\nThere are some software tools that make it easier to do your amalyses in a reproducible way. In this course, we will talk about Quarto and Git.\nQuarto is a program that allows you to combine code and documentation in a single text document. The code is then run and included in the document which is then converted an output format. There are many different options for the output format and they include such things as a pdf, an html file or a word-document.",
    "crumbs": [
      "Reproducible research"
    ]
  },
  {
    "objectID": "basic_markdown.html",
    "href": "basic_markdown.html",
    "title": "23  Basic Markdown",
    "section": "",
    "text": "Markdown\nQuatro files consist of code and markdown. We have discussed how to code in the previous chapters and will discuss markdown here. Markdown is a specific kind of markup language. What we mean by that is that the text in the document also indicates how it should be formatted in the result (For example if we surround a word by double asterikses (like so **bold**) it will bold in the resulting output. Below we will discuss the different types of markup that you can use.\n\nBasic Formatting\n\n\n\nSyntax\nOutput\n\n\n\n\n*italics*\nitalics\n\n\n**bold**\nbold\n\n\n***bold italics***\nbold italics\n\n\nsubscript~2~\nsubscript2\n\n\nsuperscript^2^\nsuperscript2\n\n\n~~crossed out~~\ncrossed out\n\n\n`code`\ncode\n\n\n\n\n\nHeadings\n\n\n\n\n\n\n\nSyntax\nOutput\n\n\n\n\n# Header 1\n24 Header 1\n\n\n## Header 2\n24.1 Header 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6\n\n\n\n\n\n\nLinks\n\n\n\nSyntax\nOutput\n\n\n\n\n&lt;https://www.erasmusmc.nl&gt;\nhttps://www.erasmusmc.nl\n\n\n[EMC](https://www.erasmusmc.nl)\nEMC\n\n\n\n\n\nImages\n\n\n\n\n\n\n\nSyntax\nOutput\n\n\n\n\n![Caption](Logo.svg)\n\n\n\n![Caption](Logo.svg) “hovertext”\n\n\n\n![Caption](Logo.svg){fig-alt=“Alt text”}\n\n\n\n\nIt is also possible to include images in links.\n\n\nLists\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n* item 1\n* item 2\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n\nitem 1\nitem 2\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\n*   item 2\n\n    Part of item (Extra spaces)\n\nitem 2\nPart of item (Extra spaces)\n\n\n\n1. ordered list\n2. item 2\n    i) sub-item 1\n    ii) sub-item 2\n         A.  etc.\n\nordered list\nitem 2\n\nsub-item 1\nsub-item 1\n\nA.  etc.\n\n\n\n\n\n\nTables\nThere are multiple ways to make tables\nThe easiest way is to use a so called pipe-table like this:\n | foo|  bar  | Left align | Right Align | Center |\n |----|-------|:-----------|------------:|:------:|\n | 1  |    2  | 1  |    2  | 1|  \n | 3  |    4  |3  |    4  | 4 |\n \n : an optional caption\nThe result is:\n\nan optional caption\n\n\nfoo\nbar\nLeft align\nRight Align\nCenter\n\n\n\n\n1\n2\n1\n2\n1\n\n\n3\n4\n3\n4\n4\n\n\n\nThe first and last pipe character at each row are optional, the ones separating the columns are not although they do not have to be aligned. The header cannot be omitted. The relative width is determined by the number of dashes.\nAn alternative way to specify the relative column widths is by including the attribute after the caption, like this:\n: an optional caption {tbl-colwidths=\"[40,15,15,15,15]\"} \nSometimes it is easiest to directly make the tables from R code.\n\n\nSource code\nYou can use delimited blocks with three backticks to use source code formatting. The syntax:\n````\nfoo &lt;- bar\n````\nBecomes:\nfoo &lt;- bar\nIt is possible to add an R to indicate the R language is used and apply apropriate highlighting:\n``` R\nfoo &lt;- bar\n```\nBecomes:\nfoo &lt;- bar\n\n\nMath\nYou can use TeX like syntax to format equations. Inline formulas are delimeted by single $s and display math uses double $$s.\n\n\n\nSyntax\nOutput\n\n\n\n\n$a2=b2+c^2$\n\\(a^2=b^2+c^2\\)\n\n\n$$a2=b2+c^2$$\n\\[a^2=b^2+c^2\\]",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Basic Markdown</span>"
    ]
  },
  {
    "objectID": "codeblocks.html",
    "href": "codeblocks.html",
    "title": "24  Code Blocks",
    "section": "",
    "text": "24.1 Introduction\nThe main feature of quarto is that we can interweave the text with code blocks. These code blocks are the point of discussion of this section.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Code Blocks</span>"
    ]
  },
  {
    "objectID": "codeblocks.html#code-blocks",
    "href": "codeblocks.html#code-blocks",
    "title": "24  Code Blocks",
    "section": "24.2 Code blocks",
    "text": "24.2 Code blocks\nWhen we include a code block (also called chunk) we start by writing three backticks (```) followed by the name of the language you use in the code block (we will only use R) surrounded with braces. The chunk again is ended by writing three backticks. So the whole thing looks like this\n```{r}\n1 + 1\n```\nOptionally you can also include a chunk name after the name of the language. This helps if there are any errors as the chunk name will be included in the error message. Additionally figures that are created within the code will use the chunk name in the name of the figure.\n```{r examplename}\nBy default, when the document is rendered the code in the chunks will be executed and both the contents of the code block as the output will be included in the document. Execution of the code, insertion of the code and insertion of the output can be suppressed by so-called chunk options (see below). A given ducument can include manu code chunks that all will be executed in order. Variables that are defined in a certain code block can be used in the following ones, just as if the code would have formed a single R-script.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Code Blocks</span>"
    ]
  },
  {
    "objectID": "codeblocks.html#chunk-options",
    "href": "codeblocks.html#chunk-options",
    "title": "24  Code Blocks",
    "section": "24.3 Chunk Options",
    "text": "24.3 Chunk Options\nIt is possible to modify the behavior of how the code blocks are executed. This is done by including special comments at the top of the code blocks. Alternatively we can include them between the braces. That is we can either write\n```{r}\n#| echo: false\n\n# some code\n\n```\nor\n```{r echo=FALSE}\n\n# some code\n\n```\nSome options that are often used are:\n\neval\n\nwhen TRUE (the default) the code is evaluated when FALSE it is not\n\necho\n\nwhen TRUE (default) the source is displayed in the output decument. When it is FALSE it is not.\n\nresults\n\nspecifies how the resuls are displayed. When it is ‘markup’ it is displayed as a code-block. When it is asis it will not be modified. A situation in which this is convinient when the R functions formats its output in html. When ‘hide’ or FALSE the results are not shown at all.\n\nwarning\n\nwhen FALSE, all warnings will be suppressed\n\nmessage\n\nwhen FALSE, all messages (printed by the message function) will be suppressed\n\ninclude\n\nWhen TRUE the output is shown in the document when FALSE all output is suppressed but the code is still executed\n\nfile\n\nthe code content is read from an external file that is named in the option\n\nchild\n\nthe content of an external file is inserted in place",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Code Blocks</span>"
    ]
  },
  {
    "objectID": "codeblocks.html#inline-code",
    "href": "codeblocks.html#inline-code",
    "title": "24  Code Blocks",
    "section": "24.4 Inline code",
    "text": "24.4 Inline code\nBeside complete code blocks it is also possible to include short bits of R code in the running text. The code should be included between `r and ` , for example `r nrow(data_set)`.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Code Blocks</span>"
    ]
  },
  {
    "objectID": "codeblocks.html#yaml-header",
    "href": "codeblocks.html#yaml-header",
    "title": "24  Code Blocks",
    "section": "24.5 YAML header",
    "text": "24.5 YAML header\nEach markdown document starts with a header that specifies such things as the title, author, date and output format. For example\n---\ntitle: \"My document\"\nauthor: \"Sten Willemsen\"\ndate: \"21 May 2023\"\nformat: html\n---\nBesides html we can also create word documents by using output: docx and pdf documents by specifying output: pdf. The last option requires TeX to be installed.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Code Blocks</span>"
    ]
  },
  {
    "objectID": "basic_markdown_practicals_questions.html",
    "href": "basic_markdown_practicals_questions.html",
    "title": "25  Markdown: Questions",
    "section": "",
    "text": "We are going to do an analysis in R using quatro to produce an html file that contains both the code and the results. To help you on your way you can use the file practicaltemplate.qmd that you can find on Canvas.\n\nQuestion 1\n\n\nWe are going to explore the build-in data set ‘ToothGrowth’ that is being loaded in the setup chuck of the template document. Use the kable function to display the first lines of the data.frame to verify the loading of the data.frame succeeded.\n\n\n\n\nQuestion 2\n\n\nIn the second chunk we create histograms for the length of the teeth given the dose and the supplement given. If needed go back to the chapter about creating plots to find information on how to do this.\n\n\n\n\nQuestion 3\n\n\nWe focus on the Guinea pigs that received 2 mg of Vitamin C by either delivery method. Create a new data frame that makes the appropriate selection. What are the mean and median tooth lengths?\n\n\n\n\nQuestion 4\n\n\nUse a statistical test to compare the tooth lengths between delivery methods (still focusing on the highest dose).\n\n\n\n\nQuestion 5\n\n\nNow adjust the text the text of the document to explain what you have done and state your conclusions. Use bold text to indicate the most important points. Use a mathematical formula to state the null hypothesis of your test.\n\n\n\n\nQuestion 6\n\n\nEnd your document with a paragraph of conclusions. Use an unnumbered list to summarize the main points.\n\n\n\n\nQuestion 7\n\n\nChange the markdown so the output from the setup chunk is not shown in the output document.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Markdown: Questions</span>"
    ]
  },
  {
    "objectID": "shiny.html",
    "href": "shiny.html",
    "title": "26  Shiny",
    "section": "",
    "text": "Introduction\nShiny is a tool that allows you to quickly make interactive applications using R that nicely works together with RStudio. You can run the apps on your own computer or host them on a server (for example using Posit Cloud). Before you can run Shiny apps you need to install the shiny package (but if you do not RStudio will prompt you to install it).\n\ninstall.packages(\"shiny\")\n\n\n\nCreating an app\nThere are several ways of creating an shiny application. The easiest way is to use the menus in RSTudio. Click File &gt; New File &gt; Shiny Webb App. You are then presented with a dialog screen where you are asked to give the application a name and create a directory for the app. Nowadays the usual process is that a file app.R is created that contains the code for the user interface and the back end (this is explained later). These two parts used to have their own separate files (ui.R and server.R) and you can still choose this option in the dialog screen. For larger application splitting the code over several files can make it easier to manage so this may still be an interesting option.\nWhen you are more experienced you can also start building an app by creating an app.R file in an empty directory yourself. You can quickly enter the boilerplate code typing shinyapp and pressing Shift-TabShift-Tab.\n\n\nParts of an app: user interface and back end\nIf you inspect the code of the shiny app you see that it consists of two parts: a user interface and the back end (server) part.\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  # code to define the user interface goes here\n)\n\nserver &lt;- function(input, output, session) {\n  # code to define the back end goes here\n}\n\nshinyApp(ui, server)\n\n\n\nStarting and stopping the application\nWhen you want to run the app you can click on the Run App button in the tool bar of the source pane. You can also use the shortcut Ctrl-Shift-EnterCtrl-Shift-Enter. As a last option you can use the runApp() function giving the directory of the application as an argument.\nTo stop the application you can press the stop sign in the toolbar of the console pane, press escape when the R console pane is selected or simply close the application window.\n\n\nInput controls\nWe want our application to receive input from a user and be able to show results (that are based on this inputs) back to the user. These things are done using controls that are placed on the interface.\nLet us first look at input controls and change the ui to look like this:\n\nui &lt;- fluidPage(\n  sliderInput(\"n\",\n              \"Enter a number:\",\n              min = 1,\n              max = 10,\n              value = 2),\n  print('hello there')\n\n)\n\nHere ui takes a value from fluidpage. This is an example of a layout function that is a function that creates the layout of our application. A fluid page layout is a application layout that structures its elements in rows which may in turn have columns. Often the layout is given more structure by using further layout functions. Here we place a single input control on the fluid page which allows the user to select a number between 1 and 10 using a slider. The first argument to the function is the inputID, this is the name that we can use to refer to the value that the user has selected. The second argument is the label which is just that text that is displayed just above the slider. It is used to inform the reader what the function of the control is.\n\n\nThe server function\nThe function does not do anything at the moment. This is because the server function is empty. If we want to add functionality we need to add this to the body of this function. Let’s simulate the results of the total from some dice throws.\n\nserver &lt;- function(input, output, session) {\n  output$total &lt;- renderText({\n    sum(ceiling(runif(input$n, 0, 6)))\n  })\n}\n\nHere we are defining an output that is called total. This is done using a render function a function that tells R how a results should be displayed. The renderText function can be used for R object that can be displayed as text. As an argument to the function we give it the code that can be used to calculate the result.  Within this code we refer toinput$n` which is de number we have entered using the slider.\n\n\nOutput controls\nWhen we actually want to show the output we need to add the total output control to the user interface. This can been done as follows:\n\nui &lt;- fluidPage(\n  sliderInput(\"n\",\n              \"Enter a number:\",\n              min = 1,\n              max = 10,\n              value = 2),\n  textOutput(\"total\")\n\n)",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Shiny</span>"
    ]
  },
  {
    "objectID": "shiny_practicals_questions.html",
    "href": "shiny_practicals_questions.html",
    "title": "27  Shiny: Questions",
    "section": "",
    "text": "The goal of this practical is to create a beautiful shiny application. The app’s goal is to show the Hoftiezer Birthweight curves and use these curves to determine the birthweight percentile of a certain infant.\n\nQuestion 1\n\n\nDownload the hoftiezer.R file from canvas to get started. This file contains two functions you can use: phoftiezer and qhoftiezer. The first one calculates Hoftiezer Birthweight percentiles given Birthweight (in grams), gestational age (in days) and sex. The second function does the reverse and calculates Birthweight (in grams) given a percentile, gestational age and sex. Although you don’t need to know every detail about this function, being how to use it is crucial for the practical.\n\nUsing this function calculate the birthweight percentile of a boy with a gestational age of 200 days that weights 1500 grams. Also try to calculate the percentile for this given weight for all integer gestational ages between 210 and 220 days.\nUsing this function calculate the median birthweight of a girl with a gestational age of 200 days. Also calculate the P05 (5th percentile) for girls for all integer ages between 210 and 220.\n\n\n\n\n\nQuestion 2\n\n\nNow we are going to make our shiny app. While thee is a wizard to create shiny apps. Here we are going to start using a basic R file. To do this create a new directory for you app. Now create a new R file save it in this directory and give it the name app.R. Copy and paste the following code in this file:\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n    # Application title\n    titlePanel(\"Birthweight percentiles\")\n)\n\nserver &lt;- function(input, output) {\n# nothing here yet\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\nIf you save the file a green arrow should appear in the source toolbar in RStudio. When you click it the app will run! Of course the app will not do very much (it only shows it title). To stop the app either close the app window or click on the red stop sign on the R console toolbar.\n\n\n\n\nQuestion 3\n\n\nWe want our app to be able to calculate birthwight percentiles. Therefore it needs access to the qhoftiezer and phoftiezer functions. In order to do so you could simply copy and paste the code from hoftiezer.R to app.R. A slightly more elegant way is the source the contents of this file. Save the hoftiezer.R file in the directory you created. Now include the line source('hoftiezer.R') in the app.R file (just before the definition of ui is a good place). To test if the app can access the function we use in in the interface. The start of your file should now look like this\n\nlibrary(shiny)\n\nlibrary(shiny)\nsource('hoftiezer.R')\nui &lt;- fluidPage(\n  # Application title\n  titlePanel(\"Birthweight percentiles\"),\n  phoftiezer(q = 0.5, ga = 220, sex='female')\n)\n\n# ...\n\n\n\n\n\nQuestion 4\n\n\nWe now will modify the layout of the app to ask for user input at the left of the window and show its results to the right. In shiny this can be done by including a sidebarLayout within the fluidPage function. A function that in turn includes a sidebarpanel and a mainPanel function. The sidebarLayout should include controls that ask for an infacts birthweight, gestational age and sex. This is now used to calculate the birthweight percentile wich is shown in the main panel. We start with just a control to ask the user for birthweight and ask the other information later. Modify the ui to look like the following:\n\nui &lt;- fluidPage(\n    # Application title\n    titlePanel(\"Birthweight percentiles\"),\n    sidebarLayout(\n        sidebarPanel(\n          numericInput(\"birthweight\",\n                        \"Birthweight in gramms:\",\n                        min = 100,\n                        max = 6000,\n                        value = 1000)\n    ),\n        # Show percentile\n        mainPanel(\n        phoftiezer(q = 0.5, ga = 220, sex='female')\n        )\n    )\n)\n\n# ...\n\nWithin the numericInput function the first parameter specifies the inputId, the name we will use the refer to the value the user entered here. The second parameter specifies the label: This is just a text that is used to prompt the user for the value. The other arguments specify the minimum and maximum value that can be entered as well as the default value of the control.\n\n\n\n\nQuestion 5\n\n\nYou have probably noticed that in its present form the app doesn’t take any action based on the birth weight entered by the user. To address this, it’s essential to conduct the required calculations within our server function. Update the server function to resemble the following:\n\nserver &lt;- function(input, output) {\n  output$percentile &lt;- renderText({\n    phoftiezer(q = input$birthweight,\n               ga = 220,\n               sex = 'female')\n  })\n\nWith the assignment output$percentile &lt;- renderText(...) you define a Shiny output with the name percentile. The right-hand side features a render function, which, in this case, specifies that the calculated results should be displayed as text. Shiny offers various render functions tailored for different types of results, such as text, tables, plots, and more. Within phoftiezer function we now use input$birthweight indicating that the value in the input control that is called birthweight will be used in the calculations. To display the results from output$percentile, replace the phoftiezer function call in the main panel with textOutput(\"percentile\")\nVerify if the app behaves as you expect.\n\n\n\n\nQuestion 6\n\n\nAdditionally, we would like to be able specify the infants’ sex and gestational age. To do this we need to add two more controls to the sidebarPanel function. Use a sliderInput for gestational age and a selectInput for sex. Use the documentation to check how these functions work. Note that the input control functions need to be separated by commas. Modify the server function to use the input from these controls.\n\n\n\n\nQuestion 7\n\n\nTo make our app somewhat better looking we are going to include a plot. To include the plot in the main panel include the line plotOutput(\"distPlot\") in the mainPanel function. Don’t forget to use commas to divide up the different controls. output$distPlot now needs to be defined within the server function. Define a series of gestational ages ranging from 161 to 294 within this function. Use this sequence to calculate the median birth weight using the qhoftiezer function. Do the same for the 5th and 95th percentile. Now plot these (for example using the matplopt function). Using the points function, add user input to the plot as the final step.",
    "crumbs": [
      "Reproducible research",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Shiny: Questions</span>"
    ]
  },
  {
    "objectID": "looseends.html",
    "href": "looseends.html",
    "title": "Loose ends",
    "section": "",
    "text": "As an appendix to this course we also discuss the tidyverse. This is a collection of packages that replicates some of the core functionality of R.",
    "crumbs": [
      "Loose ends"
    ]
  },
  {
    "objectID": "tidyverse.html",
    "href": "tidyverse.html",
    "title": "28  Tidyverse",
    "section": "",
    "text": "28.1 Introduction\nThe so called tidyverse is a collection of connected R-packages that are created by the same people that also made R-studio. You have already seen one of these packages: ggplot. Like ggplot, many of these packages do things that could, in principle, also be done in base R but in a may that some people find more intuitive. Because these packages are so and general popular it may well well happen that when you try to find something R-related on the internet you find a solution using the tidyverse. For this reason we give a short introduction to the tidyverse here.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#tibble",
    "href": "tidyverse.html#tibble",
    "title": "28  Tidyverse",
    "section": "28.2 tibble",
    "text": "28.2 tibble\nThe package tibble provides the tibble class and some functions to work with this class. A tibble is an alternative to a data.frame and is mostly (but not completely) compatible with this class. The most important differences are the following: Unlike a data.frame a tibble does not use row names. When a single column is selected from a data.frame using [,] the result is converted to a vector. This does not happen with a tibble. Finally, when a tibble is printed only a few rows and columns are shown. tibble is an important package because most other tidyverse packages use tibbles.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#dplyr",
    "href": "tidyverse.html#dplyr",
    "title": "28  Tidyverse",
    "section": "28.3 dplyr",
    "text": "28.3 dplyr\nThe dplyr package provides new methods to do data manipulation. It also provides the so-called pipe operator %&gt;% that takes the output of a function on the left-hand-side and uses it as input for a function on the right (by default as the fist argument). This often can make long sequences of transformations much more readable.\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nstarwars %&gt;% \n  select(mass, height, gender, homeworld) %&gt;% \n  group_by(gender, homeworld) %&gt;% \n  filter(mass &gt; mean(mass, na.rm = TRUE)) %&gt;% \n  summarise(min_height=min(height,na.rm = TRUE), n=n())\n\n`summarise()` has grouped output by 'gender'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 7 × 4\n# Groups:   gender [2]\n  gender    homeworld min_height     n\n  &lt;chr&gt;     &lt;chr&gt;          &lt;int&gt; &lt;int&gt;\n1 feminine  Mirial           170     1\n2 masculine Corellia         180     1\n3 masculine Kamino           229     1\n4 masculine Kashyyyk         234     1\n5 masculine Naboo            170     3\n6 masculine Tatooine         178     2\n7 masculine &lt;NA&gt;             193     2",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#readr",
    "href": "tidyverse.html#readr",
    "title": "28  Tidyverse",
    "section": "28.4 readr",
    "text": "28.4 readr\nA package to read text files, mostly much faster than base R does.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#purrr",
    "href": "tidyverse.html#purrr",
    "title": "28  Tidyverse",
    "section": "28.5 purrr",
    "text": "28.5 purrr\nThe package purrr makes functional programming with R easier. That is it contains methods that apply functions to the elements of lists or otherwise work with lists and functions. An example is shown below:\n\nlibrary(dplyr)\nlibrary(purrr)\ndata(\"ToothGrowth\")\nToothGrowth %&gt;% \n  split(.$supp) %&gt;% \n  map(function(x) lm(len ~ dose, data=x)) %&gt;% \n  map(coef) %&gt;% \n  bind_rows()\n\n# A tibble: 2 × 2\n  `(Intercept)`  dose\n          &lt;dbl&gt; &lt;dbl&gt;\n1         11.5   7.81\n2          3.29 11.7",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#forcats",
    "href": "tidyverse.html#forcats",
    "title": "28  Tidyverse",
    "section": "28.6 forcats",
    "text": "28.6 forcats\nThis package makes working with factors easier.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#stringr",
    "href": "tidyverse.html#stringr",
    "title": "28  Tidyverse",
    "section": "28.7 stringr",
    "text": "28.7 stringr\nThe stringr package helps you ro work with character data (strings). It does things like merging and splitting and otherwise manipulating character variables and finding and selecting substrings in larger strings.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  },
  {
    "objectID": "tidyverse.html#tidyr",
    "href": "tidyverse.html#tidyr",
    "title": "28  Tidyverse",
    "section": "28.8 tidyr",
    "text": "28.8 tidyr\nThe tidyr package can be used to make data.frames or tibbles ‘tidy’. That is make sure it is organised in a way so that each variable is in a column of its own and each observation has a separate row. This is the format that is expected by most functions in R. However many data sets (for example from excel) do not have this structure. The package also contains functions to reshape data (from long to wide format or vice-versa) or work with nested data, that is tibbles that are stored in single cells of an other table.",
    "crumbs": [
      "Loose ends",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Tidyverse</span>"
    ]
  }
]