# Basic Markdown

### Markdown

Quatro files consist of code and markdown. We have discussed how to code in the previous chapters and will discuss markdown here. Markdown is a specific kind of markup language. What we mean by that is that the text in the document also indicates how it should be formatted in the result (For example if we surround a word by double asterikses (like so \*\*bold\*\*) it will **bold** in the resulting output. Below we will discuss the different types of markup that you can use.

#### Basic Formatting

```{r echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
library(tibble)
library(knitr)
tt <- tribble(~Syntax, ~Output,
              "\\*italics\\*", "*italics*",
              "\\*\\*bold\\*\\*", "**bold**",
              "\\*\\*\\*bold italics\\*\\*\\*", "***bold italics***",
              "subscript\\~2\\~", "subscript~2~",
              "superscript\\^2\\^", "superscript^2^",
              "\\~\\~crossed out\\~\\~", "~~crossed out~~",
              "\\`code\\`", "`code`",
              )
kable(tt)

```

#### Headings

+---------------------+-----------------------------------+
| Syntax              | Output                            |
+=====================+===================================+
|     # Header 1      | # Header 1 {.heading-output}      |
+---------------------+-----------------------------------+
|     ## Header 2     | ## Header 2 {.heading-output}     |
+---------------------+-----------------------------------+
|     ### Header 3    | ### Header 3 {.heading-output}    |
+---------------------+-----------------------------------+
|     #### Header 4   | #### Header 4 {.heading-output}   |
+---------------------+-----------------------------------+
|     ##### Header 5  | ##### Header 5 {.heading-output}  |
+---------------------+-----------------------------------+
|     ###### Header 6 | ###### Header 6 {.heading-output} |
+---------------------+-----------------------------------+

```{=html}
<style type="text/css">
.heading-output {
  border-bottom: none;
  margin-top: 0;
  margin-bottom: 0;
}
</style>
```

#### Links

```{r echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
library(tibble)
library(knitr)
tt <- tribble(~Syntax, ~Output,
              "  &lt;https://www.erasmusmc.nl&gt; ", " <https://www.erasmusmc.nl>",
              "  \\[EMC\\](https://www.erasmusmc.nl) ", " [EMC](https://www.erasmusmc.nl)"
              )
kable(tt)

```

#### Images

```{r echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
library(tibble)
library(knitr)
tt <- tribble(~Syntax, ~Output,
              "  !\\[Caption\\](Logo.svg) ", " ![Caption](assets/Logo.svg) ",
              '  !\\[Caption\\](Logo.svg) "hovertext"', ' ![Caption](assets/Logo.svg "hovertext") ',
              '  !\\[Caption\\](Logo.svg){fig-alt="Alt text"} ', ' ![Caption](assets/Logo.svg){fig-alt="Alt text"} '
              )
kable(tt)

```

It is also possible to include images in links.

#### Lists


+----------------------------------------+-------------------------------------+
| Markdown Syntax                        | Output                              |
+========================================+=====================================+
|     * item 1                           | -   item 1                          |
|     * item 2                           | -   item 2                          |
|         + sub-item 1                   |                                     |
|         + sub-item 2                   |     -   sub-item 1                  |
|             - sub-sub-item 1           |                                     |
|                                        |     -   sub-item 2                  |
|                                        |                                     |
|                                        |         -   sub-sub-item 1          |
+----------------------------------------+-------------------------------------+
|     *   item 2                         | -   item 2                          |
|                                        |                                     |
|         Part of item (Extra spaces)    |     Part of item (Extra spaces)     |
+----------------------------------------+-------------------------------------+
|     1. ordered list                    | 1.  ordered list                    |
|     2. item 2                          |                                     |
|         i) sub-item 1                  | 2.  item 2                          |
|         ii) sub-item 2                 |                                     |
|              A.  etc.                  |     i)  sub-item 1                  |
|                                        |     ii)  sub-item 1                 |
|                                        |                                     |
|                                        |         A.  etc.                    |
+----------------------------------------+-------------------------------------+


#### Tables

There are multiple ways to make tables

The easiest way is to use a so called pipe-table like this:

     | foo|  bar  | Left align | Right Align | Center |
     |----|-------|:-----------|------------:|:------:|
     | 1  |    2  | 1  |    2  | 1|  
     | 3  |    4  |3  |    4  | 4 |
     
     : an optional caption

The result is:


| foo|  bar  | Left align | Right Align | Center |
|-----|-------|:-----------|------------:|:------:|
| 1  |    2  | 1  |    2  | 1|  
| 3  |    4  |3  |    4  | 4 |

: an optional caption

The first and last pipe character at each row are optional, the ones separating the columns are not although they do not have to be aligned. The header cannot be omitted. The relative width is determined by the number of dashes.

An alternative way to specify the relative column widths is by including the attribute after the caption, like this:
```` markdown
: an optional caption {tbl-colwidths="[40,15,15,15,15]"} 
````


Sometimes it is easiest to directly make the tables from R code.

#### Source code

You can use delimited blocks with three backticks to use source code formatting. The syntax:


\`\`\`\`

foo <- bar

\`\`\`\`


Becomes:


````
foo <- bar
````


It is possible to add an R to indicate the R language is used and apply apropriate highlighting:

```` markdown
``` R
foo <- bar
```
````


Becomes:


``` R
foo <- bar
```

#### Math

You can use TeX like syntax to format equations. Inline formulas are delimeted by single \$s and display math uses double \$\$s.


```{r echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
library(tibble)
library(knitr)
tt <- tribble(~Syntax, ~Output,
              "  \\$a^2=b^2+c^2\\$", " $a^2=b^2+c^2$ ",
              '  \\$\\$a^2=b^2+c^2\\$\\$', ' $$a^2=b^2+c^2$$ '
              )
kable(tt)

```

